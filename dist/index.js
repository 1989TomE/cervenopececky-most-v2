/*! For license information please see index.js.LICENSE.txt */
(()=>{var e={679:(e,t,n)=>{"use strict";var r=n(864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var i=c(n);f&&(i=i.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<i.length;++v){var g=i[v];if(!(a[g]||r&&r[g]||m&&m[g]||l&&l[g])){var y=d(n,g);try{s(t,g,y)}catch(e){}}}}return t}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var i,l,u=o(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))n.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),a=n(840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=g.hasOwnProperty(t)?g[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=60103,S=60106,j=60107,E=60108,O=60114,C=60109,P=60110,z=60112,_=60113,T=60120,A=60115,N=60116,L=60121,R=60128,I=60129,M=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;x=F("react.element"),S=F("react.portal"),j=F("react.fragment"),E=F("react.strict_mode"),O=F("react.profiler"),C=F("react.provider"),P=F("react.context"),z=F("react.forward_ref"),_=F("react.suspense"),T=F("react.suspense_list"),A=F("react.memo"),N=F("react.lazy"),L=F("react.block"),F("react.scope"),R=F("react.opaque.id"),I=F("react.debug_trace_mode"),M=F("react.offscreen"),D=F("react.legacy_hidden")}var V,U="function"==typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=U&&e[U]||e["@@iterator"])?e:null}function $(e){if(void 0===V)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);V=t&&t[1]||""}return"\n"+V+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?$(e):""}function K(e){switch(e.tag){case 5:return $(e.type);case 16:return $("Lazy");case 13:return $("Suspense");case 19:return $("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case j:return"Fragment";case S:return"Portal";case O:return"Profiler";case E:return"StrictMode";case _:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case z:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case A:return q(e.type);case L:return q(e._render);case N:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function G(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Q(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Q(n)}}function se(e,t){var n=Q(t.value),r=Q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function je(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ee(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Oe=null,Ce=null,Pe=null;function ze(e){if(e=Jr(e)){if("function"!=typeof Oe)throw Error(i(280));var t=e.stateNode;t&&(t=to(t),Oe(e.stateNode,e.type,t))}}function _e(e){Ce?Pe?Pe.push(e):Pe=[e]:Ce=e}function Te(){if(Ce){var e=Ce,t=Pe;if(Pe=Ce=null,ze(e),t)for(e=0;e<t.length;e++)ze(t[e])}}function Ae(e,t){return e(t)}function Ne(e,t,n,r,o){return e(t,n,r,o)}function Le(){}var Re=Ae,Ie=!1,Me=!1;function De(){null===Ce&&null===Pe||(Le(),Te())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=to(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Ve=!1;if(f)try{var Ue={};Object.defineProperty(Ue,"passive",{get:function(){Ve=!0}}),window.addEventListener("test",Ue,Ue),window.removeEventListener("test",Ue,Ue)}catch(me){Ve=!1}function Be(e,t,n,r,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var $e=!1,He=null,We=!1,Ke=null,qe={onError:function(e){$e=!0,He=e}};function Qe(e,t,n,r,o,a,i,l,u){$e=!1,He=null,Be.apply(qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ye(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Xe(o),e;if(a===r)return Xe(o),t;a=a.sibling}throw Error(i(188))}if(n.return!==r.return)n=o,r=a;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,at=[],it=null,lt=null,ut=null,st=new Map,ct=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=pt(t,n,r,o,a),null!==t&&null!==(t=Jr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function vt(e){var t=Zr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){gt(e)&&n.delete(t)}function bt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==it&&gt(it)&&(it=null),null!==lt&&gt(lt)&&(lt=null),null!==ut&&gt(ut)&&(ut=null),st.forEach(yt),ct.forEach(yt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&wt(it,e),null!==lt&&wt(lt,e),null!==ut&&wt(ut,e),st.forEach(t),ct.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function xt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},jt={},Et={};function Ot(e){if(jt[e])return jt[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in Et)return jt[e]=n[t];return e}f&&(Et=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ct=Ot("animationend"),Pt=Ot("animationiteration"),zt=Ot("animationstart"),_t=Ot("transitionend"),Tt=new Map,At=new Map,Nt=["abort","abort",Ct,"animationEnd",Pt,"animationIteration",zt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",_t,"transitionEnd","waiting","waiting"];function Lt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),At.set(r,t),Tt.set(r,o),s(o,[r])}}(0,a.unstable_now)();var Rt=8;function It(e){if(0!=(1&e))return Rt=15,1;if(0!=(2&e))return Rt=14,2;if(0!=(4&e))return Rt=13,4;var t=24&e;return 0!==t?(Rt=12,t):0!=(32&e)?(Rt=11,32):0!=(t=192&e)?(Rt=10,t):0!=(256&e)?(Rt=9,256):0!=(t=3584&e)?(Rt=8,t):0!=(4096&e)?(Rt=7,4096):0!=(t=4186112&e)?(Rt=6,t):0!=(t=62914560&e)?(Rt=5,t):67108864&e?(Rt=4,67108864):0!=(134217728&e)?(Rt=3,134217728):0!=(t=805306368&e)?(Rt=2,t):0!=(1073741824&e)?(Rt=1,1073741824):(Rt=8,e)}function Mt(e,t){var n=e.pendingLanes;if(0===n)return Rt=0;var r=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)r=a,o=Rt=15;else if(0!=(a=134217727&n)){var u=a&~i;0!==u?(r=It(u),o=Rt):0!=(l&=a)&&(r=It(l),o=Rt)}else 0!=(a=n&~i)?(r=It(a),o=Rt):0!==l&&(r=It(l),o=Rt);if(0===r)return 0;if(r=n&((0>(r=31-$t(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(It(t),o<=Rt)return t;Rt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-$t(t)),r|=e[n],t&=~o;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Vt(24&~t))?Ft(10,t):e;case 10:return 0===(e=Vt(192&~t))?Ft(8,t):e;case 8:return 0===(e=Vt(3584&~t))&&0===(e=Vt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Vt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Vt(e){return e&-e}function Ut(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-$t(t)]=n}var $t=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Wt|0)|0},Ht=Math.log,Wt=Math.LN2,Kt=a.unstable_UserBlockingPriority,qt=a.unstable_runWithPriority,Qt=!0;function Yt(e,t,n,r){Ie||Le();var o=Xt,a=Ie;Ie=!0;try{Ne(o,e,t,n,r)}finally{(Ie=a)||De()}}function Gt(e,t,n,r){qt(Kt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var o;if(Qt)if((o=0==(4&t))&&0<at.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var a=Zt(e,t,n,r);if(null===a)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(a,e,t,n,r),void at.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return it=mt(it,e,t,n,r,o),!0;case"dragenter":return lt=mt(lt,e,t,n,r,o),!0;case"mouseover":return ut=mt(ut,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,mt(st.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,ct.set(a,mt(ct.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ht(e,r)}Tr(e,t,r,null,n)}}}function Zt(e,t,n,r){var o=Ee(r);if(null!==(o=Zr(o))){var a=Ye(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Ge(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Tr(e,t,r,o,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Jt?Jt.value:Jt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,sn,cn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),mn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:On,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(un=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=un=0,cn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),vn=ln(mn),gn=ln(o({},mn,{dataTransfer:0})),yn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=ln(o({},fn,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},jn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=jn[e])&&!!t[e]}function On(){return En}var Cn=ln(o({},pn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:On,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=ln(o({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),zn=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:On})),_n=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=ln(o({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),An=[9,13,27,32],Nn=f&&"CompositionEvent"in window,Ln=null;f&&"documentMode"in document&&(Ln=document.documentMode);var Rn=f&&"TextEvent"in window&&!Ln,In=f&&(!Nn||Ln&&8<Ln&&11>=Ln),Mn=String.fromCharCode(32),Dn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==An.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Hn(e,t,n,r){_e(r),0<(t=Nr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Kn=null;function qn(e){Er(e,0)}function Qn(e){if(X(eo(e)))return e}function Yn(e,t){if("change"===e)return t}var Gn=!1;if(f){var Xn;if(f){var Zn="oninput"in document;if(!Zn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Zn="function"==typeof Jn.oninput}Xn=Zn}else Xn=!1;Gn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent("onpropertychange",tr),Kn=Wn=null)}function tr(e){if("value"===e.propertyName&&Qn(Kn)){var t=[];if(Hn(t,Kn,e,Ee(e)),e=qn,Ie)e(t);else{Ie=!0;try{Ae(e,t)}finally{Ie=!1,De()}}}}function nr(e,t,n){"focusin"===e?(er(),Kn=n,(Wn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Kn)}function or(e,t){if("click"===e)return Qn(t)}function ar(e,t){if("input"===e||"change"===e)return Qn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!ir(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,vr=null,gr=null,yr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==mr||mr!==Z(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ur(gr,r)||(gr=r,0<(r=Nr(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Lt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Lt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Lt(Nt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)At.set(wr[kr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(xr));function jr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,l,u,s){if(Qe.apply(this,arguments),$e){if(!$e)throw Error(i(198));var c=He;$e=!1,He=null,We||(We=!0,Ke=c)}}(r,t,void 0,e),e.currentTarget=null}function Er(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;jr(o,l,s),a=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;jr(o,l,s),a=u}}}if(We)throw e=Ke,We=!1,Ke=null,e}function Or(e,t){var n=no(t),r=e+"__bubble";n.has(r)||(_r(t,e,2,!1),n.add(r))}var Cr="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[Cr]||(e[Cr]=!0,l.forEach((function(t){Sr.has(t)||zr(t,!1,e,null),zr(t,!0,e,null)})))}function zr(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;o|=2,a=r}var i=no(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),_r(a,e,o,t),i.add(l))}function _r(e,t,n,r){var o=At.get(t);switch(void 0===o?2:o){case 0:o=Yt;break;case 1:o=Gt;break;default:o=Xt}n=o.bind(null,t,n,e),o=void 0,!Ve||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Tr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Zr(l)))return;if(5===(u=i.tag)||6===u){r=a=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Me)return e();Me=!0;try{Re(e,t,n)}finally{Me=!1,De()}}((function(){var r=a,o=Ee(n),i=[];e:{var l=Tt.get(e);if(void 0!==l){var u=dn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Cn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=zn;break;case Ct:case Pt:case zt:u=bn;break;case _t:u=_n;break;case"scroll":u=hn;break;case"wheel":u=Tn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Fe(h,d))&&c.push(Ar(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,o),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Zr(s)&&!s[Gr])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Zr(s):null)&&(s!==(f=Ye(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=vn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Pn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:eo(u),p=null==s?l:eo(s),(l=new c(m,h+"leave",u,n,o)).target=f,l.relatedTarget=p,m=null,Zr(o)===r&&((c=new c(d,h+"enter",s,n,o)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Lr(p))h++;for(p=0,m=d;m;m=Lr(m))p++;for(;0<h-p;)c=Lr(c),h--;for(;0<p-h;)d=Lr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Lr(c),d=Lr(d)}c=null}else c=null;null!==u&&Rr(i,l,u,c,!1),null!==s&&null!==f&&Rr(i,f,s,c,!0)}if("select"===(u=(l=r?eo(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yn;else if($n(l))if(Gn)v=ar;else{v=rr;var g=nr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=or);switch(v&&(v=v(e,r))?Hn(i,v,n,o):(g&&g(e,l,r),"focusout"===e&&(g=l._wrapperState)&&g.controlled&&"number"===l.type&&oe(l,"number",l.value)),g=r?eo(r):window,e){case"focusin":($n(g)||"true"===g.contentEditable)&&(mr=g,vr=r,gr=null);break;case"focusout":gr=vr=mr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,br(i,n,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(i,n,o)}var y;if(Nn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Un?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(In&&"ko"!==n.locale&&(Un||"onCompositionStart"!==b?"onCompositionEnd"===b&&Un&&(y=nn()):(en="value"in(Jt=o)?Jt.value:Jt.textContent,Un=!0)),0<(g=Nr(r,b)).length&&(b=new kn(b,e,null,n,o),i.push({event:b,listeners:g}),(y||null!==(y=Vn(n)))&&(b.data=y))),(y=Rn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Dn=!0,Mn);case"textInput":return(e=t.data)===Mn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Nn&&Fn(e,t)?(e=nn(),tn=en=Jt=null,Un=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return In&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Nr(r,"onBeforeInput")).length&&(o=new kn("onBeforeInput","beforeinput",null,n,o),i.push({event:o,listeners:r}),o.data=y)}Er(i,t)}))}function Ar(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Nr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Fe(e,n))&&r.unshift(Ar(e,a,o)),null!=(a=Fe(e,t))&&r.push(Ar(e,a,o))),e=e.return}return r}function Lr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Rr(e,t,n,r,o){for(var a=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,o?null!=(u=Fe(n,a))&&i.unshift(Ar(n,u,l)):o||null!=(u=Fe(n,a))&&i.push(Ar(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Ir(){}var Mr=null,Dr=null;function Fr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Vr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Ur="function"==typeof setTimeout?setTimeout:void 0,Br="function"==typeof clearTimeout?clearTimeout:void 0;function $r(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Kr=0,qr=Math.random().toString(36).slice(2),Qr="__reactFiber$"+qr,Yr="__reactProps$"+qr,Gr="__reactContainer$"+qr,Xr="__reactEvents$"+qr;function Zr(e){var t=e[Qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Gr]||n[Qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[Qr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Qr]||e[Gr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function eo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function to(e){return e[Yr]||null}function no(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var ro=[],oo=-1;function ao(e){return{current:e}}function io(e){0>oo||(e.current=ro[oo],ro[oo]=null,oo--)}function lo(e,t){oo++,ro[oo]=e.current,e.current=t}var uo={},so=ao(uo),co=ao(!1),fo=uo;function po(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function ho(e){return null!=e.childContextTypes}function mo(){io(co),io(so)}function vo(e,t,n){if(so.current!==uo)throw Error(i(168));lo(so,t),lo(co,n)}function go(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,q(t)||"Unknown",a));return o({},n,r)}function yo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,fo=so.current,lo(so,e),lo(co,co.current),!0}function bo(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=go(e,t,fo),r.__reactInternalMemoizedMergedChildContext=e,io(co),io(so),lo(so,e)):io(co),lo(co,n)}var wo=null,ko=null,xo=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,jo=a.unstable_cancelCallback,Eo=a.unstable_shouldYield,Oo=a.unstable_requestPaint,Co=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,zo=a.unstable_ImmediatePriority,_o=a.unstable_UserBlockingPriority,To=a.unstable_NormalPriority,Ao=a.unstable_LowPriority,No=a.unstable_IdlePriority,Lo={},Ro=void 0!==Oo?Oo:function(){},Io=null,Mo=null,Do=!1,Fo=Co(),Vo=1e4>Fo?Co:function(){return Co()-Fo};function Uo(){switch(Po()){case zo:return 99;case _o:return 98;case To:return 97;case Ao:return 96;case No:return 95;default:throw Error(i(332))}}function Bo(e){switch(e){case 99:return zo;case 98:return _o;case 97:return To;case 96:return Ao;case 95:return No;default:throw Error(i(332))}}function $o(e,t){return e=Bo(e),xo(e,t)}function Ho(e,t,n){return e=Bo(e),So(e,t,n)}function Wo(){if(null!==Mo){var e=Mo;Mo=null,jo(e)}Ko()}function Ko(){if(!Do&&null!==Io){Do=!0;var e=0;try{var t=Io;$o(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Io=null}catch(t){throw null!==Io&&(Io=Io.slice(e+1)),So(zo,Wo),t}finally{Do=!1}}}var qo=k.ReactCurrentBatchConfig;function Qo(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Yo=ao(null),Go=null,Xo=null,Zo=null;function Jo(){Zo=Xo=Go=null}function ea(e){var t=Yo.current;io(Yo),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function na(e,t){Go=e,Zo=Xo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ni=!0),e.firstContext=null)}function ra(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xo){if(null===Go)throw Error(i(308));Xo=t,Go.dependencies={lanes:0,firstContext:t,responders:null}}else Xo=Xo.next=t;return e._currentValue}var oa=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ia(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function la(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ua(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function sa(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ca(e,t,n,r){var a=e.updateQueue;oa=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=a.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:oa=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(s=d),a.baseState=s,a.firstBaseUpdate=c,a.lastBaseUpdate=f,Rl|=l,e.lanes=l,e.memoizedState=d}}function fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(i(191,o));o.call(r)}}}var da=(new r.Component).refs;function pa(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ha={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=iu(),o=lu(e),a=la(r,o);a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=iu(),o=lu(e),a=la(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=iu(),r=lu(e),o=la(n,r);o.tag=2,null!=t&&(o.callback=t),ua(e,o),uu(e,r,n)}};function ma(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(o,a))}function va(e,t,n){var r=!1,o=uo,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(o=ho(t)?fo:so.current,a=(r=null!=(r=t.contextTypes))?po(e,o):uo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ha,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ga(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ha.enqueueReplaceState(t,t.state,null)}function ya(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=da,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=ra(a):(a=ho(t)?fo:so.current,o.context=po(e,a)),ca(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(pa(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ha.enqueueReplaceState(o,o.state,null),ca(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var ba=Array.isArray;function wa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===da&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function ka(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function xa(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Vu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Hu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=wa(e,t,n),r.return=e,r):((r=Uu(n.type,n.key,n.props,null,e.mode,r)).ref=wa(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Wu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Bu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Hu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Uu(t.type,t.key,t.props,null,e.mode,n)).ref=wa(e,null,t),n.return=e,n;case S:return(t=Wu(t,e.mode,n)).return=e,t}if(ba(t)||B(t))return(t=Bu(t,e.mode,n,null)).return=e,t;ka(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===o?n.type===j?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case S:return n.key===o?c(e,t,n,r):null}if(ba(n)||B(n))return null!==o?null:f(e,t,n,r,null);ka(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case x:return e=e.get(null===r.key?n:r.key)||null,r.type===j?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ba(r)||B(r))return f(t,e=e.get(n)||null,r,o,null);ka(t,r)}return null}function m(o,i,l,u){for(var s=null,c=null,f=i,m=i=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=p(o,f,l[m],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(o,f),i=a(g,i,m),null===c?s=g:c.sibling=g,c=g,f=v}if(m===l.length)return n(o,f),s;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(i=a(f,i,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);m<l.length;m++)null!==(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),i=a(v,i,m),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(o,e)})),s}function v(o,l,u,s){var c=B(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,m=l,v=l=0,g=null,y=u.next();null!==m&&!y.done;v++,y=u.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(o,m,y.value,s);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(o,m),l=a(b,l,v),null===f?c=b:f.sibling=b,f=b,m=g}if(y.done)return n(o,m),c;if(null===m){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,s))&&(l=a(y,l,v),null===f?c=y:f.sibling=y,f=y);return c}for(m=r(o,m);!y.done;v++,y=u.next())null!==(y=h(m,o,v,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),l=a(y,l,v),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,a,u){var s="object"==typeof a&&null!==a&&a.type===j&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case x:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(a.type===j){n(e,s.sibling),(r=o(s,a.props.children)).return=e,e=r;break e}break;default:if(s.elementType===a.type){n(e,s.sibling),(r=o(s,a.props)).ref=wa(e,s,a),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}a.type===j?((r=Bu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Uu(a.type,a.key,a.props,null,e.mode,u)).ref=wa(e,r,a),u.return=e,e=u)}return l(e);case S:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Wu(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Hu(a,e.mode,u)).return=e,e=r),l(e);if(ba(a))return m(e,r,a,u);if(B(a))return v(e,r,a,u);if(c&&ka(e,a),void 0===a&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return n(e,r)}}var Sa=xa(!0),ja=xa(!1),Ea={},Oa=ao(Ea),Ca=ao(Ea),Pa=ao(Ea);function za(e){if(e===Ea)throw Error(i(174));return e}function _a(e,t){switch(lo(Pa,t),lo(Ca,e),lo(Oa,Ea),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}io(Oa),lo(Oa,t)}function Ta(){io(Oa),io(Ca),io(Pa)}function Aa(e){za(Pa.current);var t=za(Oa.current),n=pe(t,e.type);t!==n&&(lo(Ca,e),lo(Oa,n))}function Na(e){Ca.current===e&&(io(Oa),io(Ca))}var La=ao(0);function Ra(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ia=null,Ma=null,Da=!1;function Fa(e,t){var n=Du(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Va(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ua(e){if(Da){var t=Ma;if(t){var n=t;if(!Va(e,t)){if(!(t=Hr(n.nextSibling))||!Va(e,t))return e.flags=-1025&e.flags|2,Da=!1,void(Ia=e);Fa(Ia,n)}Ia=e,Ma=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,Da=!1,Ia=e}}function Ba(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ia=e}function $a(e){if(e!==Ia)return!1;if(!Da)return Ba(e),Da=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Vr(t,e.memoizedProps))for(t=Ma;t;)Fa(e,t),t=Hr(t.nextSibling);if(Ba(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ma=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ma=null}}else Ma=Ia?Hr(e.stateNode.nextSibling):null;return!0}function Ha(){Ma=Ia=null,Da=!1}var Wa=[];function Ka(){for(var e=0;e<Wa.length;e++)Wa[e]._workInProgressVersionPrimary=null;Wa.length=0}var qa=k.ReactCurrentDispatcher,Qa=k.ReactCurrentBatchConfig,Ya=0,Ga=null,Xa=null,Za=null,Ja=!1,ei=!1;function ti(){throw Error(i(321))}function ni(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function ri(e,t,n,r,o,a){if(Ya=a,Ga=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qa.current=null===e||null===e.memoizedState?zi:_i,e=n(r,o),ei){a=0;do{if(ei=!1,!(25>a))throw Error(i(301));a+=1,Za=Xa=null,t.updateQueue=null,qa.current=Ti,e=n(r,o)}while(ei)}if(qa.current=Pi,t=null!==Xa&&null!==Xa.next,Ya=0,Za=Xa=Ga=null,Ja=!1,t)throw Error(i(300));return e}function oi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Ga.memoizedState=Za=e:Za=Za.next=e,Za}function ai(){if(null===Xa){var e=Ga.alternate;e=null!==e?e.memoizedState:null}else e=Xa.next;var t=null===Za?Ga.memoizedState:Za.next;if(null!==t)Za=t,Xa=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Xa=e).memoizedState,baseState:Xa.baseState,baseQueue:Xa.baseQueue,queue:Xa.queue,next:null},null===Za?Ga.memoizedState=Za=e:Za=Za.next=e}return Za}function ii(e,t){return"function"==typeof t?t(e):t}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Xa,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=a=null,s=o;do{var c=s.lane;if((Ya&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,a=r):u=u.next=f,Ga.lanes|=c,Rl|=c}s=s.next}while(null!==s&&s!==o);null===u?a=r:u.next=l,ir(r,t.memoizedState)||(Ni=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ui(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);ir(a,t.memoizedState)||(Ni=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function si(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Ya&e)===e)&&(t._workInProgressVersionPrimary=r,Wa.push(t))),e)return n(t._source);throw Wa.push(t),Error(i(350))}function ci(e,t,n,r){var o=Cl;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=qa.current,s=u.useState((function(){return si(o,t,n)})),c=s[1],f=s[0];s=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Ga;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=a(t._source);if(!ir(l,e)){e=n(t._source),ir(f,e)||(c(e),e=lu(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,i=e;0<i;){var u=31-$t(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=lu(v);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ir(h,n)&&ir(m,t)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ii,lastRenderedState:f}).dispatch=c=Ci.bind(null,Ga,e),s.queue=e,s.baseQueue=null,f=si(o,t,n),s.memoizedState=s.baseState=f),f}function fi(e,t,n){return ci(ai(),e,t,n)}function di(e){var t=oi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ii,lastRenderedState:e}).dispatch=Ci.bind(null,Ga,e),[t.memoizedState,e]}function pi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ga.updateQueue)?(t={lastEffect:null},Ga.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function hi(e){return e={current:e},oi().memoizedState=e}function mi(){return ai().memoizedState}function vi(e,t,n,r){var o=oi();Ga.flags|=e,o.memoizedState=pi(1|t,n,void 0,void 0===r?null:r)}function gi(e,t,n,r){var o=ai();r=void 0===r?null:r;var a=void 0;if(null!==Xa){var i=Xa.memoizedState;if(a=i.destroy,null!==r&&ni(r,i.deps))return void pi(t,n,a,r)}Ga.flags|=e,o.memoizedState=pi(1|t,n,a,r)}function yi(e,t){return vi(516,4,e,t)}function bi(e,t){return gi(516,4,e,t)}function wi(e,t){return gi(4,2,e,t)}function ki(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function xi(e,t,n){return n=null!=n?n.concat([e]):null,gi(4,2,ki.bind(null,t,e),n)}function Si(){}function ji(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ni(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ei(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ni(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Oi(e,t){var n=Uo();$o(98>n?98:n,(function(){e(!0)})),$o(97<n?97:n,(function(){var n=Qa.transition;Qa.transition=1;try{e(!1),t()}finally{Qa.transition=n}}))}function Ci(e,t,n){var r=iu(),o=lu(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Ga||null!==i&&i===Ga)ei=Ja=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(a.eagerReducer=i,a.eagerState=u,ir(u,l))return}catch(e){}uu(e,o,r)}}var Pi={readContext:ra,useCallback:ti,useContext:ti,useEffect:ti,useImperativeHandle:ti,useLayoutEffect:ti,useMemo:ti,useReducer:ti,useRef:ti,useState:ti,useDebugValue:ti,useDeferredValue:ti,useTransition:ti,useMutableSource:ti,useOpaqueIdentifier:ti,unstable_isNewReconciler:!1},zi={readContext:ra,useCallback:function(e,t){return oi().memoizedState=[e,void 0===t?null:t],e},useContext:ra,useEffect:yi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vi(4,2,ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vi(4,2,e,t)},useMemo:function(e,t){var n=oi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=oi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ci.bind(null,Ga,e),[r.memoizedState,e]},useRef:hi,useState:di,useDebugValue:Si,useDeferredValue:function(e){var t=di(e),n=t[0],r=t[1];return yi((function(){var t=Qa.transition;Qa.transition=1;try{r(e)}finally{Qa.transition=t}}),[e]),n},useTransition:function(){var e=di(!1),t=e[0];return hi(e=Oi.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=oi();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},ci(r,e,t,n)},useOpaqueIdentifier:function(){if(Da){var e=!1,t=function(e){return{$$typeof:R,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Kr++).toString(36))),Error(i(355))})),n=di(t)[1];return 0==(2&Ga.mode)&&(Ga.flags|=516,pi(5,(function(){n("r:"+(Kr++).toString(36))}),void 0,null)),t}return di(t="r:"+(Kr++).toString(36)),t},unstable_isNewReconciler:!1},_i={readContext:ra,useCallback:ji,useContext:ra,useEffect:bi,useImperativeHandle:xi,useLayoutEffect:wi,useMemo:Ei,useReducer:li,useRef:mi,useState:function(){return li(ii)},useDebugValue:Si,useDeferredValue:function(e){var t=li(ii),n=t[0],r=t[1];return bi((function(){var t=Qa.transition;Qa.transition=1;try{r(e)}finally{Qa.transition=t}}),[e]),n},useTransition:function(){var e=li(ii)[0];return[mi().current,e]},useMutableSource:fi,useOpaqueIdentifier:function(){return li(ii)[0]},unstable_isNewReconciler:!1},Ti={readContext:ra,useCallback:ji,useContext:ra,useEffect:bi,useImperativeHandle:xi,useLayoutEffect:wi,useMemo:Ei,useReducer:ui,useRef:mi,useState:function(){return ui(ii)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(ii),n=t[0],r=t[1];return bi((function(){var t=Qa.transition;Qa.transition=1;try{r(e)}finally{Qa.transition=t}}),[e]),n},useTransition:function(){var e=ui(ii)[0];return[mi().current,e]},useMutableSource:fi,useOpaqueIdentifier:function(){return ui(ii)[0]},unstable_isNewReconciler:!1},Ai=k.ReactCurrentOwner,Ni=!1;function Li(e,t,n,r){t.child=null===e?ja(t,null,n,r):Sa(t,e.child,n,r)}function Ri(e,t,n,r,o){n=n.render;var a=t.ref;return na(t,o),r=ri(e,t,n,r,a,o),null===e||Ni?(t.flags|=1,Li(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Ji(e,t,o))}function Ii(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||Fu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Uu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Mi(e,t,i,r,o,a))}return i=e.child,0==(o&a)&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)?Ji(e,t,a):(t.flags|=1,(e=Vu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Mi(e,t,n,r,o,a){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ni=!1,0==(a&o))return t.lanes=e.lanes,Ji(e,t,a);0!=(16384&e.flags)&&(Ni=!0)}return Vi(e,t,n,r,a)}function Di(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},vu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},vu(0,e),null;t.memoizedState={baseLanes:0},vu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,vu(0,r);return Li(e,t,o,n),t.child}function Fi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Vi(e,t,n,r,o){var a=ho(n)?fo:so.current;return a=po(t,a),na(t,o),n=ri(e,t,n,r,a,o),null===e||Ni?(t.flags|=1,Li(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Ji(e,t,o))}function Ui(e,t,n,r,o){if(ho(n)){var a=!0;yo(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),va(t,n,r),ya(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?ra(s):po(t,s=ho(n)?fo:so.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&ga(t,i,r,s),oa=!1;var d=t.memoizedState;i.state=d,ca(t,r,i,o),u=t.memoizedState,l!==r||d!==u||co.current||oa?("function"==typeof c&&(pa(t,n,c,r),u=t.memoizedState),(l=oa||ma(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ia(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Qo(t.type,l),i.props=s,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?ra(u):po(t,u=ho(n)?fo:so.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ga(t,i,r,u),oa=!1,d=t.memoizedState,i.state=d,ca(t,r,i,o);var h=t.memoizedState;l!==f||d!==h||co.current||oa?("function"==typeof p&&(pa(t,n,p,r),h=t.memoizedState),(s=oa||ma(t,n,s,r,d,h,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Bi(e,t,n,r,a,o)}function Bi(e,t,n,r,o,a){Fi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return o&&bo(t,n,!1),Ji(e,t,a);r=t.stateNode,Ai.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Sa(t,e.child,null,a),t.child=Sa(t,null,l,a)):Li(e,t,l,a),t.memoizedState=r.state,o&&bo(t,n,!0),t.child}function $i(e){var t=e.stateNode;t.pendingContext?vo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vo(0,t.context,!1),_a(e,t.containerInfo)}var Hi,Wi,Ki,qi={dehydrated:null,retryLane:0};function Qi(e,t,n){var r,o=t.pendingProps,a=La.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),lo(La,1&a),null===e?(void 0!==o.fallback&&Ua(t),e=o.children,a=o.fallback,i?(e=Yi(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,e):"number"==typeof o.unstable_expectedLoadTime?(e=Yi(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,t.lanes=33554432,e):((n=$u({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(o=function(e,t,n,r,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&a)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Vu(i,l),null!==e?r=Vu(e,r):(r=Bu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=qi,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Vu(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Yi(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=$u(t,o,0,null),n=Bu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Gi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ta(e.return,t)}function Xi(e,t,n,r,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=o,i.lastEffect=a)}function Zi(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Li(e,t,r.children,n),0!=(2&(r=La.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Gi(e,n);else if(19===e.tag)Gi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(lo(La,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Ra(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xi(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ra(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xi(t,!0,n,null,a,t.lastEffect);break;case"together":Xi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ji(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Rl|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Vu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Vu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function el(e,t){if(!Da)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function tl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(t.type)&&mo(),null;case 3:return Ta(),io(co),io(so),Ka(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($a(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Na(t);var a=za(Pa.current);if(n=t.type,null!==e&&null!=t.stateNode)Wi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=za(Oa.current),$a(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Qr]=t,r[Yr]=l,n){case"dialog":Or("cancel",r),Or("close",r);break;case"iframe":case"object":case"embed":Or("load",r);break;case"video":case"audio":for(e=0;e<xr.length;e++)Or(xr[e],r);break;case"source":Or("error",r);break;case"img":case"image":case"link":Or("error",r),Or("load",r);break;case"details":Or("toggle",r);break;case"input":ee(r,l),Or("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Or("invalid",r);break;case"textarea":ue(r,l),Or("invalid",r)}for(var s in Se(n,l),e=null,l)l.hasOwnProperty(s)&&(a=l[s],"children"===s?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(s)&&null!=a&&"onScroll"===s&&Or("scroll",r));switch(n){case"input":G(r),re(r,l,!0);break;case"textarea":G(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Ir)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Qr]=t,e[Yr]=r,Hi(e,t),t.stateNode=e,s=je(n,r),n){case"dialog":Or("cancel",e),Or("close",e),a=r;break;case"iframe":case"object":case"embed":Or("load",e),a=r;break;case"video":case"audio":for(a=0;a<xr.length;a++)Or(xr[a],e);a=r;break;case"source":Or("error",e),a=r;break;case"img":case"image":case"link":Or("error",e),Or("load",e),a=r;break;case"details":Or("toggle",e),a=r;break;case"input":ee(e,r),a=J(e,r),Or("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),Or("invalid",e);break;case"textarea":ue(e,r),a=le(e,r),Or("invalid",e);break;default:a=r}Se(n,a);var c=a;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Or("scroll",e):null!=f&&w(e,l,f,s))}switch(n){case"input":G(e),re(e,r,!1);break;case"textarea":G(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Ir)}Fr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ki(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=za(Pa.current),za(Oa.current),$a(t)?(r=t.stateNode,n=t.memoizedProps,r[Qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Qr]=t,t.stateNode=r)}return null;case 13:return io(La),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&$a(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&La.current)?0===Al&&(Al=3):(0!==Al&&3!==Al||(Al=4),null===Cl||0==(134217727&Rl)&&0==(134217727&Il)||du(Cl,zl))),(r||n)&&(t.flags|=4),null);case 4:return Ta(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return ea(t),null;case 17:return ho(t.type)&&mo(),null;case 19:if(io(La),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)el(r,!1);else{if(0!==Al||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Ra(e))){for(t.flags|=64,el(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return lo(La,1&La.current|2),t.child}e=e.sibling}null!==r.tail&&Vo()>Vl&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ra(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),el(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Da)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Vo()-r.renderingStartTime>Vl&&1073741824!==n&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Vo(),n.sibling=null,t=La.current,lo(La,l?1&t|2:1&t),n):null;case 23:case 24:return gu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function nl(e){switch(e.tag){case 1:ho(e.type)&&mo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ta(),io(co),io(so),Ka(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Na(e),null;case 13:return io(La),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return io(La),null;case 4:return Ta(),null;case 10:return ea(e),null;case 23:case 24:return gu(),null;default:return null}}function rl(e,t){try{var n="",r=t;do{n+=K(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function ol(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Hi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wi=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,za(Oa.current);var i,l=null;switch(n){case"input":a=J(e,a),r=J(e,r),l=[];break;case"option":a=ae(e,a),r=ae(e,r),l=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":a=le(e,a),r=le(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Ir)}for(f in Se(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var s=a[f];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Or("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===R?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Ki=function(e,t,n,r){n!==r&&(t.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function il(e,t,n){(n=la(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hl||(Hl=!0,Wl=r),ol(0,t)},n}function ll(e,t,n){(n=la(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ol(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Kl?Kl=new Set([this]):Kl.add(this),ol(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ul="function"==typeof WeakSet?WeakSet:Set;function sl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Lu(e,t)}else t.current=null}function cl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&$r(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function fl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Tu(n,e),_u(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Qo(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&fa(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fa(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Fr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function dl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pl(e,t){if(ko&&"function"==typeof ko.onCommitFiberUnmount)try{ko.onCommitFiberUnmount(wo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Tu(t,n);else{r=t;try{o()}catch(e){Lu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(sl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Lu(t,e)}break;case 5:sl(t);break;case 4:bl(e,t)}}function hl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ml(e){return 5===e.tag||3===e.tag||4===e.tag}function vl(e){e:{for(var t=e.return;null!==t;){if(ml(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ml(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gl(e,n,t):yl(e,n,t)}function gl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Ir));else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function yl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yl(e,t,n),e=e.sibling;null!==e;)yl(e,t,n),e=e.sibling}function bl(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,s=u;;)if(pl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(pl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Yr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),je(e,o),t=je(e,r),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ve(n,u):"children"===l?ge(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?ie(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Fl=Vo(),dl(t.child,!0)),void kl(t);case 19:return void kl(t);case 17:return;case 23:case 24:return void dl(t,null!==t.memoizedState)}throw Error(i(163))}function kl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ul),t.forEach((function(t){var r=Iu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function xl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Sl=Math.ceil,jl=k.ReactCurrentDispatcher,El=k.ReactCurrentOwner,Ol=0,Cl=null,Pl=null,zl=0,_l=0,Tl=ao(0),Al=0,Nl=null,Ll=0,Rl=0,Il=0,Ml=0,Dl=null,Fl=0,Vl=1/0;function Ul(){Vl=Vo()+500}var Bl,$l=null,Hl=!1,Wl=null,Kl=null,ql=!1,Ql=null,Yl=90,Gl=[],Xl=[],Zl=null,Jl=0,eu=null,tu=-1,nu=0,ru=0,ou=null,au=!1;function iu(){return 0!=(48&Ol)?Vo():-1!==tu?tu:tu=Vo()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Uo()?1:2;if(0===nu&&(nu=Ll),0!==qo.transition){0!==ru&&(ru=null!==Dl?Dl.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Uo(),e=Ft(0!=(4&Ol)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Jl)throw Jl=0,eu=null,Error(i(185));if(null===(e=su(e,t)))return null;Bt(e,t,n),e===Cl&&(Il|=t,4===Al&&du(e,zl));var r=Uo();1===t?0!=(8&Ol)&&0==(48&Ol)?pu(e):(cu(e,n),0===Ol&&(Ul(),Wo())):(0==(4&Ol)||98!==r&&99!==r||(null===Zl?Zl=new Set([e]):Zl.add(e)),cu(e,n)),Dl=e}function su(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-$t(l),s=1<<u,c=a[u];if(-1===c){if(0==(s&r)||0!=(s&o)){c=t,It(s);var f=Rt;a[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=Mt(e,e===Cl?zl:0),t=Rt,0===r)null!==n&&(n!==Lo&&jo(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Lo&&jo(n)}15===t?(n=pu.bind(null,e),null===Io?(Io=[n],Mo=So(zo,Ko)):Io.push(n),n=Lo):n=14===t?Ho(99,pu.bind(null,e)):Ho(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Ol))throw Error(i(327));var t=e.callbackNode;if(zu()&&e.callbackNode!==t)return null;var n=Mt(e,e===Cl?zl:0);if(0===n)return null;var r=n,o=Ol;Ol|=16;var a=wu();for(Cl===e&&zl===r||(Ul(),yu(e,r));;)try{Su();break}catch(t){bu(e,t)}if(Jo(),jl.current=a,Ol=o,null!==Pl?r=0:(Cl=null,zl=0,r=Al),0!=(Ll&Il))yu(e,0);else if(0!==r){if(2===r&&(Ol|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(n=Dt(e))&&(r=ku(e,n))),1===r)throw t=Nl,yu(e,0),du(e,n),cu(e,Vo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Ou(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Fl+500-Vo())){if(0!==Mt(e,0))break;if(((o=e.suspendedLanes)&n)!==n){iu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Ur(Ou.bind(null,e),r);break}Ou(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var l=31-$t(n);a=1<<l,(l=r[l])>o&&(o=l),n&=~a}if(n=o,10<(n=(120>(n=Vo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Sl(n/1960))-n)){e.timeoutHandle=Ur(Ou.bind(null,e),n);break}Ou(e);break;case 5:Ou(e);break;default:throw Error(i(329))}}return cu(e,Vo()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Ml,t&=~Il,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-$t(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Ol))throw Error(i(327));if(zu(),e===Cl&&0!=(e.expiredLanes&zl)){var t=zl,n=ku(e,t);0!=(Ll&Il)&&(n=ku(e,t=Mt(e,t)))}else n=ku(e,t=Mt(e,0));if(0!==e.tag&&2===n&&(Ol|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(t=Dt(e))&&(n=ku(e,t))),1===n)throw n=Nl,yu(e,0),du(e,t),cu(e,Vo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ou(e),cu(e,Vo()),null}function hu(e,t){var n=Ol;Ol|=1;try{return e(t)}finally{0===(Ol=n)&&(Ul(),Wo())}}function mu(e,t){var n=Ol;Ol&=-2,Ol|=8;try{return e(t)}finally{0===(Ol=n)&&(Ul(),Wo())}}function vu(e,t){lo(Tl,_l),_l|=t,Ll|=t}function gu(){_l=Tl.current,io(Tl)}function yu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Br(n)),null!==Pl)for(n=Pl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&mo();break;case 3:Ta(),io(co),io(so),Ka();break;case 5:Na(r);break;case 4:Ta();break;case 13:case 19:io(La);break;case 10:ea(r);break;case 23:case 24:gu()}n=n.return}Cl=e,Pl=Vu(e.current,null),zl=_l=Ll=t,Al=0,Nl=null,Ml=Il=Rl=0}function bu(e,t){for(;;){var n=Pl;try{if(Jo(),qa.current=Pi,Ja){for(var r=Ga.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Ja=!1}if(Ya=0,Za=Xa=Ga=null,ei=!1,El.current=null,null===n||null===n.return){Al=1,Nl=t,Pl=null;break}e:{var a=e,i=n.return,l=n,u=t;if(t=zl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&La.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var g=new Set;g.add(s),d.updateQueue=g}else v.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=la(-1,1);y.tag=2,ua(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new al,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=Ru.bind(null,a,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Al&&(Al=2),u=rl(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,il(0,a,t));break e;case 1:a=u;var k=d.type,x=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Kl||!Kl.has(x)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,ll(d,a,t));break e}}d=d.return}while(null!==d)}Eu(n)}catch(e){t=e,Pl===n&&null!==n&&(Pl=n=n.return);continue}break}}function wu(){var e=jl.current;return jl.current=Pi,null===e?Pi:e}function ku(e,t){var n=Ol;Ol|=16;var r=wu();for(Cl===e&&zl===t||yu(e,t);;)try{xu();break}catch(t){bu(e,t)}if(Jo(),Ol=n,jl.current=r,null!==Pl)throw Error(i(261));return Cl=null,zl=0,Al}function xu(){for(;null!==Pl;)ju(Pl)}function Su(){for(;null!==Pl&&!Eo();)ju(Pl)}function ju(e){var t=Bl(e.alternate,e,_l);e.memoizedProps=e.pendingProps,null===t?Eu(e):Pl=t,El.current=null}function Eu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=tl(n,t,_l)))return void(Pl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&_l)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=nl(t)))return n.flags&=2047,void(Pl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pl=t);Pl=t=e}while(null!==t);0===Al&&(Al=5)}function Ou(e){var t=Uo();return $o(99,Cu.bind(null,e,t)),null}function Cu(e,t){do{zu()}while(null!==Ql);if(0!=(48&Ol))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var s=31-$t(a),c=1<<s;o[s]=0,l[s]=-1,u[s]=-1,a&=~c}if(null!==Zl&&0==(24&r)&&Zl.has(e)&&Zl.delete(e),e===Cl&&(Pl=Cl=null,zl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Ol,Ol|=32,El.current=null,Mr=Qt,pr(l=dr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,a=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=l,g=null;t:for(;;){for(var y;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==s||0!==c&&3!==v.nodeType||(p=f+c),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)g=v,v=y;for(;;){if(v===l)break t;if(g===u&&++h===a&&(d=f),g===s&&++m===c&&(p=f),null!==(y=v.nextSibling))break;g=(v=g).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:l,selectionRange:u},Qt=!1,ou=null,au=!1,$l=r;do{try{Pu()}catch(e){if(null===$l)throw Error(i(330));Lu($l,e),$l=$l.nextEffect}}while(null!==$l);ou=null,$l=r;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ge($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:vl($l),$l.flags&=-3;break;case 6:vl($l),$l.flags&=-3,wl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,wl($l.alternate,$l);break;case 4:wl($l.alternate,$l);break;case 8:bl(l,u=$l);var x=u.alternate;hl(u),null!==x&&hl(x)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Lu($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=Dr,w=dr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==l&&pr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,x=Math.min(l.start,u),l=void 0===l.end?x:Math.min(l.end,u),!k.extend&&x>l&&(u=l,l=x,x=u),u=cr(b,x),a=cr(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),x>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!Mr,Dr=Mr=null,e.current=n,$l=r;do{try{for(b=e;null!==$l;){var S=$l.flags;if(36&S&&fl(b,$l.alternate,$l),128&S){w=void 0;var j=$l.ref;if(null!==j){var E=$l.stateNode;switch($l.tag){case 5:w=E;break;default:w=E}"function"==typeof j?j(w):j.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Lu($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Ro(),Ol=o}else e.current=n;if(ql)ql=!1,Ql=e,Yl=t;else for($l=r;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((S=$l).sibling=null,S.stateNode=null),$l=t;if(0===(r=e.pendingLanes)&&(Kl=null),1===r?e===eu?Jl++:(Jl=0,eu=e):Jl=0,n=n.stateNode,ko&&"function"==typeof ko.onCommitFiberRoot)try{ko.onCommitFiberRoot(wo,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,Vo()),Hl)throw Hl=!1,e=Wl,Wl=null,e;return 0!=(8&Ol)||Wo(),null}function Pu(){for(;null!==$l;){var e=$l.alternate;au||null===ou||(0!=(8&$l.flags)?Je($l,ou)&&(au=!0):13===$l.tag&&xl(e,$l)&&Je($l,ou)&&(au=!0));var t=$l.flags;0!=(256&t)&&cl(e,$l),0==(512&t)||ql||(ql=!0,Ho(97,(function(){return zu(),null}))),$l=$l.nextEffect}}function zu(){if(90!==Yl){var e=97<Yl?97:Yl;return Yl=90,$o(e,Au)}return!1}function _u(e,t){Gl.push(t,e),ql||(ql=!0,Ho(97,(function(){return zu(),null})))}function Tu(e,t){Xl.push(t,e),ql||(ql=!0,Ho(97,(function(){return zu(),null})))}function Au(){if(null===Ql)return!1;var e=Ql;if(Ql=null,0!=(48&Ol))throw Error(i(331));var t=Ol;Ol|=32;var n=Xl;Xl=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Lu(a,e)}}for(n=Gl,Gl=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Lu(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ol=t,Wo(),!0}function Nu(e,t,n){ua(e,t=il(0,t=rl(n,t),1)),t=iu(),null!==(e=su(e,1))&&(Bt(e,1,t),cu(e,t))}function Lu(e,t){if(3===e.tag)Nu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Nu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Kl||!Kl.has(r))){var o=ll(n,e=rl(t,e),1);if(ua(n,o),o=iu(),null!==(n=su(n,1)))Bt(n,1,o),cu(n,o);else if("function"==typeof r.componentDidCatch&&(null===Kl||!Kl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Ru(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=iu(),e.pingedLanes|=e.suspendedLanes&n,Cl===e&&(zl&n)===n&&(4===Al||3===Al&&(62914560&zl)===zl&&500>Vo()-Fl?yu(e,0):Ml|=n),cu(e,t)}function Iu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Uo()?1:2:(0===nu&&(nu=Ll),0===(t=Vt(62914560&~nu))&&(t=4194304))),n=iu(),null!==(e=su(e,t))&&(Bt(e,t,n),cu(e,n))}function Mu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Du(e,t,n,r){return new Mu(e,t,n,r)}function Fu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Vu(e,t){var n=e.alternate;return null===n?((n=Du(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Uu(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)Fu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case j:return Bu(n.children,o,a,t);case I:l=8,o|=16;break;case E:l=8,o|=1;break;case O:return(e=Du(12,n,t,8|o)).elementType=O,e.type=O,e.lanes=a,e;case _:return(e=Du(13,n,t,o)).type=_,e.elementType=_,e.lanes=a,e;case T:return(e=Du(19,n,t,o)).elementType=T,e.lanes=a,e;case M:return $u(n,o,a,t);case D:return(e=Du(24,n,t,o)).elementType=D,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case P:l=9;break e;case z:l=11;break e;case A:l=14;break e;case N:l=16,r=null;break e;case L:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Du(l,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function Bu(e,t,n,r){return(e=Du(7,e,r,t)).lanes=n,e}function $u(e,t,n,r){return(e=Du(23,e,r,t)).elementType=M,e.lanes=n,e}function Hu(e,t,n){return(e=Du(6,e,null,t)).lanes=n,e}function Wu(e,t,n){return(t=Du(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ku(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ut(0),this.expirationTimes=Ut(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ut(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Qu(e,t,n,r){var o=t.current,a=iu(),l=lu(o);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ho(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(ho(s)){n=go(n,s,u);break e}}n=u}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=la(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ua(o,t),uu(o,l,a),l}function Yu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Gu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xu(e,t){Gu(e,t),(e=e.alternate)&&Gu(e,t)}function Zu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Ku(e,t,null!=n&&!0===n.hydrate),t=Du(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,aa(t),e[Gr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function Ju(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function es(e,t,n,r,o){var a=n._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Yu(i);l.call(e)}}Qu(t,i,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Zu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Yu(i);u.call(e)}}mu((function(){Qu(t,i,e,o)}))}return Yu(i)}function ts(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ju(t))throw Error(i(200));return qu(e,t,null,n)}Bl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||co.current)Ni=!0;else{if(0==(n&r)){switch(Ni=!1,t.tag){case 3:$i(t),Ha();break;case 5:Aa(t);break;case 1:ho(t.type)&&yo(t);break;case 4:_a(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;lo(Yo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Qi(e,t,n):(lo(La,1&La.current),null!==(t=Ji(e,t,n))?t.sibling:null);lo(La,1&La.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Zi(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),lo(La,La.current),r)break;return null;case 23:case 24:return t.lanes=0,Di(e,t,n)}return Ji(e,t,n)}Ni=0!=(16384&e.flags)}else Ni=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=po(t,so.current),na(t,n),o=ri(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ho(r)){var a=!0;yo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,aa(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&pa(t,r,l,e),o.updater=ha,t.stateNode=o,o._reactInternals=t,ya(t,r,e,n),t=Bi(null,t,r,!0,a,n)}else t.tag=0,Li(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Fu(e)?1:0;if(null!=e){if((e=e.$$typeof)===z)return 11;if(e===A)return 14}return 2}(o),e=Qo(o,e),a){case 0:t=Vi(null,t,o,e,n);break e;case 1:t=Ui(null,t,o,e,n);break e;case 11:t=Ri(null,t,o,e,n);break e;case 14:t=Ii(null,t,o,Qo(o.type,e),r,n);break e}throw Error(i(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Vi(e,t,r,o=t.elementType===r?o:Qo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ui(e,t,r,o=t.elementType===r?o:Qo(r,o),n);case 3:if($i(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ia(e,t),ca(t,r,null,n),(r=t.memoizedState.element)===o)Ha(),t=Ji(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Ma=Hr(t.stateNode.containerInfo.firstChild),Ia=t,a=Da=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Wa.push(a);for(n=ja(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Li(e,t,r,n),Ha();t=t.child}return t;case 5:return Aa(t),null===e&&Ua(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Vr(r,o)?l=null:null!==a&&Vr(r,a)&&(t.flags|=16),Fi(e,t),Li(e,t,l,n),t.child;case 6:return null===e&&Ua(t),null;case 13:return Qi(e,t,n);case 4:return _a(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Sa(t,null,r,n):Li(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ri(e,t,r,o=t.elementType===r?o:Qo(r,o),n);case 7:return Li(e,t,t.pendingProps,n),t.child;case 8:case 12:return Li(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(lo(Yo,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0==(a=ir(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!co.current){t=Ji(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===u.tag&&((c=la(-1,n&-n)).tag=2,ua(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),ta(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Li(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(o=ra(o,a.unstable_observedBits)),t.flags|=1,Li(e,t,r,n),t.child;case 14:return a=Qo(o=t.type,t.pendingProps),Ii(e,t,o,a=Qo(o.type,a),r,n);case 15:return Mi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Qo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ho(r)?(e=!0,yo(t)):e=!1,na(t,n),va(t,r,o),ya(t,r,o,n),Bi(null,t,r,!0,e,n);case 19:return Zi(e,t,n);case 23:case 24:return Di(e,t,n)}throw Error(i(156,t.tag))},Zu.prototype.render=function(e){Qu(e,this._internalRoot,null,null)},Zu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Qu(null,e,null,(function(){t[Gr]=null}))},et=function(e){13===e.tag&&(uu(e,4,iu()),Xu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,iu()),Xu(e,67108864))},nt=function(e){if(13===e.tag){var t=iu(),n=lu(e);uu(e,n,t),Xu(e,n)}},rt=function(e,t){return t()},Oe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=to(r);if(!o)throw Error(i(90));X(r),ne(r,o)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Ae=hu,Ne=function(e,t,n,r,o){var a=Ol;Ol|=4;try{return $o(98,e.bind(null,t,n,r,o))}finally{0===(Ol=a)&&(Ul(),Wo())}},Le=function(){0==(49&Ol)&&(function(){if(null!==Zl){var e=Zl;Zl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,Vo())}))}Wo()}(),zu())},Re=function(e,t){var n=Ol;Ol|=2;try{return e(t)}finally{0===(Ol=n)&&(Ul(),Wo())}};var ns={Events:[Jr,eo,to,_e,Te,zu,{current:!1}]},rs={findFiberByHostInstance:Zr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},os={bundleType:rs.bundleType,version:rs.version,rendererPackageName:rs.rendererPackageName,rendererConfig:rs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:rs.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var as=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!as.isDisabled&&as.supportsFiber)try{wo=as.inject(os),ko=as}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ns,t.createPortal=ts,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ol;if(0!=(48&n))return e(t);Ol|=1;try{if(e)return $o(99,e.bind(null,t))}finally{Ol=n,Wo()}},t.hydrate=function(e,t,n){if(!Ju(t))throw Error(i(200));return es(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ju(t))throw Error(i(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ju(e))throw Error(i(40));return!!e._reactRootContainer&&(mu((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[Gr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return ts(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ju(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return es(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},590:e=>{var t="undefined"!=typeof Element,n="function"==typeof Map,r="function"==typeof Set,o="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function a(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var l,u,s,c;if(Array.isArray(e)){if((l=e.length)!=i.length)return!1;for(u=l;0!=u--;)if(!a(e[u],i[u]))return!1;return!0}if(n&&e instanceof Map&&i instanceof Map){if(e.size!==i.size)return!1;for(c=e.entries();!(u=c.next()).done;)if(!i.has(u.value[0]))return!1;for(c=e.entries();!(u=c.next()).done;)if(!a(u.value[1],i.get(u.value[0])))return!1;return!0}if(r&&e instanceof Set&&i instanceof Set){if(e.size!==i.size)return!1;for(c=e.entries();!(u=c.next()).done;)if(!i.has(u.value[0]))return!1;return!0}if(o&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(i)){if((l=e.length)!=i.length)return!1;for(u=l;0!=u--;)if(e[u]!==i[u])return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((l=(s=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(u=l;0!=u--;)if(!Object.prototype.hasOwnProperty.call(i,s[u]))return!1;if(t&&e instanceof Element)return!1;for(u=l;0!=u--;)if(("_owner"!==s[u]&&"__v"!==s[u]&&"__o"!==s[u]||!e.$$typeof)&&!a(e[s[u]],i[s[u]]))return!1;return!0}return e!=e&&i!=i}e.exports=function(e,t){try{return a(e,t)}catch(e){if((e.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw e}}},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,g=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case a:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case v:case m:case u:return e;default:return t}}case o:return t}}}function x(e){return k(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=a,t.Lazy=v,t.Memo=m,t.Portal=o,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return x(e)||k(e)===c},t.isConcurrentMode=x,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===o},t.isProfiler=function(e){return k(e)===l},t.isStrictMode=function(e){return k(e)===i},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===l||e===i||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===y||e.$$typeof===b||e.$$typeof===w||e.$$typeof===g)},t.typeOf=k},864:(e,t,n)=>{"use strict";e.exports=n(921)},585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},658:(e,t,n)=>{var r=n(585);e.exports=function e(t,n,o){return r(n)||(o=n||o,n=[]),o=o||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var o=[],a=0;a<t.length;a++)o.push(e(t[a],n,r).source);return c(new RegExp("(?:"+o.join("|")+")",f(r)),n)}(t,n,o):function(e,t,n){return d(a(e,n),t,n)}(t,n,o)},e.exports.parse=a,e.exports.compile=function(e,t){return l(a(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",c=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var h=e[i],m=n[2],v=n[3],g=n[4],y=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,x="+"===b||"*"===b,S="?"===b||"*"===b,j=n[2]||c,E=g||y;r.push({name:v||a++,prefix:m||"",delimiter:j,optional:S,repeat:x,partial:k,asterisk:!!w,pattern:E?s(E):w?".*":"[^"+u(j)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var a="",l=t||{},u=(o||{}).pretty?i:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var f,d=l[c.name];if(null==d){if(c.optional){c.partial&&(a+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(d)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[s].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===p?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[s].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');a+=c.prefix+f}}else a+=c}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var s=e[l];if("string"==typeof s)i+=u(s);else{var d=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+d+p+")*"),i+=p=s.optional?s.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=i.slice(-h.length)===h;return o||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=a?"$":o&&m?"":"(?="+h+"|$)",c(new RegExp("^"+i,f(n)),t)}},524:(e,t,n)=>{"use strict";var r,o=n(294),a=(r=o)&&"object"==typeof r&&"default"in r?r.default:r;function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=!("undefined"==typeof window||!window.document||!window.document.createElement);e.exports=function(e,t,n){if("function"!=typeof e)throw new Error("Expected reducePropsToState to be a function.");if("function"!=typeof t)throw new Error("Expected handleStateChangeOnClient to be a function.");if(void 0!==n&&"function"!=typeof n)throw new Error("Expected mapStateOnServer to either be undefined or a function.");return function(r){if("function"!=typeof r)throw new Error("Expected WrappedComponent to be a React component.");var u,s=[];function c(){u=e(s.map((function(e){return e.props}))),f.canUseDOM?t(u):n&&(u=n(u))}var f=function(e){var t,n;function o(){return e.apply(this,arguments)||this}n=e,(t=o).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,o.peek=function(){return u},o.rewind=function(){if(o.canUseDOM)throw new Error("You may only call rewind() on the server. Call peek() to read the current state.");var e=u;return u=void 0,s=[],e};var i=o.prototype;return i.UNSAFE_componentWillMount=function(){s.push(this),c()},i.componentDidUpdate=function(){c()},i.componentWillUnmount=function(){var e=s.indexOf(this);s.splice(e,1),c()},i.render=function(){return a.createElement(r,this.props)},o}(o.PureComponent);return i(f,"displayName","SideEffect("+function(e){return e.displayName||e.name||"Component"}(r)+")"),i(f,"canUseDOM",l),f}}},251:(e,t,n)=>{"use strict";n(418);var r=n(294),o=60103;if(t.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var a=Symbol.for;o=a("react.element"),t.Fragment=a("react.fragment")}var i=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l=Object.prototype.hasOwnProperty,u={key:!0,ref:!0,__self:!0,__source:!0};function s(e,t,n){var r,a={},s=null,c=null;for(r in void 0!==n&&(s=""+n),void 0!==t.key&&(s=""+t.key),void 0!==t.ref&&(c=t.ref),t)l.call(t,r)&&!u.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:o,type:e,key:s,ref:c,props:a,_owner:i.current}}t.jsx=s,t.jsxs=s},408:(e,t,n)=>{"use strict";var r=n(418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function g(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=v.prototype;var b=y.prototype=new g;b.constructor=y,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,a={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!x.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function j(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var E=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===r?"."+O(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(E,"$&/")+"/"),C(i,t,n,"",(function(e){return e}))):null!=i&&(j(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(E,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+O(l=e[s],s);u+=C(l,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=C(l=l.value,t,n,c=r+O(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],o=0;return C(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function z(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var _={current:null};function T(){var e=_.current;if(null===e)throw Error(p(321));return e}var A={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!j(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=A,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!x.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=j,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:z}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return T().useCallback(e,t)},t.useContext=function(e,t){return T().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return T().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return T().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return T().useLayoutEffect(e,t)},t.useMemo=function(e,t){return T().useMemo(e,t)},t.useReducer=function(e,t,n){return T().useReducer(e,t,n)},t.useRef=function(e){return T().useRef(e)},t.useState=function(e){return T().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},893:(e,t,n)=>{"use strict";e.exports=n(251)},53:(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,g=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+y;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){g=d((function(){e(t.unstable_now())}),n)},o=function(){p(g),g=-1}}function x(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<E(o,t)))break e;e[r]=t,e[n]=o,n=r}}function S(e){return void 0===(e=e[0])?null:e}function j(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>E(i,n))void 0!==u&&0>E(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[a]=n,r=a);else{if(!(void 0!==u&&0>E(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function E(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],C=[],P=1,z=null,_=3,T=!1,A=!1,N=!1;function L(e){for(var t=S(C);null!==t;){if(null===t.callback)j(C);else{if(!(t.startTime<=e))break;j(C),t.sortIndex=t.expirationTime,x(O,t)}t=S(C)}}function R(e){if(N=!1,L(e),!A)if(null!==S(O))A=!0,n(I);else{var t=S(C);null!==t&&r(R,t.startTime-e)}}function I(e,n){A=!1,N&&(N=!1,o()),T=!0;var a=_;try{for(L(n),z=S(O);null!==z&&(!(z.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=z.callback;if("function"==typeof i){z.callback=null,_=z.priorityLevel;var l=i(z.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?z.callback=l:z===S(O)&&j(O),L(n)}else j(O);z=S(O)}if(null!==z)var u=!0;else{var s=S(C);null!==s&&r(R,s.startTime-n),u=!1}return u}finally{z=null,_=a,T=!1}}var M=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||T||(A=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return _},t.unstable_getFirstCallbackNode=function(){return S(O)},t.unstable_next=function(e){switch(_){case 1:case 2:case 3:var t=3;break;default:t=_}var n=_;_=t;try{return e()}finally{_=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=M,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=_;_=e;try{return t()}finally{_=n}},t.unstable_scheduleCallback=function(e,a,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:a,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,x(C,e),null===S(O)&&e===S(C)&&(N?o():N=!0,r(R,i-l))):(e.sortIndex=u,x(O,e),A||T||(A=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=_;return function(){var n=_;_=t;try{return e.apply(this,arguments)}finally{_=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},774:e=>{e.exports=function(e,t,n,r){var o=n?n.call(r,e,t):void 0;if(void 0!==o)return!!o;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var a=Object.keys(e),i=Object.keys(t);if(a.length!==i.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<a.length;u++){var s=a[u];if(!l(s))return!1;var c=e[s],f=t[s];if(!1===(o=n?n.call(r,c,f,s):void 0)||void 0===o&&c!==f)return!1}return!0}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.p="/",(()=>{"use strict";var e,t,r,o,a=n(893),i=n(935),l=n(294),u=n(697),s=n.n(u),c=n(524),f=n.n(c),d=n(590),p=n.n(d),h=n(418),m=n.n(h),v="bodyAttributes",g="htmlAttributes",y={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title"},b=(Object.keys(y).map((function(e){return y[e]})),"charset"),w="cssText",k="href",x="innerHTML",S="itemprop",j="rel",E={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},O=Object.keys(E).reduce((function(e,t){return e[E[t]]=t,e}),{}),C=[y.NOSCRIPT,y.SCRIPT,y.STYLE],P="data-react-helmet",z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},T=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),A=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},N=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},L=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},R=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},I=function(e){var t=U(e,y.TITLE),n=U(e,"titleTemplate");if(n&&t)return n.replace(/%s/g,(function(){return Array.isArray(t)?t.join(""):t}));var r=U(e,"defaultTitle");return t||r||void 0},M=function(e){return U(e,"onChangeClientState")||function(){}},D=function(e,t){return t.filter((function(t){return void 0!==t[e]})).map((function(t){return t[e]})).reduce((function(e,t){return A({},e,t)}),{})},F=function(e,t){return t.filter((function(e){return void 0!==e[y.BASE]})).map((function(e){return e[y.BASE]})).reverse().reduce((function(t,n){if(!t.length)for(var r=Object.keys(n),o=0;o<r.length;o++){var a=r[o].toLowerCase();if(-1!==e.indexOf(a)&&n[a])return t.concat(n)}return t}),[])},V=function(e,t,n){var r={};return n.filter((function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&K("Helmet: "+e+' should be of type "Array". Instead found type "'+z(t[e])+'"'),!1)})).map((function(t){return t[e]})).reverse().reduce((function(e,n){var o={};n.filter((function(e){for(var n=void 0,a=Object.keys(e),i=0;i<a.length;i++){var l=a[i],u=l.toLowerCase();-1===t.indexOf(u)||n===j&&"canonical"===e[n].toLowerCase()||u===j&&"stylesheet"===e[u].toLowerCase()||(n=u),-1===t.indexOf(l)||l!==x&&l!==w&&l!==S||(n=l)}if(!n||!e[n])return!1;var s=e[n].toLowerCase();return r[n]||(r[n]={}),o[n]||(o[n]={}),!r[n][s]&&(o[n][s]=!0,!0)})).reverse().forEach((function(t){return e.push(t)}));for(var a=Object.keys(o),i=0;i<a.length;i++){var l=a[i],u=m()({},r[l],o[l]);r[l]=u}return e}),[]).reverse()},U=function(e,t){for(var n=e.length-1;n>=0;n--){var r=e[n];if(r.hasOwnProperty(t))return r[t]}return null},B=(e=Date.now(),function(t){var n=Date.now();n-e>16?(e=n,t(n)):setTimeout((function(){B(t)}),0)}),$=function(e){return clearTimeout(e)},H="undefined"!=typeof window?window.requestAnimationFrame&&window.requestAnimationFrame.bind(window)||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||B:n.g.requestAnimationFrame||B,W="undefined"!=typeof window?window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||$:n.g.cancelAnimationFrame||$,K=function(e){return console&&"function"==typeof console.warn&&console.warn(e)},q=null,Q=function(e,t){var n=e.baseTag,r=e.bodyAttributes,o=e.htmlAttributes,a=e.linkTags,i=e.metaTags,l=e.noscriptTags,u=e.onChangeClientState,s=e.scriptTags,c=e.styleTags,f=e.title,d=e.titleAttributes;X(y.BODY,r),X(y.HTML,o),G(f,d);var p={baseTag:Z(y.BASE,n),linkTags:Z(y.LINK,a),metaTags:Z(y.META,i),noscriptTags:Z(y.NOSCRIPT,l),scriptTags:Z(y.SCRIPT,s),styleTags:Z(y.STYLE,c)},h={},m={};Object.keys(p).forEach((function(e){var t=p[e],n=t.newTags,r=t.oldTags;n.length&&(h[e]=n),r.length&&(m[e]=p[e].oldTags)})),t&&t(),u(e,h,m)},Y=function(e){return Array.isArray(e)?e.join(""):e},G=function(e,t){void 0!==e&&document.title!==e&&(document.title=Y(e)),X(y.TITLE,t)},X=function(e,t){var n=document.getElementsByTagName(e)[0];if(n){for(var r=n.getAttribute(P),o=r?r.split(","):[],a=[].concat(o),i=Object.keys(t),l=0;l<i.length;l++){var u=i[l],s=t[u]||"";n.getAttribute(u)!==s&&n.setAttribute(u,s),-1===o.indexOf(u)&&o.push(u);var c=a.indexOf(u);-1!==c&&a.splice(c,1)}for(var f=a.length-1;f>=0;f--)n.removeAttribute(a[f]);o.length===a.length?n.removeAttribute(P):n.getAttribute(P)!==i.join(",")&&n.setAttribute(P,i.join(","))}},Z=function(e,t){var n=document.head||document.querySelector(y.HEAD),r=n.querySelectorAll(e+"[data-react-helmet]"),o=Array.prototype.slice.call(r),a=[],i=void 0;return t&&t.length&&t.forEach((function(t){var n=document.createElement(e);for(var r in t)if(t.hasOwnProperty(r))if(r===x)n.innerHTML=t.innerHTML;else if(r===w)n.styleSheet?n.styleSheet.cssText=t.cssText:n.appendChild(document.createTextNode(t.cssText));else{var l=void 0===t[r]?"":t[r];n.setAttribute(r,l)}n.setAttribute(P,"true"),o.some((function(e,t){return i=t,n.isEqualNode(e)}))?o.splice(i,1):a.push(n)})),o.forEach((function(e){return e.parentNode.removeChild(e)})),a.forEach((function(e){return n.appendChild(e)})),{oldTags:o,newTags:a}},J=function(e){return Object.keys(e).reduce((function(t,n){var r=void 0!==e[n]?n+'="'+e[n]+'"':""+n;return t?t+" "+r:r}),"")},ee=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object.keys(e).reduce((function(t,n){return t[E[n]||n]=e[n],t}),t)},te=function(e,t,n){switch(e){case y.TITLE:return{toComponent:function(){return e=t.title,n=t.titleAttributes,(r={key:e})[P]=!0,o=ee(n,r),[l.createElement(y.TITLE,o,e)];var e,n,r,o},toString:function(){return function(e,t,n,r){var o=J(n),a=Y(t);return o?"<"+e+' data-react-helmet="true" '+o+">"+R(a,r)+"</"+e+">":"<"+e+' data-react-helmet="true">'+R(a,r)+"</"+e+">"}(e,t.title,t.titleAttributes,n)}};case v:case g:return{toComponent:function(){return ee(t)},toString:function(){return J(t)}};default:return{toComponent:function(){return function(e,t){return t.map((function(t,n){var r,o=((r={key:n})[P]=!0,r);return Object.keys(t).forEach((function(e){var n=E[e]||e;if(n===x||n===w){var r=t.innerHTML||t.cssText;o.dangerouslySetInnerHTML={__html:r}}else o[n]=t[e]})),l.createElement(e,o)}))}(e,t)},toString:function(){return function(e,t,n){return t.reduce((function(t,r){var o=Object.keys(r).filter((function(e){return!(e===x||e===w)})).reduce((function(e,t){var o=void 0===r[t]?t:t+'="'+R(r[t],n)+'"';return e?e+" "+o:o}),""),a=r.innerHTML||r.cssText||"",i=-1===C.indexOf(e);return t+"<"+e+' data-react-helmet="true" '+o+(i?"/>":">"+a+"</"+e+">")}),"")}(e,t,n)}}}},ne=function(e){var t=e.baseTag,n=e.bodyAttributes,r=e.encode,o=e.htmlAttributes,a=e.linkTags,i=e.metaTags,l=e.noscriptTags,u=e.scriptTags,s=e.styleTags,c=e.title,f=void 0===c?"":c,d=e.titleAttributes;return{base:te(y.BASE,t,r),bodyAttributes:te(v,n,r),htmlAttributes:te(g,o,r),link:te(y.LINK,a,r),meta:te(y.META,i,r),noscript:te(y.NOSCRIPT,l,r),script:te(y.SCRIPT,u,r),style:te(y.STYLE,s,r),title:te(y.TITLE,{title:f,titleAttributes:d},r)}},re=f()((function(e){return{baseTag:F([k,"target"],e),bodyAttributes:D(v,e),defer:U(e,"defer"),encode:U(e,"encodeSpecialCharacters"),htmlAttributes:D(g,e),linkTags:V(y.LINK,[j,k],e),metaTags:V(y.META,["name",b,"http-equiv","property",S],e),noscriptTags:V(y.NOSCRIPT,[x],e),onChangeClientState:M(e),scriptTags:V(y.SCRIPT,["src",x],e),styleTags:V(y.STYLE,[w],e),title:I(e),titleAttributes:D("titleAttributes",e)}}),(function(e){q&&W(q),e.defer?q=H((function(){Q(e,(function(){q=null}))})):(Q(e),q=null)}),ne)((function(){return null})),oe=(t=re,o=r=function(e){function n(){return _(this,n),L(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,e),n.prototype.shouldComponentUpdate=function(e){return!p()(this.props,e)},n.prototype.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case y.SCRIPT:case y.NOSCRIPT:return{innerHTML:t};case y.STYLE:return{cssText:t}}throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")},n.prototype.flattenArrayTypeChildren=function(e){var t,n=e.child,r=e.arrayTypeChildren,o=e.newChildProps,a=e.nestedChildren;return A({},r,((t={})[n.type]=[].concat(r[n.type]||[],[A({},o,this.mapNestedChildrenToProps(n,a))]),t))},n.prototype.mapObjectTypeChildren=function(e){var t,n,r=e.child,o=e.newProps,a=e.newChildProps,i=e.nestedChildren;switch(r.type){case y.TITLE:return A({},o,((t={})[r.type]=i,t.titleAttributes=A({},a),t));case y.BODY:return A({},o,{bodyAttributes:A({},a)});case y.HTML:return A({},o,{htmlAttributes:A({},a)})}return A({},o,((n={})[r.type]=A({},a),n))},n.prototype.mapArrayTypeChildrenToProps=function(e,t){var n=A({},t);return Object.keys(e).forEach((function(t){var r;n=A({},n,((r={})[t]=e[t],r))})),n},n.prototype.warnOnInvalidChildren=function(e,t){return!0},n.prototype.mapChildrenToProps=function(e,t){var n=this,r={};return l.Children.forEach(e,(function(e){if(e&&e.props){var o=e.props,a=o.children,i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object.keys(e).reduce((function(t,n){return t[O[n]||n]=e[n],t}),t)}(N(o,["children"]));switch(n.warnOnInvalidChildren(e,a),e.type){case y.LINK:case y.META:case y.NOSCRIPT:case y.SCRIPT:case y.STYLE:r=n.flattenArrayTypeChildren({child:e,arrayTypeChildren:r,newChildProps:i,nestedChildren:a});break;default:t=n.mapObjectTypeChildren({child:e,newProps:t,newChildProps:i,nestedChildren:a})}}})),t=this.mapArrayTypeChildrenToProps(r,t)},n.prototype.render=function(){var e=this.props,n=e.children,r=N(e,["children"]),o=A({},r);return n&&(o=this.mapChildrenToProps(n,o)),l.createElement(t,o)},T(n,null,[{key:"canUseDOM",set:function(e){t.canUseDOM=e}}]),n}(l.Component),r.propTypes={base:s().object,bodyAttributes:s().object,children:s().oneOfType([s().arrayOf(s().node),s().node]),defaultTitle:s().string,defer:s().bool,encodeSpecialCharacters:s().bool,htmlAttributes:s().object,link:s().arrayOf(s().object),meta:s().arrayOf(s().object),noscript:s().arrayOf(s().object),onChangeClientState:s().func,script:s().arrayOf(s().object),style:s().arrayOf(s().object),title:s().string,titleAttributes:s().object,titleTemplate:s().string},r.defaultProps={defer:!0,encodeSpecialCharacters:!0},r.peek=t.peek,r.rewind=function(){var e=t.rewind();return e||(e=ne({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}})),e},o);oe.renderStatic=oe.rewind;const ae=function(){return(0,a.jsxs)(oe,{children:[(0,a.jsx)("meta",{charSet:"utf-8"},void 0),(0,a.jsx)("title",{children:"Červenopečecký mošt"},void 0),(0,a.jsx)("link",{rel:"icon",href:"../../assets/favicon.svg"},void 0)]},void 0)};var ie=n(864),le=n(774),ue=n.n(le);const se=function(e){function t(e,r,u,s,d){for(var p,h,m,v,w,x=0,S=0,j=0,E=0,O=0,A=0,L=m=p=0,I=0,M=0,D=0,F=0,V=u.length,U=V-1,B="",$="",H="",W="";I<V;){if(h=u.charCodeAt(I),I===U&&0!==S+E+j+x&&(0!==S&&(h=47===S?10:47),E=j=x=0,V++,U++),0===S+E+j+x){if(I===U&&(0<M&&(B=B.replace(f,"")),0<B.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:B+=u.charAt(I)}h=59}switch(h){case 123:for(p=(B=B.trim()).charCodeAt(0),m=1,F=++I;I<V;){switch(h=u.charCodeAt(I)){case 123:m++;break;case 125:m--;break;case 47:switch(h=u.charCodeAt(I+1)){case 42:case 47:e:{for(L=I+1;L<U;++L)switch(u.charCodeAt(L)){case 47:if(42===h&&42===u.charCodeAt(L-1)&&I+2!==L){I=L+1;break e}break;case 10:if(47===h){I=L+1;break e}}I=L}}break;case 91:h++;case 40:h++;case 34:case 39:for(;I++<U&&u.charCodeAt(I)!==h;);}if(0===m)break;I++}switch(m=u.substring(F,I),0===p&&(p=(B=B.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<M&&(B=B.replace(f,"")),h=B.charCodeAt(1)){case 100:case 109:case 115:case 45:M=r;break;default:M=T}if(F=(m=t(r,M,m,h,d+1)).length,0<N&&(w=l(3,m,M=n(T,B,D),r,P,C,F,h,d,s),B=M.join(""),void 0!==w&&0===(F=(m=w.trim()).length)&&(h=0,m="")),0<F)switch(h){case 115:B=B.replace(k,i);case 100:case 109:case 45:m=B+"{"+m+"}";break;case 107:m=(B=B.replace(g,"$1 $2"))+"{"+m+"}",m=1===_||2===_&&a("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=B+m,112===s&&($+=m,m="")}else m="";break;default:m=t(r,n(r,B,D),m,s,d+1)}H+=m,m=D=M=L=p=0,B="",h=u.charCodeAt(++I);break;case 125:case 59:if(1<(F=(B=(0<M?B.replace(f,""):B).trim()).length))switch(0===L&&(p=B.charCodeAt(0),45===p||96<p&&123>p)&&(F=(B=B.replace(" ",":")).length),0<N&&void 0!==(w=l(1,B,r,e,P,C,$.length,s,d,s))&&0===(F=(B=w.trim()).length)&&(B="\0\0"),p=B.charCodeAt(0),h=B.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){W+=B+u.charAt(I);break}default:58!==B.charCodeAt(F-1)&&($+=o(B,p,h,B.charCodeAt(2)))}D=M=L=p=0,B="",h=u.charCodeAt(++I)}}switch(h){case 13:case 10:47===S?S=0:0===1+p&&107!==s&&0<B.length&&(M=1,B+="\0"),0<N*R&&l(0,B,r,e,P,C,$.length,s,d,s),C=1,P++;break;case 59:case 125:if(0===S+E+j+x){C++;break}default:switch(C++,v=u.charAt(I),h){case 9:case 32:if(0===E+x+S)switch(O){case 44:case 58:case 9:case 32:v="";break;default:32!==h&&(v=" ")}break;case 0:v="\\0";break;case 12:v="\\f";break;case 11:v="\\v";break;case 38:0===E+S+x&&(M=D=1,v="\f"+v);break;case 108:if(0===E+S+x+z&&0<L)switch(I-L){case 2:112===O&&58===u.charCodeAt(I-3)&&(z=O);case 8:111===A&&(z=A)}break;case 58:0===E+S+x&&(L=I);break;case 44:0===S+j+E+x&&(M=1,v+="\r");break;case 34:case 39:0===S&&(E=E===h?0:0===E?h:E);break;case 91:0===E+S+j&&x++;break;case 93:0===E+S+j&&x--;break;case 41:0===E+S+x&&j--;break;case 40:if(0===E+S+x){if(0===p)switch(2*O+3*A){case 533:break;default:p=1}j++}break;case 64:0===S+j+E+x+L+m&&(m=1);break;case 42:case 47:if(!(0<E+x+j))switch(S){case 0:switch(2*h+3*u.charCodeAt(I+1)){case 235:S=47;break;case 220:F=I,S=42}break;case 42:47===h&&42===O&&F+2!==I&&(33===u.charCodeAt(F+2)&&($+=u.substring(F,I+1)),v="",S=0)}}0===S&&(B+=v)}A=O,O=h,I++}if(0<(F=$.length)){if(M=r,0<N&&void 0!==(w=l(2,$,M,e,P,C,F,s,d,s))&&0===($=w).length)return W+$+H;if($=M.join(",")+"{"+$+"}",0!=_*z){switch(2!==_||a($,2)||(z=0),z){case 111:$=$.replace(b,":-moz-$1")+$;break;case 112:$=$.replace(y,"::-webkit-input-$1")+$.replace(y,"::-moz-$1")+$.replace(y,":-ms-input-$1")+$}z=0}}return W+$+H}function n(e,t,n){var o=t.trim().split(m);t=o;var a=o.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<a;++l)t[l]=r(e,t[l],n).trim();break;default:var u=l=0;for(t=[];l<a;++l)for(var s=0;s<i;++s)t[u++]=r(e[s]+" ",o[l],n).trim()}return t}function r(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(v,"$1"+e.trim());case 58:return e.trim()+t.replace(v,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(v,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function o(e,t,n,r){var i=e+";",l=2*t+3*n+4*r;if(944===l){e=i.indexOf(":",9)+1;var u=i.substring(e,i.length-1).trim();return u=i.substring(0,e).trim()+u+";",1===_||2===_&&a(u,1)?"-webkit-"+u+u:u}if(0===_||2===_&&!a(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(O,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(u=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+u+i;case 1005:return p.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(u=i.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=i.replace(w,"tb");break;case 232:u=i.replace(w,"tb-rl");break;case 220:u=i.replace(w,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+u+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(u=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:i=i.replace(u,"-webkit-"+u)+";"+i;break;case 207:case 102:i=i.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(u,"-webkit-"+u)+";"+i.replace(u,"-ms-"+u+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return u=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+u+"-ms-flex-"+u+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(S,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(S,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===E.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?o(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):i.replace(u,"-webkit-"+u)+i.replace(u,"-moz-"+u.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+r&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+i}return i}function a(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),L(2!==t?r:r.replace(j,"$1"),n,t)}function i(e,t){var n=o(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(x," or ($1)").substring(4):"("+t+")"}function l(e,t,n,r,o,a,i,l,u,c){for(var f,d=0,p=t;d<N;++d)switch(f=A[d].call(s,e,p,n,r,o,a,i,l,u,c)){case void 0:case!1:case!0:case null:break;default:p=f}if(p!==t)return p}function u(e){return void 0!==(e=e.prefix)&&(L=null,e?"function"!=typeof e?_=1:(_=2,L=e):_=0),u}function s(e,n){var r=e;if(33>r.charCodeAt(0)&&(r=r.trim()),r=[r],0<N){var o=l(-1,n,r,r,P,C,0,0,0,0);void 0!==o&&"string"==typeof o&&(n=o)}var a=t(T,r,n,0,0);return 0<N&&void 0!==(o=l(-2,a,r,r,P,C,a.length,0,0,0))&&(a=o),z=0,C=P=1,a}var c=/^\0+/g,f=/[\0\r\f]/g,d=/: */g,p=/zoo|gra/,h=/([,: ])(transform)/g,m=/,\r+?/g,v=/([\t\r\n ])*\f?&/g,g=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,b=/:(read-only)/g,w=/[svh]\w+-[tblr]{2}/,k=/\(\s*(.*)\s*\)/g,x=/([\s\S]*?);/g,S=/-self|flex-/g,j=/[^]*?(:[rp][el]a[\w-]+)[^]*/,E=/stretch|:\s*\w+\-(?:conte|avail)/,O=/([^-])(image-set\()/,C=1,P=1,z=0,_=1,T=[],A=[],N=0,L=null,R=0;return s.use=function e(t){switch(t){case void 0:case null:N=A.length=0;break;default:if("function"==typeof t)A[N++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else R=0|!!t}return e},s.set=u,void 0!==e&&u(e),s},ce={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var fe=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const de=(pe={},function(e){return void 0===pe[e]&&(pe[e]=(t=e,fe.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),pe[e];var t});var pe,he=n(679),me=n.n(he);function ve(){return(ve=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var ge=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},ye=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,ie.typeOf)(e)},be=Object.freeze([]),we=Object.freeze({});function ke(e){return"function"==typeof e}function xe(e){return e.displayName||e.name||"Component"}function Se(e){return e&&"string"==typeof e.styledComponentId}var je="undefined"!=typeof process&&("MISSING_ENV_VAR".REACT_APP_SC_ATTR||"MISSING_ENV_VAR".SC_ATTR)||"data-styled",Ee="undefined"!=typeof window&&"HTMLElement"in window,Oe=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=="MISSING_ENV_VAR".REACT_APP_SC_DISABLE_SPEEDY&&""!=="MISSING_ENV_VAR".REACT_APP_SC_DISABLE_SPEEDY?"false"!=="MISSING_ENV_VAR".REACT_APP_SC_DISABLE_SPEEDY&&"MISSING_ENV_VAR".REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=="MISSING_ENV_VAR".SC_DISABLE_SPEEDY&&""!=="MISSING_ENV_VAR".SC_DISABLE_SPEEDY&&"false"!=="MISSING_ENV_VAR".SC_DISABLE_SPEEDY&&"MISSING_ENV_VAR".SC_DISABLE_SPEEDY),Ce={};function Pe(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var ze=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)(o<<=1)<0&&Pe(16,""+e);this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var a=r;a<o;a++)this.groupSizes[a]=0}for(var i=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(i,t[l])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,a=r;a<o;a++)t+=this.tag.getRule(a)+"/*!sc*/\n";return t},e}(),_e=new Map,Te=new Map,Ae=1,Ne=function(e){if(_e.has(e))return _e.get(e);for(;Te.has(Ae);)Ae++;var t=Ae++;return _e.set(e,t),Te.set(t,e),t},Le=function(e){return Te.get(e)},Re=function(e,t){_e.set(e,t),Te.set(t,e)},Ie="style["+je+'][data-styled-version="5.2.3"]',Me=new RegExp("^"+je+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),De=function(e,t,n){for(var r,o=n.split(","),a=0,i=o.length;a<i;a++)(r=o[a])&&e.registerName(t,r)},Fe=function(e,t){for(var n=t.innerHTML.split("/*!sc*/\n"),r=[],o=0,a=n.length;o<a;o++){var i=n[o].trim();if(i){var l=i.match(Me);if(l){var u=0|parseInt(l[1],10),s=l[2];0!==u&&(Re(s,u),De(e,s,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(i)}}},Ve=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},Ue=function(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(je))return r}}(n),a=void 0!==o?o.nextSibling:null;r.setAttribute(je,"active"),r.setAttribute("data-styled-version","5.2.3");var i=Ve();return i&&r.setAttribute("nonce",i),n.insertBefore(r,a),r},Be=function(){function e(e){var t=this.element=Ue(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}Pe(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),$e=function(){function e(e){var t=this.element=Ue(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),He=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),We=Ee,Ke={isServer:!Ee,useCSSOMInjection:!Oe},qe=function(){function e(e,t,n){void 0===e&&(e=we),void 0===t&&(t={}),this.options=ve({},Ke,{},e),this.gs=t,this.names=new Map(n),!this.options.isServer&&Ee&&We&&(We=!1,function(e){for(var t=document.querySelectorAll(Ie),n=0,r=t.length;n<r;n++){var o=t[n];o&&"active"!==o.getAttribute(je)&&(Fe(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this))}e.registerId=function(e){return Ne(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(ve({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,o=t.target,e=n?new He(o):r?new Be(o):new $e(o),new ze(e)));var e,t,n,r,o},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(Ne(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(Ne(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(Ne(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=0;o<n;o++){var a=Le(o);if(void 0!==a){var i=e.names.get(a),l=t.getGroup(o);if(void 0!==i&&0!==l.length){var u=je+".g"+o+'[id="'+a+'"]',s="";void 0!==i&&i.forEach((function(e){e.length>0&&(s+=e+",")})),r+=""+l+u+'{content:"'+s+'"}/*!sc*/\n'}}}return r}(this)},e}(),Qe=/(a)(d)/gi,Ye=function(e){return String.fromCharCode(e+(e>25?39:97))};function Ge(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=Ye(t%52)+n;return(Ye(t%52)+n).replace(Qe,"$1-$2")}var Xe=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},Ze=function(e){return Xe(5381,e)};function Je(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(ke(n)&&!Se(n))return!1}return!0}var et=Ze("5.2.3"),tt=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&Je(e),this.componentId=t,this.baseHash=Xe(et,t),this.baseStyle=n,qe.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,o=[];if(this.baseStyle&&o.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))o.push(this.staticRulesId);else{var a=bt(this.rules,e,t,n).join(""),i=Ge(Xe(this.baseHash,a.length)>>>0);if(!t.hasNameForId(r,i)){var l=n(a,"."+i,void 0,r);t.insertRules(r,i,l)}o.push(i),this.staticRulesId=i}else{for(var u=this.rules.length,s=Xe(this.baseHash,n.hash),c="",f=0;f<u;f++){var d=this.rules[f];if("string"==typeof d)c+=d;else if(d){var p=bt(d,e,t,n),h=Array.isArray(p)?p.join(""):p;s=Xe(s,h+f),c+=h}}if(c){var m=Ge(s>>>0);if(!t.hasNameForId(r,m)){var v=n(c,"."+m,void 0,r);t.insertRules(r,m,v)}o.push(m)}}return o.join(" ")},e}(),nt=/^\s*\/\/.*$/gm,rt=[":","[",".","#"];function ot(e){var t,n,r,o,a=void 0===e?we:e,i=a.options,l=void 0===i?we:i,u=a.plugins,s=void 0===u?be:u,c=new se(l),f=[],d=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,a,i,l,u,s,c,f){switch(n){case 1:if(0===c&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){f.push(e)})),p=function(e,r,a){return 0===r&&-1!==rt.indexOf(a[n.length])||a.match(o)?e:"."+t};function h(e,a,i,l){void 0===l&&(l="&");var u=e.replace(nt,""),s=a&&i?i+" "+a+" { "+u+" }":u;return t=l,n=a,r=new RegExp("\\"+n+"\\b","g"),o=new RegExp("(\\"+n+"\\b){2,}"),c(i||!a?"":a,s)}return c.use([].concat(s,[function(e,t,o){2===e&&o.length&&o[0].lastIndexOf(n)>0&&(o[0]=o[0].replace(r,p))},d,function(e){if(-2===e){var t=f;return f=[],t}}])),h.hash=s.length?s.reduce((function(e,t){return t.name||Pe(15),Xe(e,t.name)}),5381).toString():"",h}var at=l.createContext(),it=(at.Consumer,l.createContext()),lt=(it.Consumer,new qe),ut=ot();function st(){return(0,l.useContext)(at)||lt}function ct(){return(0,l.useContext)(it)||ut}function ft(e){var t=(0,l.useState)(e.stylisPlugins),n=t[0],r=t[1],o=st(),a=(0,l.useMemo)((function(){var t=o;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),i=(0,l.useMemo)((function(){return ot({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return(0,l.useEffect)((function(){ue()(n,e.stylisPlugins)||r(e.stylisPlugins)}),[e.stylisPlugins]),l.createElement(at.Provider,{value:a},l.createElement(it.Provider,{value:i},e.children))}var dt=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ut);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return Pe(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ut),this.name+e.hash},e}(),pt=/([A-Z])/,ht=/([A-Z])/g,mt=/^ms-/,vt=function(e){return"-"+e.toLowerCase()};function gt(e){return pt.test(e)?e.replace(ht,vt).replace(mt,"-ms-"):e}var yt=function(e){return null==e||!1===e||""===e};function bt(e,t,n,r){if(Array.isArray(e)){for(var o,a=[],i=0,l=e.length;i<l;i+=1)""!==(o=bt(e[i],t,n,r))&&(Array.isArray(o)?a.push.apply(a,o):a.push(o));return a}return yt(e)?"":Se(e)?"."+e.styledComponentId:ke(e)?"function"!=typeof(u=e)||u.prototype&&u.prototype.isReactComponent||!t?e:bt(e(t),t,n,r):e instanceof dt?n?(e.inject(n,r),e.getName(r)):e:ye(e)?function e(t,n){var r,o,a=[];for(var i in t)t.hasOwnProperty(i)&&!yt(t[i])&&(ye(t[i])?a.push.apply(a,e(t[i],i)):ke(t[i])?a.push(gt(i)+":",t[i],";"):a.push(gt(i)+": "+(r=i,(null==(o=t[i])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in ce?String(o).trim():o+"px")+";")));return n?[n+" {"].concat(a,["}"]):a}(e):e.toString();var u}function wt(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return ke(e)||ye(e)?bt(ge(be,[e].concat(n))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:bt(ge(e,n))}new Set;var kt=function(e,t,n){return void 0===n&&(n=we),e.theme!==n.theme&&e.theme||t||n.theme},xt=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,St=/(^-|-$)/g;function jt(e){return e.replace(xt,"-").replace(St,"")}var Et=function(e){return Ge(Ze(e)>>>0)};function Ot(e){return"string"==typeof e&&!0}var Ct=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Pt=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function zt(e,t,n){var r=e[n];Ct(t)&&Ct(r)?_t(r,t):e[n]=t}function _t(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var o=0,a=n;o<a.length;o++){var i=a[o];if(Ct(i))for(var l in i)Pt(l)&&zt(e,i[l],l)}return e}var Tt=l.createContext();function At(e){var t=(0,l.useContext)(Tt),n=(0,l.useMemo)((function(){return function(e,t){return e?ke(e)?e(t):Array.isArray(e)||"object"!=typeof e?Pe(8):t?ve({},t,{},e):e:Pe(14)}(e.theme,t)}),[e.theme,t]);return e.children?l.createElement(Tt.Provider,{value:n},e.children):null}Tt.Consumer;var Nt={};function Lt(e,t,n){var r=Se(e),o=!Ot(e),a=t.attrs,i=void 0===a?be:a,u=t.componentId,s=void 0===u?function(e,t){var n="string"!=typeof e?"sc":jt(e);Nt[n]=(Nt[n]||0)+1;var r=n+"-"+Et("5.2.3"+n+Nt[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):u,c=t.displayName,f=void 0===c?function(e){return Ot(e)?"styled."+e:"Styled("+xe(e)+")"}(e):c,d=t.displayName&&t.componentId?jt(t.displayName)+"-"+t.componentId:t.componentId||s,p=r&&e.attrs?Array.prototype.concat(e.attrs,i).filter(Boolean):i,h=t.shouldForwardProp;r&&e.shouldForwardProp&&(h=t.shouldForwardProp?function(n,r){return e.shouldForwardProp(n,r)&&t.shouldForwardProp(n,r)}:e.shouldForwardProp);var m,v=new tt(n,d,r?e.componentStyle:void 0),g=v.isStatic&&0===i.length,y=function(e,t){return function(e,t,n,r){var o=e.attrs,a=e.componentStyle,i=e.defaultProps,u=e.foldedComponentIds,s=e.shouldForwardProp,c=e.styledComponentId,f=e.target,d=function(e,t,n){void 0===e&&(e=we);var r=ve({},t,{theme:e}),o={};return n.forEach((function(e){var t,n,a,i=e;for(t in ke(i)&&(i=i(r)),i)r[t]=o[t]="className"===t?(n=o[t],a=i[t],n&&a?n+" "+a:n||a):i[t]})),[r,o]}(kt(t,(0,l.useContext)(Tt),i)||we,t,o),p=d[0],h=d[1],m=function(e,t,n,r){var o=st(),a=ct();return t?e.generateAndInjectStyles(we,o,a):e.generateAndInjectStyles(n,o,a)}(a,r,p),v=n,g=h.$as||t.$as||h.as||t.as||f,y=Ot(g),b=h!==t?ve({},t,{},h):t,w={};for(var k in b)"$"!==k[0]&&"as"!==k&&("forwardedAs"===k?w.as=b[k]:(s?s(k,de):!y||de(k))&&(w[k]=b[k]));return t.style&&h.style!==t.style&&(w.style=ve({},t.style,{},h.style)),w.className=Array.prototype.concat(u,c,m!==c?m:null,t.className,h.className).filter(Boolean).join(" "),w.ref=v,(0,l.createElement)(g,w)}(m,e,t,g)};return y.displayName=f,(m=l.forwardRef(y)).attrs=p,m.componentStyle=v,m.displayName=f,m.shouldForwardProp=h,m.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):be,m.styledComponentId=d,m.target=r?e.target:e,m.withComponent=function(e){var r=t.componentId,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(t,["componentId"]),a=r&&r+"-"+(Ot(e)?e:jt(xe(e)));return Lt(e,ve({},o,{attrs:p,componentId:a}),n)},Object.defineProperty(m,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=r?_t({},e.defaultProps,t):t}}),m.toString=function(){return"."+m.styledComponentId},o&&me()(m,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),m}var Rt=function(e){return function e(t,n,r){if(void 0===r&&(r=we),!(0,ie.isValidElementType)(n))return Pe(1,String(n));var o=function(){return t(n,r,wt.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,ve({},r,{},o))},o.attrs=function(o){return e(t,n,ve({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Lt,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){Rt[e]=Rt(e)}));var It,Mt=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Je(e),qe.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var o=r(bt(this.rules,t,n,r).join(""),""),a=this.componentId+e;n.insertRules(a,a,o)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){e>2&&qe.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();(It=function(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),n=Ve();return"<style "+[n&&'nonce="'+n+'"',je+'="true"','data-styled-version="5.2.3"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?Pe(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return Pe(2);var n=((t={})[je]="",t["data-styled-version"]="5.2.3",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),r=Ve();return r&&(n.nonce=r),[l.createElement("style",ve({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new qe({isServer:!0}),this.sealed=!1}.prototype).collectStyles=function(e){return this.sealed?Pe(2):l.createElement(ft,{sheet:this.instance},e)},It.interleaveWithNodeStream=function(e){return Pe(3)};const Dt=Rt;var Ft={colors:{greyDark:"rgb(60, 60, 59)",redDark:"rgb(228, 3, 46)",redLight:"rgb(255, 77, 73)",ocher:"rgb(255, 222, 148)",white:"rgb(255,255,255)"},fontSize:{header:"2.5rem",normal:"1.3rem",small:"1.0rem"}};const Vt=n.p+"aa3b1f3d321a83d35cec60b687414c9d.ttf",Ut=n.p+"a8d6ac03c7b96b7acb6228ff2676139d.ttf",Bt=n.p+"75371f53f06181df75f16f2a140533e5.ttf",$t=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o=wt.apply(void 0,[e].concat(n)),a="sc-global-"+Et(JSON.stringify(o)),i=new Mt(o,a);function u(e){var t=st(),n=ct(),r=(0,l.useContext)(Tt),o=(0,l.useRef)(t.allocateGSInstance(a)).current;return(0,l.useLayoutEffect)((function(){return s(o,e,t,r,n),function(){return i.removeStyles(o,t)}}),[o,e,t,r,n]),null}function s(e,t,n,r,o){if(i.isStatic)i.renderStyles(e,Ce,n,o);else{var a=ve({},t,{theme:kt(t,r,u.defaultProps)});i.renderStyles(e,a,n,o)}}return l.memo(u)}(Kt||(Ht=["\n    @font-face {\n        font-family: 'barlow';\n        src: url(",") format('truetype');\n    };\n\n    @font-face {\n        font-family: 'roboto';\n        src: url(",") format('truetype');\n    };\n\n    @font-face {\n        font-family: 'robotoBold';\n        src: url(",") format('truetype');\n    };\n\n    * {\n        margin: 0rem;\n        padding: 0rem;\n        box-sizing: border-box;\n    }\n\n    html {\n        font-size: 10px;\n        font-family: \"roboto\";\n        height: 100%;\n       \n    }\n\n    body {\n        font-size: ",";\n        height: 100%;\n        background-color: ",";\n        \n    }\n\n    #root {\n        height: 100%;\n    }\n"],Wt=["\n    @font-face {\n        font-family: 'barlow';\n        src: url(",") format('truetype');\n    };\n\n    @font-face {\n        font-family: 'roboto';\n        src: url(",") format('truetype');\n    };\n\n    @font-face {\n        font-family: 'robotoBold';\n        src: url(",") format('truetype');\n    };\n\n    * {\n        margin: 0rem;\n        padding: 0rem;\n        box-sizing: border-box;\n    }\n\n    html {\n        font-size: 10px;\n        font-family: \"roboto\";\n        height: 100%;\n       \n    }\n\n    body {\n        font-size: ",";\n        height: 100%;\n        background-color: ",";\n        \n    }\n\n    #root {\n        height: 100%;\n    }\n"],Object.defineProperty?Object.defineProperty(Ht,"raw",{value:Wt}):Ht.raw=Wt,Kt=Ht),Vt,Ut,Bt,(function(e){return e.theme.fontSize.normal}),(function(e){return e.theme.colors.white}));var Ht,Wt,Kt;function qt(e,t){return(qt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Qt(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,qt(e,t)}function Yt(){return(Yt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Gt(e){return"/"===e.charAt(0)}function Xt(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}const Zt=function(e,t){if(!e)throw new Error("Invariant failed")};function Jt(e){return"/"===e.charAt(0)?e:"/"+e}function en(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function tn(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function nn(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function rn(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=Yt({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],a=e&&Gt(e),i=t&&Gt(t),l=a||i;if(e&&Gt(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var s=0,c=o.length;c>=0;c--){var f=o[c];"."===f?Xt(o,c):".."===f?(Xt(o,c),s++):s&&(Xt(o,c),s--)}if(!l)for(;s--;s)o.unshift("..");!l||""===o[0]||o[0]&&Gt(o[0])||o.unshift("");var d=o.join("/");return n&&"/"!==d.substr(-1)&&(d+="/"),d}(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function on(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var an=!("undefined"==typeof window||!window.document||!window.document.createElement);function ln(e,t){t(window.confirm(e))}var un="popstate",sn="hashchange";function cn(){try{return window.history.state||{}}catch(e){return{}}}function fn(e){void 0===e&&(e={}),an||Zt(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,i=a.forceRefresh,l=void 0!==i&&i,u=a.getUserConfirmation,s=void 0===u?ln:u,c=a.keyLength,f=void 0===c?6:c,d=e.basename?tn(Jt(e.basename)):"";function p(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return d&&(a=en(a,d)),rn(a,r,n)}function h(){return Math.random().toString(36).substr(2,f)}var m=on();function v(e){Yt(P,e),P.length=n.length,m.notifyListeners(P.location,P.action)}function g(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||w(p(e.state))}function y(){w(p(cn()))}var b=!1;function w(e){b?(b=!1,v()):m.confirmTransitionTo(e,"POP",s,(function(t){t?v({action:"POP",location:e}):function(e){var t=P.location,n=x.indexOf(t.key);-1===n&&(n=0);var r=x.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(b=!0,j(o))}(e)}))}var k=p(cn()),x=[k.key];function S(e){return d+nn(e)}function j(e){n.go(e)}var E=0;function O(e){1===(E+=e)&&1===e?(window.addEventListener(un,g),o&&window.addEventListener(sn,y)):0===E&&(window.removeEventListener(un,g),o&&window.removeEventListener(sn,y))}var C=!1,P={length:n.length,action:"POP",location:k,createHref:S,push:function(e,t){var o="PUSH",a=rn(e,t,h(),P.location);m.confirmTransitionTo(a,o,s,(function(e){if(e){var t=S(a),i=a.key,u=a.state;if(r)if(n.pushState({key:i,state:u},null,t),l)window.location.href=t;else{var s=x.indexOf(P.location.key),c=x.slice(0,s+1);c.push(a.key),x=c,v({action:o,location:a})}else window.location.href=t}}))},replace:function(e,t){var o="REPLACE",a=rn(e,t,h(),P.location);m.confirmTransitionTo(a,o,s,(function(e){if(e){var t=S(a),i=a.key,u=a.state;if(r)if(n.replaceState({key:i,state:u},null,t),l)window.location.replace(t);else{var s=x.indexOf(P.location.key);-1!==s&&(x[s]=a.key),v({action:o,location:a})}else window.location.replace(t)}}))},go:j,goBack:function(){j(-1)},goForward:function(){j(1)},block:function(e){void 0===e&&(e=!1);var t=m.setPrompt(e);return C||(O(1),C=!0),function(){return C&&(C=!1,O(-1)),t()}},listen:function(e){var t=m.appendListener(e);return O(1),function(){O(-1),t()}}};return P}var dn=1073741823,pn="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function hn(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const mn=l.createContext||function(e,t){var n,r,o,a="__create-react-context-"+((pn[o="__global_unique_id__"]=(pn[o]||0)+1)+"__"),i=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=hn(t.props.value),t}Qt(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[a]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;!function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(r,o)?(n="function"==typeof t?t(r,o):dn,0!=(n|=0)&&this.emitter.set(e.value,n)):n=0}},r.render=function(){return this.props.children},n}(l.Component);i.childContextTypes=((n={})[a]=s().object.isRequired,n);var u=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}Qt(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?dn:t},r.componentDidMount=function(){this.context[a]&&this.context[a].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?dn:e},r.componentWillUnmount=function(){this.context[a]&&this.context[a].off(this.onUpdate)},r.getValue=function(){return this.context[a]?this.context[a].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(l.Component);return u.contextTypes=((r={})[a]=s().object,r),{Provider:i,Consumer:u}};var vn=n(658),gn=n.n(vn);function yn(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var bn=function(e){var t=mn();return t.displayName="Router-History",t}(),wn=function(e){var t=mn();return t.displayName="Router",t}(),kn=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}Qt(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return l.createElement(wn.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},l.createElement(bn.Provider,{children:this.props.children||null,value:this.props.history}))},t}(l.Component);l.Component,l.Component;var xn={},Sn=0;function jn(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,a=void 0!==o&&o,i=n.strict,l=void 0!==i&&i,u=n.sensitive,s=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=xn[n]||(xn[n]={});if(r[e])return r[e];var o=[],a={regexp:gn()(e,o,t),keys:o};return Sn<1e4&&(r[e]=a,Sn++),a}(n,{end:a,strict:l,sensitive:s}),o=r.regexp,i=r.keys,u=o.exec(e);if(!u)return null;var c=u[0],f=u.slice(1),d=e===c;return a&&!d?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var En=function(e){function t(){return e.apply(this,arguments)||this}return Qt(t,e),t.prototype.render=function(){var e=this;return l.createElement(wn.Consumer,null,(function(t){t||Zt(!1);var n=e.props.location||t.location,r=Yt({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?jn(n.pathname,e.props):t.match}),o=e.props,a=o.children,i=o.component,u=o.render;return Array.isArray(a)&&0===a.length&&(a=null),l.createElement(wn.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:i?l.createElement(i,r):u?u(r):null:"function"==typeof a?a(r):null)}))},t}(l.Component);l.Component;var On=function(e){function t(){return e.apply(this,arguments)||this}return Qt(t,e),t.prototype.render=function(){var e=this;return l.createElement(wn.Consumer,null,(function(t){t||Zt(!1);var n,r,o=e.props.location||t.location;return l.Children.forEach(e.props.children,(function(e){if(null==r&&l.isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?jn(o.pathname,Yt({},e.props,{path:a})):t.match}})),r?l.cloneElement(n,{location:o,computedMatch:r}):null}))},t}(l.Component),Cn=l.useContext;var Pn=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=fn(t.props),t}return Qt(t,e),t.prototype.render=function(){return l.createElement(kn,{history:this.history,children:this.props.children})},t}(l.Component);l.Component;var zn=function(e,t){return"function"==typeof e?e(t):e},_n=function(e,t){return"string"==typeof e?rn(e,null,null,t):e},Tn=function(e){return e},An=l.forwardRef;void 0===An&&(An=Tn);var Nn=An((function(e,t){var n=e.innerRef,r=e.navigate,o=e.onClick,a=yn(e,["innerRef","navigate","onClick"]),i=a.target,u=Yt({},a,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=Tn!==An&&t||n,l.createElement("a",u)})),Ln=An((function(e,t){var n=e.component,r=void 0===n?Nn:n,o=e.replace,a=e.to,i=e.innerRef,u=yn(e,["component","replace","to","innerRef"]);return l.createElement(wn.Consumer,null,(function(e){e||Zt(!1);var n=e.history,s=_n(zn(a,e.location),e.location),c=s?n.createHref(s):"",f=Yt({},u,{href:c,navigate:function(){var t=zn(a,e.location);(o?n.replace:n.push)(t)}});return Tn!==An?f.ref=t||i:f.innerRef=i,l.createElement(r,f)}))})),Rn=function(e){return e},In=l.forwardRef;void 0===In&&(In=Rn);var Mn,Dn=In((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,o=e.activeClassName,a=void 0===o?"active":o,i=e.activeStyle,u=e.className,s=e.exact,c=e.isActive,f=e.location,d=e.sensitive,p=e.strict,h=e.style,m=e.to,v=e.innerRef,g=yn(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return l.createElement(wn.Consumer,null,(function(e){e||Zt(!1);var n=f||e.location,o=_n(zn(m,n),n),y=o.pathname,b=y&&y.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=b?jn(n.pathname,{path:b,exact:s,sensitive:d,strict:p}):null,k=!!(c?c(w,n):w),x=k?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,a):u,S=k?Yt({},h,{},i):h,j=Yt({"aria-current":k&&r||null,className:x,style:S,to:o},g);return Rn!==In?j.ref=t||v:j.innerRef=v,l.createElement(Ln,j)}))}));function Fn(){return(Fn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Vn;function Un(){return(Un=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Bn;function $n(){return($n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Hn;function Wn(){return(Wn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Kn;function qn(){return(qn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Qn;function Yn(){return(Yn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Gn;function Xn(){return(Xn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Zn;function Jn(){return(Jn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var er;function tr(){return(tr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}const nr=n.p+"862f65fe9ceae88b1f9d0ac6d4a18238.jpg",rr=n.p+"81ebb959b575167626ba82306323b52c.jpg",or=n.p+"1ffe62b64ed355c5896ef7ab4560b24f.jpg",ar=n.p+"bfba59f6f551f9fadc6860d1e30a1adc.jpg";var ir;!function(e){e.Home="/",e.WantToFruitPress="/chci-zmostovat",e.WhereToBuy="/kde-zakoupit",e.OurProducts="/nase-produkty",e.Contact="/kontakt",e.WorkPlace="/mostarna",e.Products="/produkty",e.FruitOrchards="/ovocne-sady",e.PublicAppleJuicing="/mostovani-pro-verejnost"}(ir||(ir={}));var lr=[{route:ir.Home,label:"O nás",icon:function(e){return l.createElement("svg",Fn({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Mn||(Mn=l.createElement("path",{className:"home_svg__cls-1",d:"M77.28 51.32L54.23 28.37 50 24.14l-4.23 4.22-23.05 23L27 55.54l2-1.87v22.19h14.57V63.28a6.12 6.12 0 016.08-6.13h.71a6.12 6.12 0 016.07 6.13v12.58h14.63V53.67l2 1.87z","data-name":"Vrstva 1"})))}},{route:ir.WantToFruitPress,label:"Chci zmoštovat",icon:function(e){return l.createElement("svg",Wn({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Hn||(Hn=l.createElement("path",{className:"fruitPress_svg__cls-1",d:"M52.94 29H64.7a3.38 3.38 0 100-3.17H53a3.35 3.35 0 00-6 0H35.35A3.39 3.39 0 1035.3 29h11.76a3.46 3.46 0 001.36 1.35v9.86H35.47v30.5H30A5.28 5.28 0 0035.28 76h29.44A5.28 5.28 0 0070 70.71h-5.47V40.22h-13v-9.86A3.4 3.4 0 0052.94 29","data-name":"Vrstva 1"})))}},{route:ir.OurProducts,label:"Naše produkty",icon:function(e){return l.createElement("svg",qn({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Kn||(Kn=l.createElement("g",{"data-name":"Vrstva 1"},l.createElement("path",{className:"twoBottles_svg__cls-1",d:"M47.87 63.4s-6.93.82-10 .82-10-.82-10-.82V50.13a92.33 92.33 0 009.95.87 92.33 92.33 0 0010-.82zm1.88 10.87s-.19-25.22 0-27.85-1-7.18-3.83-11a8.33 8.33 0 01-1.76-6.14A3.72 3.72 0 0045.87 26c0-2-1.34-3.61-3-3.61H32.76c-1.65 0-3 1.63-3 3.61a3.73 3.73 0 001.71 3.24 8.26 8.26 0 01-1.75 6.14c-2.79 3.85-4 8.41-3.83 11s0 27.85 0 27.85-.67 3.33 11.94 3.33 11.93-3.33 11.93-3.33M72.28 66.68s-4.89.58-7.1.58-7.09-.58-7.09-.58v-9.36a65 65 0 007.09.58 65.06 65.06 0 007.1-.58zm1.84 8.42s-.15-18.92 0-20.89a14.38 14.38 0 00-2.86-8.28 6.36 6.36 0 01-1.35-4.37A2.92 2.92 0 0071.2 39a2.58 2.58 0 00-2.2-2.8h-7.6a2.59 2.59 0 00-2.24 2.8 2.94 2.94 0 001.31 2.54 6.39 6.39 0 01-1.34 4.37 14.33 14.33 0 00-2.87 8.28c.13 2 0 20.89 0 20.89s-.51 2.5 8.93 2.5 8.94-2.5 8.94-2.5"}))))}},{route:ir.WhereToBuy,label:"Kde zakoupit",icon:function(e){return l.createElement("svg",Un({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Vn||(Vn=l.createElement("g",{"data-name":"Vrstva 1"},l.createElement("path",{className:"shoppingCart_svg__cls-1",d:"M69.23 62.77a6.62 6.62 0 106.6 6.62 6.6 6.6 0 00-6.6-6.62M42.33 62.77h-.14l-8.28-35.26A4.64 4.64 0 0029.49 24H16.3a1.91 1.91 0 000 3.81h13.19a.9.9 0 01.73.57L38.57 64a6.6 6.6 0 103.76-1.18"}),l.createElement("path",{className:"shoppingCart_svg__cls-1",d:"M81.07 32.4H37.21l2 8.42.42 1.79.18.73L42.09 53l1.18 5v.14l.7 3h28.58a2.51 2.51 0 002.36-1.66L76.52 55l5.72-15.81 1.2-3.34a2.53 2.53 0 00-2.37-3.4"}))))}},{route:ir.Contact,label:"Kontakt",icon:function(e){return l.createElement("svg",$n({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Bn||(Bn=l.createElement("path",{className:"cellPhone_svg__cls-1",d:"M27.36 41.26A14.57 14.57 0 0133 28l.4-.31a3.69 3.69 0 014.73.31l4.34 4.34a3.64 3.64 0 010 5.13l-2.07 2.69a5.57 5.57 0 00-.71 5.56c2 4.74 6.7 13.4 14.55 15.16a5.65 5.65 0 004.66-1.07l3.34-2.57a3.64 3.64 0 015.13 0l4.34 4.34a3.7 3.7 0 01.29 4.78l-.28.35a16.42 16.42 0 01-17.13 5.75c-4.64-1.26-10.21-4.1-16.1-10-7.81-7.8-10.44-15.46-11.13-21.2","data-name":"Vrstva 1"})))}}],ur=[{route:ir.WorkPlace,label:"Moštárna",icon:function(e){return l.createElement("svg",Jn({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Zn||(Zn=l.createElement("g",{"data-name":"Vrstva 1"},l.createElement("path",{className:"tap_svg__cls-1",d:"M58.2 51.48v7.77a1 1 0 001 1h7.3a1 1 0 001-1v-9.93a9.44 9.44 0 00-9.4-9.45h-6.52a11.06 11.06 0 00-5.45-5.13v-6.55h2.41a3.6 3.6 0 100-7.19H36a3.6 3.6 0 100 7.19h2.4v6.2a11 11 0 000 20.89v21.33a1 1 0 001 1h5.76a1 1 0 001-1V54.93a11 11 0 005.73-5.72H56a2.26 2.26 0 012.2 2.27zm-24-26.88A1.69 1.69 0 0136 23h12.54a1.6 1.6 0 110 3.17H36a1.69 1.69 0 01-1.82-1.57zm6.19 4.14h3.76v5.36a10.45 10.45 0 00-3.76-.16zm3.74 46.86h-3.76V55.73a10.45 10.45 0 003.76-.16zm-2.35-21.78a9 9 0 119-9 9 9 0 01-9 9zm10.58-11.94h5.74a7.43 7.43 0 017.4 7.44v8.93h-5.29v-6.77A4.26 4.26 0 0056 47.21h-3.49a10.59 10.59 0 00-.15-5.33z"}),l.createElement("path",{className:"tap_svg__cls-1",d:"M63.88 63.19a1 1 0 00-1.62 0c-.89 1.22-5.34 7.43-5.34 10.17a6.17 6.17 0 0012.3 0c0-2.74-4.45-8.95-5.34-10.17zM63.07 77a3.92 3.92 0 01-4.15-3.63c0-1.4 2.29-5.17 4.15-7.84C65 68.3 67.21 72 67.21 73.36A3.92 3.92 0 0163.07 77z"}))))},imageSource:nr},{route:ir.FruitOrchards,label:"Ovocné sady",icon:function(e){return l.createElement("svg",Yn({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Qn||(Qn=l.createElement("path",{className:"leaf_svg__cls-1",d:"M76.09 24.49a1.06 1.06 0 00-.09-.19v-.09a1 1 0 00-.53-.52h-.09l-.19-.05a68.84 68.84 0 00-15.46.46c-8 1.1-19.13 4.11-27.14 12.2-4.82 4.87-7.14 10-6.89 15.38.36 7.75 6 13.17 7.15 14.21l-8.95 9a1 1 0 000 1.42 1 1 0 001.41 0l9-9c1.06 1.16 6.54 6.73 14.28 7h.69c5.09 0 10-2.4 14.62-7.07 8-8.09 10.9-19.29 11.92-27.26a69.53 69.53 0 00.27-15.49zM72.9 44.91l-14.37-2.14 15.73-15.89a70.88 70.88 0 01-1.36 18.03zm-6.57 16.16L44.25 57.2l12.53-12.66 15.67 2.33a44.61 44.61 0 01-6.12 14.2zm-23.5-5.28l-4.1-22a44.67 44.67 0 0114.13-6.28l2.49 15.65zM60 26.06a72.45 72.45 0 0112.88-.6L57.1 41.36 54.82 27c1.81-.41 3.54-.71 5.18-.94zM27.71 51.54c-.21-4.74 1.91-9.41 6.29-13.86a33.93 33.93 0 012.92-2.6l4.17 22.45-6.83 6.9c-.76-.69-6.26-5.82-6.55-12.89zm34.74 14.27c-4.4 4.45-9.05 6.62-13.79 6.46-7.07-.25-12.26-5.66-13-6.42l6.84-6.91L65 62.87a30.9 30.9 0 01-2.55 2.94z","data-name":"Vrstva 1"})))},imageSource:rr},{route:ir.Products,label:"Produkty",icon:function(e){return l.createElement("svg",Xn({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),Gn||(Gn=l.createElement("path",{className:"appleAndBottle_svg__cls-1",d:"M75.48 45.92c-2.69-2-6-2.61-9.87-1.69a17.5 17.5 0 01-2.31.43l-1-2.71a13.68 13.68 0 002.74.27 13.12 13.12 0 007.06-2 11.4 11.4 0 005.44-8.14 1 1 0 00-.88-1.08c-.12 0-11.42-.95-15.21 8.48l-1.63-4.58a1 1 0 00-1.89.68l3.24 9.07a10.59 10.59 0 01-1.48-.34 15.85 15.85 0 00-3.49-.68h-.41v-.31a67.22 67.22 0 00-2.61-18.09 1 1 0 00-1-.71H23a1 1 0 00-1 .71 66.82 66.82 0 00-2.62 18.07c0 15 4.05 26.25 11.11 30.85a1 1 0 00.55.16h13.1a1 1 0 00.54-.16 17.25 17.25 0 004-3.73 19.17 19.17 0 0013.07 5.08c10.41 0 18.87-8.14 18.87-18.14a14.72 14.72 0 00-5.14-11.44zm-.13-13a9.81 9.81 0 01-4.29 5.55 11.51 11.51 0 01-7.69 1.57C66 33.72 72.68 33 75.35 33zM23.7 26.51h27.78A58.19 58.19 0 0153 33.34H22.21a56.28 56.28 0 011.49-6.83zm20.13 45.8H31.34c-6.33-4.33-10-14.88-10-29a65.18 65.18 0 01.55-8h31.35a63.23 63.23 0 01.55 8v.27a11.34 11.34 0 00-8 4.41 14.79 14.79 0 00-3.1 9.33 17.69 17.69 0 004.49 11.74 15.72 15.72 0 01-3.35 3.25zm17.92 1.18c-9.31 0-16.87-7.23-16.87-16.13a12.82 12.82 0 012.66-8.07A9.3 9.3 0 0156 45.63a14.79 14.79 0 013.11.61c1.65.47 3.07.87 6.94-.05 3.24-.78 6-.33 8.14 1.29a12.76 12.76 0 014.4 9.88c.03 8.9-7.54 16.13-16.84 16.13z","data-name":"Vrstva 1"})))},imageSource:or},{route:ir.PublicAppleJuicing,label:"Moštování pro veřejnost",icon:function(e){return l.createElement("svg",tr({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),er||(er=l.createElement("path",{className:"wineGlass_svg__cls-1",d:"M69.64 32.64v-.1a24 24 0 00-2.91-11 1 1 0 00-.87-.52H34.14a1 1 0 00-.87.52 24 24 0 00-2.91 11v.12C30.43 44.21 37.86 52 49 52.47V77h-8.64a1 1 0 000 2h19.8a1 1 0 100-2H51V52.47C62.14 52 69.57 44.2 69.63 32.69zM34.74 23h30.52a22.52 22.52 0 012.35 8.65H32.4A22.31 22.31 0 0134.74 23zM50 50.5c-10.34 0-17.12-6.57-17.59-16.83h35.18C67.12 43.93 60.34 50.5 50 50.5z","data-name":"Vrstva 1"})))},imageSource:ar}];const sr=function(){return(0,a.jsx)(fr,{children:"\n  Omlouváme se,\n  stránka nebyla nalezena :-(\n  "},void 0)};var cr,fr=Dt.div(cr||(cr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(['\n  height: 50%;\n  width: 100%;\n  font-family: "barlow";\n  color: ',";\n  font-size: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"],['\n  height: 50%;\n  width: 100%;\n  font-family: "barlow";\n  color: ',";\n  font-size: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"])),(function(e){return e.theme.colors.redLight}));const dr=n.p+"ffe8a2edb889f3107caf2036986a4bc4.jpg";var pr;function hr(){return(hr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}const mr=function(e){return l.createElement("svg",hr({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),pr||(pr=l.createElement("path",{className:"instagram_svg__cls-1",d:"M50 24c-7.06 0-7.94 0-10.71.15A19.19 19.19 0 0033 25.39a12.67 12.67 0 00-4.6 3 12.86 12.86 0 00-3 4.6 19.26 19.26 0 00-1.21 6.31C24.06 42.06 24 43 24 50s0 7.94.16 10.71A19.14 19.14 0 0025.39 67a12.81 12.81 0 003 4.61 12.67 12.67 0 004.6 3 19.19 19.19 0 006.3 1.21C42.06 76 42.94 76 50 76s7.94 0 10.71-.15A19.19 19.19 0 0067 74.61a13.25 13.25 0 007.6-7.6 19.14 19.14 0 001.21-6.3c.12-2.77.16-3.66.16-10.71s0-7.94-.16-10.71a19.26 19.26 0 00-1.2-6.29A13.27 13.27 0 0067 25.39a19.19 19.19 0 00-6.3-1.21C57.94 24.06 57.06 24 50 24m0 4.68c6.94 0 7.76 0 10.49.15a14.44 14.44 0 014.83.89 8.26 8.26 0 013 1.94 8.18 8.18 0 011.94 3 14.44 14.44 0 01.89 4.83c.13 2.74.16 3.56.16 10.49s0 7.76-.16 10.5a14.43 14.43 0 01-.89 4.82 8.56 8.56 0 01-4.93 4.93 14.19 14.19 0 01-4.83.89c-2.73.13-3.55.15-10.49.15s-7.76 0-10.49-.15a14.24 14.24 0 01-4.83-.89 8.56 8.56 0 01-4.93-4.93 14.43 14.43 0 01-.89-4.82c-.13-2.74-.15-3.57-.15-10.5s0-7.75.15-10.49a14.44 14.44 0 01.89-4.83 8.18 8.18 0 011.94-3 8.26 8.26 0 013-1.94 14.5 14.5 0 014.83-.89c2.73-.13 3.56-.15 10.49-.15m0 7.95A13.34 13.34 0 1063.34 50 13.34 13.34 0 0050 36.66m0 22A8.66 8.66 0 1158.66 50 8.66 8.66 0 0150 58.66m17-22.53A3.12 3.12 0 1163.86 33 3.12 3.12 0 0167 36.13","data-name":"Vrstva 1"})))};var vr;function gr(){return(gr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}const yr=function(e){return l.createElement("svg",gr({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100"},e),vr||(vr=l.createElement("g",{"data-name":"Vrstva 1"},l.createElement("path",{className:"facebook_svg__cls-1",d:"M50.9 23h-2.11l-1.93.23a26.58 26.58 0 00-16.8 8.61A25.88 25.88 0 0023.32 46a26.34 26.34 0 006.39 21.8 25.88 25.88 0 0016.15 8.87 29.17 29.17 0 004.52.33 26.11 26.11 0 0016.73-6.17 26.38 26.38 0 009.53-16.76c.13-.77.16-1.57.25-2.35 0-.23.07-.45.11-.67v-2.32c-.11-.91-.2-1.81-.34-2.71A27 27 0 0054 23.36c-.79-.13-1.6-.16-2.4-.25-.24 0-.48-.08-.72-.11m-.42 5c.17 0 .38.06.61.08l1 .09c.43 0 .85.07 1.18.12a22 22 0 0118.42 18.5c.08.53.15 1.08.22 1.67 0 .19 0 .39.07.59v1.57c0 .16-.06.35-.08.57s-.06.64-.09.94-.07.82-.12 1.13a21.24 21.24 0 01-7.75 13.67 22.84 22.84 0 01-6.5 3.79A20.67 20.67 0 0150.36 72a24.09 24.09 0 01-3.75-.27 21.94 21.94 0 01-18.31-25 21 21 0 015.46-11.42 21.51 21.51 0 0113.72-7l1.29-.16h.34z"}),l.createElement("path",{className:"facebook_svg__cls-1",d:"M46.63 50.49V63.05c0 .47.11.65.62.63h4.32c.53 0 .63-.17.63-.66 0-4 0-8-.07-12 0-.43.09-.59.54-.58h2.59c.38 0 .55-.07.58-.52.08-1.16.23-2.33.37-3.49.07-.61 0-.68-.59-.68h-3c-.34 0-.48-.1-.47-.45.05-.81 0-1.62.1-2.42a1 1 0 011-1c.68-.06 1.37-.08 2.05-.11h.95v-4.31a.5.5 0 00-.36-.3c-1.65 0-3.31 0-4.95.14a4.56 4.56 0 00-4.23 4.53c0 1.15-.07 2.31-.08 3.47 0 .37-.12.5-.48.49h-1.74c-.35 0-.52.11-.51.49v3.74c0 .34.13.47.47.46h2.26"}))))},br=n.p+"98edeb73397f64f56dc65792c3259963.png",wr=n.p+"1c6522b987a946fd7c8778294c73637b.png",kr=n.p+"e374335191afe9d0f05977b7f0b4f681.pdf",xr=n.p+"1fd96afcae2476599e71f7666583bfa3.jpg";var Sr=function(){return(Sr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const jr=function(){return(0,a.jsxs)(Or,{children:[(0,a.jsxs)("div",{children:[(0,a.jsx)(yr,{alt:"facebook",className:"facebook"},void 0),(0,a.jsx)(mr,{alt:"instagram",className:"instagram"},void 0),(0,a.jsx)("div",Sr({className:"phoneNumber"},{children:"+420 604 402 763"}),void 0)]},void 0),(0,a.jsxs)("div",{children:[(0,a.jsx)("img",{src:br,alt:"polabi",className:"polabi",onClick:function(){window.open(kr,"_blank")}},void 0),(0,a.jsx)("img",{src:wr,alt:"EU",className:"eu",onClick:function(){window.open(xr,"_blank")}},void 0)]},void 0)]},void 0)};var Er,Or=Dt.div(Er||(Er=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  height: 10rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > div {\n    color: ",";\n    height: 6rem;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n  }\n\n  > img {\n    height: 6rem;\n  }\n\n  .facebook {\n    margin-left: -1.5rem; // compensation for svg padding\n    height: 6rem;\n    fill: ",";\n  }\n\n  .instagram {\n    height: 6rem;\n    fill: ",";\n  }\n\n  .phoneNumber {\n    margin-left: 1.5rem;\n    font-size: 15px;\n  }\n\n  .polabi {\n    height: 4rem;\n    margin-right: 2rem;\n    cursor: pointer;\n  }\n\n  .eu {\n    height: 3.5rem;\n    cursor: pointer;\n  }\n"],["\n  height: 10rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > div {\n    color: ",";\n    height: 6rem;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n  }\n\n  > img {\n    height: 6rem;\n  }\n\n  .facebook {\n    margin-left: -1.5rem; // compensation for svg padding\n    height: 6rem;\n    fill: ",";\n  }\n\n  .instagram {\n    height: 6rem;\n    fill: ",";\n  }\n\n  .phoneNumber {\n    margin-left: 1.5rem;\n    font-size: 15px;\n  }\n\n  .polabi {\n    height: 4rem;\n    margin-right: 2rem;\n    cursor: pointer;\n  }\n\n  .eu {\n    height: 3.5rem;\n    cursor: pointer;\n  }\n"])),(function(e){return e.theme.colors.redLight}),(function(e){return e.theme.colors.redDark}),(function(e){return e.theme.colors.redDark})),Cr=function(){return(Cr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Pr=function(e){return(0,a.jsx)(Dn,Cr({},e,{activeClassName:"active",exact:!0}),void 0)};var zr=function(){return(zr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const _r=function(e){var t=e.route,n=e.label,r=e.icon,o=e.showLabel,i=e.horizontalSpacing,l=void 0===i||i;return(0,a.jsx)(Ar,zr({horizontalSpacing:l},{children:(0,a.jsxs)(Pr,zr({to:t},{children:[(0,a.jsx)(r,{className:"icon"},void 0),o&&(0,a.jsx)("div",{children:n},void 0)]}),void 0)}),void 0)};var Tr,Ar=Dt.li(Tr||(Tr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  flex: 1;\n  min-width: ",";\n  max-width: ",";\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n\n  a {\n    text-decoration: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    > svg {\n      height: 6rem;\n      fill: ",";\n      transition: 0.1s ease-in;\n    }\n\n    > div {\n      text-transform: uppercase;\n      color: ",";\n      font-size: ",";\n      font-weight: 700;\n      transition: 0.1s ease-in;\n    }\n\n    &:hover {\n      > svg {\n        fill: ",";\n      }\n      > div {\n        color: ",";\n      }\n    }\n  }\n\n  .active {\n    opacity: 0.5;\n\n    &:hover {\n      > svg {\n        fill: ",";\n      }\n      > div {\n        color: ",";\n      }\n    }\n  }\n"],["\n  flex: 1;\n  min-width: ",";\n  max-width: ",";\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n\n  a {\n    text-decoration: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    > svg {\n      height: 6rem;\n      fill: ",";\n      transition: 0.1s ease-in;\n    }\n\n    > div {\n      text-transform: uppercase;\n      color: ",";\n      font-size: ",";\n      font-weight: 700;\n      transition: 0.1s ease-in;\n    }\n\n    &:hover {\n      > svg {\n        fill: ",";\n      }\n      > div {\n        color: ",";\n      }\n    }\n  }\n\n  .active {\n    opacity: 0.5;\n\n    &:hover {\n      > svg {\n        fill: ",";\n      }\n      > div {\n        color: ",";\n      }\n    }\n  }\n"])),(function(e){return e.horizontalSpacing?"120px":"30px"}),(function(e){return e.horizontalSpacing?"170px":"80px"}),(function(e){return e.theme.colors.redLight}),(function(e){return e.theme.colors.redLight}),(function(e){return e.theme.fontSize.normal}),(function(e){return e.theme.colors.redDark}),(function(e){return e.theme.colors.redDark}),(function(e){return e.theme.colors.redLight}),(function(e){return e.theme.colors.redLight}));const Nr=function(){return(0,a.jsx)(Rr,{children:(0,a.jsx)("ul",{children:lr.map((function(e){var t=e.route,n=e.icon,r=e.label;return(0,a.jsx)(_r,{route:t,label:r,icon:n,showLabel:!0},r)}))},void 0)},void 0)};var Lr,Rr=Dt.nav(Lr||(Lr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  > ul {\n    margin-top: 18rem;\n    display: flex;\n    justify-content: center;\n    padding: 3rem;\n    list-style-type: none;\n    margin-bottom: 1rem;\n  }\n"],["\n  > ul {\n    margin-top: 18rem;\n    display: flex;\n    justify-content: center;\n    padding: 3rem;\n    list-style-type: none;\n    margin-bottom: 1rem;\n  }\n"]))),Ir=function(){return(Ir=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Mr=function(e){var t=e.children;return(0,a.jsx)(Fr,{children:(0,a.jsxs)("div",Ir({className:"pageContainer"},{children:[(0,a.jsx)(jr,{},void 0),(0,a.jsx)(Nr,{},void 0),(0,a.jsx)("main",Ir({className:"contentContainer"},{children:t}),void 0),(0,a.jsxs)("footer",Ir({className:"footer"},{children:["©","2021 created by TomE, designed by Kamka"]}),void 0)]}),void 0)},void 0)};var Dr,Fr=Dt.div(Dr||(Dr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  height: ","px;\n  max-width: 2560px;\n  background-image: url(",");\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: cover;\n\n  .pageContainer {\n    margin: 0 auto;\n    max-width: 800px;\n\n    .footer {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-top: 4rem;\n      > img {\n        width: 20rem;\n        height: 20rem;\n      }\n    }\n  }\n"],["\n  height: ","px;\n  max-width: 2560px;\n  background-image: url(",");\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: cover;\n\n  .pageContainer {\n    margin: 0 auto;\n    max-width: 800px;\n\n    .footer {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-top: 4rem;\n      > img {\n        width: 20rem;\n        height: 20rem;\n      }\n    }\n  }\n"])),1520,dr);const Vr=n.p+"19bcf0154551f9bfab2c52e2d0fe8472.jpg",Ur=n.p+"99bae37a0da8db201880b17afdfb733e.jpg";var Br=function(){return(Br=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const $r=function(e){var t=e.setShowLandingPage,n=(0,l.useState)(!1),r=n[0],o=n[1],i=(0,l.useState)(!1),u=i[0],s=i[1],c=(0,l.useState)(!1),f=c[0],d=c[1],p=(0,l.useState)(!0),h=p[0],m=p[1],v=u&&r;return(0,l.useEffect)((function(){document.querySelector("#root").style.overflowY=f?"scroll":"hidden"}),[f]),(0,l.useEffect)((function(){var e=void 0;return r&&(e=window.setTimeout((function(){d(!0)}),3500)),function(){e&&clearTimeout(e)}}),[r]),h?(0,a.jsxs)(Wr,Br({onTransitionEnd:function(){f&&(m(!1),t(!1))},$startAnimation:v,$hide:f},{children:[(0,a.jsx)("div",Br({className:"imageWrapper"},{children:(0,a.jsx)("img",{src:Vr,onLoad:function(){o(!0)}},void 0)}),void 0),(0,a.jsx)("div",Br({className:"logoWrapper",onClick:function(){d(!0)}},{children:(0,a.jsx)("img",{src:Ur,onLoad:function(){s(!0)}},void 0)}),void 0)]}),void 0):null};var Hr,Wr=Dt.div(Hr||(Hr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  opacity: ",";\n  transition: 1s ease-in;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 100;\n\n  .imageWrapper {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    background-color: ",";\n    z-index: 101;\n\n    > img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n      opacity: ",";\n    }\n  }\n\n  .logoWrapper {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 102;\n\n    > img {\n      position: relative;\n      height: 380px;\n      width: 380px;\n      opacity: ",";\n      cursor: pointer;\n    }\n  }\n"],["\n  opacity: ",";\n  transition: 1s ease-in;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 100;\n\n  .imageWrapper {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    background-color: ",";\n    z-index: 101;\n\n    > img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n      opacity: ",";\n    }\n  }\n\n  .logoWrapper {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 102;\n\n    > img {\n      position: relative;\n      height: 380px;\n      width: 380px;\n      opacity: ",";\n      cursor: pointer;\n    }\n  }\n"])),(function(e){return e.$hide?0:1}),(function(e){return e.theme.colors.greyDark}),(function(e){return e.$startAnimation?1:0}),(function(e){return e.$startAnimation?1:0})),Kr=function(){return(Kr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const qr=function(e){var t=e.to,n=e.imageSource,r=e.icon,o=e.label,i=(0,l.useState)(!1),u=i[0],s=i[1];return(0,a.jsxs)(Yr,Kr({to:t,$hover:u,onMouseEnter:function(){return s(!0)},onMouseLeave:function(){return s(!1)}},{children:[(0,a.jsx)("div",{children:(0,a.jsx)("img",{src:n,alt:o},void 0)},void 0),(0,a.jsx)("div",Kr({className:"text"},{children:o}),void 0),(0,a.jsx)("div",Kr({className:"svgContainer"},{children:(0,a.jsx)(r,{},void 0)}),void 0)]}),void 0)};var Qr,Yr=Dt(Dn)(Qr||(Qr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  position: relative;\n  flex: 1;\n  min-width: 380px;\n  min-height: 250px;\n  margin: 1px;\n\n  > div {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    > img {\n      width: 100%;\n      height: 250px;\n      object-fit: cover;\n    }\n  }\n\n  .text {\n    color: ",';\n    font-size: 30px;\n    font-family: "barlow";\n    opacity: ',";\n    transition: opacity 0.25s ease-in-out;\n    text-transform: uppercase;\n  }\n\n  .svgContainer {\n    opacity: ",";\n    transition: opacity 0.25s ease-in-out;\n    z-index: 2;\n\n    > svg {\n      fill: ",";\n      height: 8rem;\n    }\n  }\n\n  /* .background {\n    opacity: ",";\n    transition: opacity 0.25s ease-in;\n    background-color: ",";\n    z-index: 1;\n  } */\n"],["\n  position: relative;\n  flex: 1;\n  min-width: 380px;\n  min-height: 250px;\n  margin: 1px;\n\n  > div {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    > img {\n      width: 100%;\n      height: 250px;\n      object-fit: cover;\n    }\n  }\n\n  .text {\n    color: ",';\n    font-size: 30px;\n    font-family: "barlow";\n    opacity: ',";\n    transition: opacity 0.25s ease-in-out;\n    text-transform: uppercase;\n  }\n\n  .svgContainer {\n    opacity: ",";\n    transition: opacity 0.25s ease-in-out;\n    z-index: 2;\n\n    > svg {\n      fill: ",";\n      height: 8rem;\n    }\n  }\n\n  /* .background {\n    opacity: ",";\n    transition: opacity 0.25s ease-in;\n    background-color: ",";\n    z-index: 1;\n  } */\n"])),(function(e){return e.theme.colors.white}),(function(e){return e.$hover?1:0}),(function(e){return e.$hover?0:1}),(function(e){return e.theme.colors.white}),(function(e){return e.$hover?0:.8}),(function(e){return e.theme.colors.ocher}));const Gr=function(){return(0,a.jsx)(Zr,{children:ur.filter((function(e){return e.route!==ir.Home})).map((function(e){var t=e.route,n=e.imageSource,r=e.label,o=e.icon;return(0,a.jsx)(qr,{to:t,imageSource:n,icon:o,label:r},r)}))},void 0)};var Xr,Zr=Dt.div(Xr||(Xr=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n"],["\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n"]))),Jr=(0,l.createContext)({showLandingPage:!0,setShowLandingPage:function(){throw new Error("Context has not been initialized yet")}});const eo=function(){var e=(0,l.useContext)(Jr),t=e.showLandingPage,n=e.setShowLandingPage;return(0,a.jsxs)(Mr,{children:[t&&(0,a.jsx)($r,{setShowLandingPage:n},void 0),(0,a.jsx)(Gr,{},void 0)]},void 0)};var to,no,ro=function(){return(ro=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},oo=function(e){var t=e.title,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n}(e,["title"]);return(0,a.jsx)(ao,ro({},n,{children:t}),void 0)},ao=Dt.div(to||(to=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(['\n  font-family: "barlow";\n  font-size: ',";\n  color: ",";\n  margin-top: ",";\n  height: 5rem;\n"],['\n  font-family: "barlow";\n  font-size: ',";\n  color: ",";\n  margin-top: ",";\n  height: 5rem;\n"])),(function(e){return e.theme.fontSize.header}),(function(e){return e.primary?e.theme.colors.redLight:void 0}),(function(e){return e.marginTop||"1rem"})),io=function(){return(io=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},lo=function(e){var t=e.children,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n}(e,["children"]);return(0,a.jsx)(uo,io({},n,{children:t}),void 0)},uo=Dt.div(no||(no=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  font-family: ",";\n  font-size: ",";\n  color: ",";\n  padding-top: ",";\n  text-align: justify;\n"],["\n  font-family: ",";\n  font-size: ",";\n  color: ",";\n  padding-top: ",";\n  text-align: justify;\n"])),(function(e){return e.bold?"robotoBold":"roboto"}),(function(e){return e.smallFontSize?e.theme.fontSize.small:e.theme.fontSize.normal}),(function(e){return e.primaryColor?e.theme.colors.redLight:void 0}),(function(e){return e.paddingTop?e.paddingTop:"1rem"}));const so=function(){return(0,a.jsx)(lo,{children:"V roce 2017 jsme zrekonstruovali a technologicky vybavili objekt v bývalém areálu JZD v Červených Pečkách za účelem zbudování moštárny ke zpracování ovoce z našeho rodinného ovocnářství. Zpracování ovoce zajišťuje částečně automatizovaná moderní výrobní linka, která byla spolufinancována z dotačního titulu „Program rozvoje venkova 2014-2020“. Stroje zajišťují kontinuální proces třídění ovoce, jeho omytí, drcení, lisování a následnou pasterizaci a plnění do obalů. V roce 2021 jsme objekt rozšířili o chlazený sklad, abychom byli schopni skladovat jablka v optimálních podmínkách až do konce jara a zároveň na podzim téhož roku jsme v provozovně otevřeli prodejnu. Výroba probíhá vždy jeden den v týdnu na podzim i na jaře, a právě během výroby je prodejna otevřena. Zákazník si zde může zakoupit naše produkty, kterými jsou různé odrůdy jablek a „Červenopečecký mošt“, který je buď pasterizovaný nebo čerstvý. Zároveň nabízíme moštování pro veřejnost, kdy Vám po domluvě vyrobíme mošt z Vašeho ovoce. Kromě sezónního prodeje v moštárně je umožněn i celoroční prodej, a to prostřednictvím našeho e-shopu nebo po domluvě."},void 0)};const co=function(e){var t=e.src;return(0,a.jsx)(po,{src:t},void 0)};var fo,po=Dt.img(fo||(fo=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  width: 100%;\n  height: auto;\n  margin-top: 6.5rem;\n"],["\n  width: 100%;\n  height: auto;\n  margin-top: 6.5rem;\n"]))),ho=function(){return(ho=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const mo=function(e){var t=e.children,n=e.isOnLeft,r=e.isOnRight;return(0,a.jsx)(go,ho({isOnLeft:n,isOnRight:r},{children:t}),void 0)};var vo,go=Dt.div(vo||(vo=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  flex: 1;\n  margin-left: ",";\n  margin-right: ",";\n"],["\n  flex: 1;\n  margin-left: ",";\n  margin-right: ",";\n"])),(function(e){return e.isOnRight?"2rem":0}),(function(e){return e.isOnLeft?"2rem":0}));const yo=Dt.div(bo||(bo=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  flex: 1;\n  height: 100%;\n"],["\n  flex: 1;\n  height: 100%;\n"])));var bo;const wo=function(){return(0,a.jsx)(xo,{children:(0,a.jsx)("ul",{children:ur.map((function(e){var t=e.route,n=e.icon,r=e.label;return(0,a.jsx)(_r,{route:t,label:r,icon:n,horizontalSpacing:!1},r)}))},void 0)},void 0)};var ko,xo=Dt.nav(ko||(ko=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  > ul {\n    margin-top: 4rem;\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n    margin-bottom: 1rem;\n  }\n"],["\n  > ul {\n    margin-top: 4rem;\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n    margin-bottom: 1rem;\n  }\n"])));const So=function(e){var t=e.children;return(0,a.jsxs)(Mr,{children:[t,(0,a.jsx)("div",{children:(0,a.jsx)(wo,{},void 0)},void 0)]},void 0)};const jo=Dt.div(Eo||(Eo=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  display: flex;\n"],["\n  display: flex;\n"])));var Eo;const Oo=function(){var e,t,n=Cn(wn).location,r=(null===(e=lr.find((function(e){return e.route===n.pathname})))||void 0===e?void 0:e.label)||(null===(t=ur.find((function(e){return e.route===n.pathname})))||void 0===t?void 0:t.label)||"Nadpis stránky";return(0,a.jsx)(oo,{title:r},void 0)};var Co=function(){return(Co=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Po=function(){return(0,a.jsx)(So,{children:(0,a.jsx)(yo,{children:(0,a.jsxs)(jo,{children:[(0,a.jsxs)(mo,Co({isOnLeft:!0},{children:[(0,a.jsx)(Oo,{},void 0),(0,a.jsx)(so,{},void 0)]}),void 0),(0,a.jsx)(mo,Co({isOnRight:!0},{children:(0,a.jsx)(co,{src:nr},void 0)}),void 0)]},void 0)},void 0)},void 0)},zo=function(){return(0,a.jsx)(lo,{children:"V ovocných sadech pěstujeme v současné době jabloně, ale plánujeme i výsadbu hruškového sadu. V naší nabídce stávajících sadů naleznete podzimní odrůdy gloster, rubín a golden delicious. Mezi zimními odrůdami máme idared a sekore. V nově vysázených sadech, jejichž nástup plodnosti očekáváme v roce 2023, pak máme odrůdy topaz red, jonagold, goldstar a bohemia. Jablka jsou ošetřována dle pravidel SISPO, ručně sklízena a po přetřídění skladována v chladicím boxu, ve kterém je zajištěno optimální prostředí pro zachování jejich čerstvosti, čímž jsme schopni nabízet kvalitní jablka až do konce jara. Část úrody pak zpracováváme na jablečný mošt, kterému jsme dali název dle lokality původu, a to Červenopečecký. Výroba probíhá v naší moštárně, kde je sklizené ovoce nejprve přetříděno a následně omyto. Omyté ovoce vstupuje do drtiče, kde je rozemleto na drobné kousíčky, které jsou stlačeny v plachetkovém lisu za současné produkce jablečné šťávy. Mošt nabízíme buď jako čerstvý nebo je zpasterizován a plněn do obalů. Kromě jablek zpracováváme na mošt i hrušky, které pochází od okolních ovocnářů. Od roku 2019 jsme držitelem certifikátu regionálního produktu."},void 0)};var _o=function(){return(_o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const To=function(){return(0,a.jsx)(So,{children:(0,a.jsx)(yo,{children:(0,a.jsxs)(jo,{children:[(0,a.jsxs)(mo,_o({isOnLeft:!0},{children:[(0,a.jsx)(Oo,{},void 0),(0,a.jsx)(zo,{},void 0)]}),void 0),(0,a.jsx)(mo,_o({isOnRight:!0},{children:(0,a.jsx)(co,{src:or},void 0)}),void 0)]},void 0)},void 0)},void 0)};var Ao=function(){return(Ao=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const No=function(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(lo,Ao({bold:!0},{children:"Moštování pro veřejnost probíhá během podzimu, a to na základě telefonické dohody."}),void 0),(0,a.jsx)(lo,Ao({bold:!0},{children:"Nabízíme výrobu jak čerstvého moštu, tak Vám mošt můžeme zpasterizovat. Čerstvý mošt lze stočit do Vámi přivezených nádob nebo poskytneme naše nádoby. Pasterizovaný mošt stáčíme pouze do našich bag in box sáčků."}),void 0),(0,a.jsx)(lo,Ao({bold:!0,paddingTop:"3rem"},{children:"Jak postupovat, když chci zmoštovat své ovoce?"}),void 0),(0,a.jsx)(lo,{children:"1. Zákazník zavolá a domluví se termín předání ovoce (většinou pátek před moštovacím víkendem)."},void 0),(0,a.jsx)(lo,{children:"2. Zákazník zkontroluje ovoce, zda se zde nevyskytují nahnilé a zablácené kusy (případně přetřídí a omyje)."},void 0),(0,a.jsx)(lo,{children:"3. Zákazník v domluvený termín přiveze zkontrolované ovoce do moštárny."},void 0),(0,a.jsx)(lo,{children:"4. Až bude ovoce zpracováno, tak zákazníka kontaktujeme, že si může mošt vyzvednout (zpravidla je mošt vyroben a připraven k vyzvednutí během víkendu, záleží na rozsahu objednávky)."},void 0)]},void 0)};var Lo=function(){return(Lo=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},Ro=Dt.div(Mo||(Mo=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  padding: 3rem;\n  background-color: ",";\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: ",";\n  margin-top: ",";\n  margin-bottom: ",";\n"],["\n  padding: 3rem;\n  background-color: ",";\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: ",";\n  margin-top: ",";\n  margin-bottom: ",";\n"])),(function(e){return e.theme.colors.white}),(function(e){var t;return null!==(t=e.height)&&void 0!==t?t:void 0}),(function(e){var t;return null!==(t=e.marginTop)&&void 0!==t?t:void 0}),(function(e){var t;return null!==(t=e.marginBottom)&&void 0!==t?t:void 0}));const Io=function(e){var t=e.children,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n}(e,["children"]);return(0,a.jsx)(Ro,Lo({},n,{children:t}),void 0)};var Mo,Do=function(){return(Do=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Fo=function(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(Io,{children:[(0,a.jsx)(oo,{primary:!0,title:"ČERSTVÝ MOŠT"},void 0),(0,a.jsx)(lo,Do({bold:!0,primaryColor:!0},{children:"Mošt 1 l  5 Kč"}),void 0),(0,a.jsx)(lo,Do({bold:!0},{children:"/ + 5 Kč nádoba 1,5 l /"}),void 0),(0,a.jsx)(lo,Do({smallFontSize:!0},{children:"Celková cena za litr šťávy získané z Vašeho ovoce, které bylo přetříděno, omyto, drceno a lisováno. Pokud máte vlastní nádobu, do které chcete mošt stočit, pak za nádobu samozřejmě nic neplatíte."}),void 0)]},void 0),(0,a.jsxs)(Io,{children:[(0,a.jsx)(oo,{primary:!0,title:"PASTERIZOVANÝ MOŠT"},void 0),(0,a.jsx)(lo,Do({bold:!0,primaryColor:!0},{children:"Mošt 3 l  30 Kč"}),void 0),(0,a.jsx)(lo,Do({bold:!0},{children:"/ + 15 Kč sáček 3 l /"}),void 0),(0,a.jsx)(lo,Do({bold:!0},{children:"/ + 5 Kč kartonová krabice 3 l /"}),void 0),(0,a.jsx)(lo,Do({smallFontSize:!0},{children:"Celková cena za 3 l sáček naplněný šťávou získanou z Vašeho ovoce, které bylo přetříděno, omyto, drceno, lisováno a získaná šťáva zpasterizována a plněna do sáčku. Doporučujeme k sáčku zakoupit i kartonovou krabici, kterou můžete používat i opakovaně."}),void 0)]},void 0)]},void 0)};var Vo=function(){return(Vo=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Uo=function(){return(0,a.jsx)(So,{children:(0,a.jsx)(yo,{children:(0,a.jsxs)(jo,{children:[(0,a.jsxs)(mo,Vo({isOnLeft:!0},{children:[(0,a.jsx)(Oo,{},void 0),(0,a.jsx)(No,{},void 0)]}),void 0),(0,a.jsx)(mo,Vo({isOnRight:!0},{children:(0,a.jsx)(Fo,{},void 0)}),void 0)]},void 0)},void 0)},void 0)},Bo=function(){return(0,a.jsx)(lo,{children:"Sadařství v Červených Pečkách má dlouholetou tradici, ve které se naše rodina snaží pokračovat. Hospodaříme na celkové ploše 7 hektarů a věnujeme se jednak péči o stávající staré ovocné stromy tvaru zákrsku nebo čtvrkmenu, ale zároveň postupně zakládáme sady nové. V nových sadech využíváme moderní pěstební systém tvaru štíhlých vřetenech, pro které je zbudována samonosná opěrná konstrukce včetně ochrany proti kroupám. Pro zálivku pak slouží systém kapkové závlahy. V okolí sadu pak udržujeme staré české odrůdy na vysokokmenech. Snažíme se zužitkovat zkušenosti našich předků a zároveň volíme nové přístupy tak, abychom v maximální možné míře žili v souladu s přírodou. V našich sadech naleznete hnízdiště pro ptáky, ptačí budky, bidýlka pro dravce nebo úkryty pro hmyz a drobné živočichy. Sad prochází každoročně zimním a letním řezem, i nezbytnou údržbou zeleně. Monitorujeme výskyt škůdců a chorob, proti kterým se snažíme aplikovat přirozené způsoby ochrany dle pravidel svazu pro integrované systémy pěstování ovoce a středočeské ovocnářské unie."},void 0)};var $o=function(){return($o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Ho=function(){return(0,a.jsx)(So,{children:(0,a.jsx)(yo,{children:(0,a.jsxs)(jo,{children:[(0,a.jsxs)(mo,$o({isOnLeft:!0},{children:[(0,a.jsx)(Oo,{},void 0),(0,a.jsx)(Bo,{},void 0)]}),void 0),(0,a.jsx)(mo,$o({isOnRight:!0},{children:(0,a.jsx)(co,{src:rr},void 0)}),void 0)]},void 0)},void 0)},void 0)};const Wo=Dt.iframe(Ko||(Ko=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  border: 0;\n  margin-top: 1rem;\n"],["\n  border: 0;\n  margin-top: 1rem;\n"])));var Ko,qo=function(){return(qo=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Qo=function(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(oo,{title:"Výroba moštu"},void 0),(0,a.jsx)(lo,qo({bold:!0},{children:"Tomáš Adamec"}),void 0),(0,a.jsx)(lo,qo({paddingTop:"0.5rem"},{children:"+420 604 402 763 / info@cervenopececkymost.cz"}),void 0),(0,a.jsx)(oo,{title:"Sadařství",marginTop:"4rem"},void 0),(0,a.jsx)(lo,qo({bold:!0},{children:"Jiří Adamec st"}),void 0),(0,a.jsx)(lo,qo({paddingTop:"0.5rem"},{children:"+420 731 171 256 / info@cervenopececkymost.cz"}),void 0),(0,a.jsx)(oo,{title:"Sadařství",marginTop:"4rem"},void 0),(0,a.jsx)(lo,qo({bold:!0},{children:"Amálka 72, Červené Pečky"}),void 0),(0,a.jsx)(lo,qo({paddingTop:"0.5rem"},{children:"Na prodejně lze do vyprodání zásob zakoupit jablka, sušené ovoce, čerstvý i pasterizovaný mošt."}),void 0),(0,a.jsxs)(jo,{children:[(0,a.jsxs)(mo,{children:[(0,a.jsx)(lo,qo({paddingTop:"4rem",bold:!0,primaryColor:!0},{children:"říjen – listopad"}),void 0),(0,a.jsx)(lo,qo({paddingTop:"0.5rem",bold:!0},{children:"sobota 9–12 hod."}),void 0)]},void 0),(0,a.jsxs)(mo,{children:[(0,a.jsx)(lo,qo({paddingTop:"4rem",bold:!0,primaryColor:!0},{children:"březen – květen"}),void 0),(0,a.jsx)(lo,qo({paddingTop:"0.5rem",bold:!0},{children:"středa 16–18 hod."}),void 0)]},void 0)]},void 0),(0,a.jsx)(Wo,{src:"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d539.3504117045239!2d15.20338653808051!3d49.981408505287135!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x470c6a9254fc7337%3A0xbec99b913e8f7e6e!2zQW3DoWxrYSA3MiwgMjgxIDIxIMSMZXJ2ZW7DqSBQZcSNa3k!5e0!3m2!1scs!2scz!4v1618954105724!5m2!1scs!2scz",width:"100%",height:"250px",loading:"lazy"},void 0)]},void 0)};var Yo=function(){return(Yo=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Go=function(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(Io,Yo({height:"272px"},{children:[(0,a.jsx)(oo,{primary:!0,title:"FAKTURAČNÍ ADRESA"},void 0),(0,a.jsx)(lo,Yo({bold:!0},{children:"Tomáš Adamec"}),void 0),(0,a.jsx)(lo,{children:"IČO: 06215718"},void 0),(0,a.jsx)(lo,{children:"Sídlo: Školní 196, Červené Pečky 281 21"},void 0),(0,a.jsx)(lo,{children:"Provozovna: Amálka 72, Červené Pečky 281 21"},void 0)]}),void 0),(0,a.jsx)(oo,{title:"Celoroční prodej",marginTop:"4rem"},void 0),(0,a.jsx)(lo,Yo({bold:!0},{children:"Dr .Dvořáka 394, Červené Pečky"}),void 0),(0,a.jsx)(lo,Yo({paddingTop:"0.5rem"},{children:"Do vyprodání zásob lze zakoupit jablka, sušené ovoce a pasterizovaný mošt."}),void 0),(0,a.jsx)(lo,Yo({bold:!0,primaryColor:!0,paddingTop:"4rem"},{children:"pondělí – pátek"}),void 0),(0,a.jsxs)(lo,Yo({paddingTop:"0.5rem"},{children:[(0,a.jsx)("span",Yo({style:{fontWeight:700}},{children:"17–20 hod."}),void 0)," / nebo dle domluvy volejte +420 731 171 256"]}),void 0),(0,a.jsx)(Wo,{src:"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d320.7497417373355!2d15.204135854765045!3d49.97389729909998!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x470c6a8eb474c867%3A0x45eda3520debe074!2zRHIuIER2b8WZw6FrYSAzOTQsIDI4MSAyMSDEjGVydmVuw6kgUGXEjWt5!5e0!3m2!1scs!2scz!4v1618955051311!5m2!1scs!2scz",width:"100%",height:"250px",loading:"lazy"},void 0)]},void 0)};var Xo=function(){return(Xo=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Zo=function(){return(0,a.jsx)(So,{children:(0,a.jsx)(yo,{children:(0,a.jsxs)(jo,{children:[(0,a.jsx)(mo,Xo({isOnLeft:!0},{children:(0,a.jsx)(Qo,{},void 0)}),void 0),(0,a.jsx)(mo,Xo({isOnRight:!0},{children:(0,a.jsx)(Go,{},void 0)}),void 0)]},void 0)},void 0)},void 0)};var Jo=function(){return(Jo=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const ea=function(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(lo,Jo({bold:!0},{children:"Moštování pro veřejnost probíhá během podzimu, a to na základě telefonické dohody."}),void 0),(0,a.jsx)(lo,Jo({bold:!0},{children:"Nabízíme výrobu jak čerstvého moštu, tak Vám mošt můžeme zpasterizovat. Čerstvý mošt lze stočit do Vámi přivezených nádob nebo poskytneme naše nádoby. Pasterizovaný mošt stáčíme pouze do našich bag in box sáčků."}),void 0),(0,a.jsx)(lo,Jo({bold:!0,paddingTop:"3rem"},{children:"Jak postupovat, když chci zmoštovat své ovoce?"}),void 0),(0,a.jsx)(lo,{children:"1. Zákazník zavolá a domluví se termín předání ovoce (většinou pátek před moštovacím víkendem)."},void 0),(0,a.jsx)(lo,{children:"2. Zákazník zkontroluje ovoce, zda se zde nevyskytují nahnilé a zablácené kusy (případně přetřídí a omyje)."},void 0),(0,a.jsx)(lo,{children:"3. Zákazník v domluvený termín přiveze zkontrolované ovoce do moštárny."},void 0),(0,a.jsx)(lo,{children:"4. Až bude ovoce zpracováno, tak zákazníka kontaktujeme, že si může mošt vyzvednout (zpravidla je mošt vyroben a připraven k vyzvednutí během víkendu, záleží na rozsahu objednávky)."},void 0)]},void 0)};var ta=function(){return(ta=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const na=function(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(Io,ta({marginBottom:"2rem"},{children:[(0,a.jsx)(oo,{primary:!0,title:"ČERSTVÝ MOŠT"},void 0),(0,a.jsx)(lo,ta({bold:!0,primaryColor:!0},{children:"Mošt 1 l  5 Kč"}),void 0),(0,a.jsx)(lo,ta({bold:!0},{children:"/ + 5 Kč nádoba 1,5 l /"}),void 0),(0,a.jsx)(lo,ta({smallFontSize:!0},{children:"Celková cena za litr šťávy získané z Vašeho ovoce, které bylo přetříděno, omyto, drceno a lisováno. Pokud máte vlastní nádobu, do které chcete mošt stočit, pak za nádobu samozřejmě nic neplatíte."}),void 0)]}),void 0),(0,a.jsxs)(Io,{children:[(0,a.jsx)(oo,{primary:!0,title:"PASTERIZOVANÝ MOŠT"},void 0),(0,a.jsx)(lo,ta({bold:!0,primaryColor:!0},{children:"Mošt 3 l  30 Kč"}),void 0),(0,a.jsx)(lo,ta({bold:!0},{children:"/ + 15 Kč sáček 3 l /"}),void 0),(0,a.jsx)(lo,ta({bold:!0},{children:"/ + 5 Kč kartonová krabice 3 l /"}),void 0),(0,a.jsx)(lo,ta({smallFontSize:!0},{children:"Celková cena za 3 l sáček naplněný šťávou získanou z Vašeho ovoce, které bylo přetříděno, omyto, drceno, lisováno a získaná šťáva zpasterizována a plněna do sáčku. Doporučujeme k sáčku zakoupit i kartonovou krabici, kterou můžete používat i opakovaně."}),void 0)]},void 0)]},void 0)};var ra=function(){return(ra=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const oa=function(){return(0,a.jsx)(So,{children:(0,a.jsx)(yo,{children:(0,a.jsxs)(jo,{children:[(0,a.jsxs)(mo,ra({isOnLeft:!0},{children:[(0,a.jsx)(Oo,{},void 0),(0,a.jsx)(ea,{},void 0)]}),void 0),(0,a.jsx)(mo,ra({isOnRight:!0},{children:(0,a.jsx)(na,{},void 0)}),void 0)]},void 0)},void 0)},void 0)};const aa=Dt.div(ia||(ia=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  flex: 1;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n"],["\n  flex: 1;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n"])));var ia,la=[{title:"MOŠT JABLKO",prices:["70 Kč / 2 l","90 Kč / 3 l"],descriptions:["100 % jablko, pasterizováno.","Baleno v krabici."]},{title:"MOŠT HRUŠKA",prices:["70 Kč / 2 l","90 Kč / 3 l"],descriptions:["100 % hruška, pasterizováno.","Baleno v krabici."]},{title:"MOŠT JABLKO A HRUŠKA",prices:["70 Kč / 2 l","90 Kč / 3 l"],descriptions:["50 % jablko, 50 % hruška","pasterizováno. Baleno v krabici."]},{title:"ČERSTVÝ MOŠT",prices:["20 Kč / 1 l"],descriptions:["Jablko / hruška","dle denní nabídky."]},{title:"SUŠENÉ JABLKO",prices:["40 Kč / 100 g"],descriptions:["100 % jablečné plátky","Baleno v sáčku."]},{title:"SUŠENÁ HRUŠKA",prices:["40 Kč / 100 g"],descriptions:["100 % hruškové plátky.","Baleno v sáčku."]},{title:"SUŠENÉ JABLKO A HRUŠKA",prices:["40 Kč / 100 g"],descriptions:["50 % jablečné a 50 % hruškové","plátky. Baleno v sáčku."]},{title:"JABLKA",prices:["od 20 Kč / 1 kg"],descriptions:["Odrůdy dle sklizně."],src:rr}],ua=function(){return(ua=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const sa=function(e){var t=e.src,n=e.title;return(0,a.jsx)(pa,{children:t?(0,a.jsx)("img",{src:t,alt:n},void 0):(0,a.jsx)("div",ua({className:"imagePlaceholder"},{children:"foto"}),void 0)},void 0)};var ca,fa,da,pa=Dt.div(ca||(ca=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  height: 200px;\n  max-height: 200px;\n  min-width: 250px;\n  width: 100%;\n\n  > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  .imagePlaceholder {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ",";\n  }\n"],["\n  height: 200px;\n  max-height: 200px;\n  min-width: 250px;\n  width: 100%;\n\n  > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  .imagePlaceholder {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ",";\n  }\n"])),(function(e){return e.theme.colors.white})),ha=function(e){var t=e.title;return(0,a.jsx)(ma,{children:t},void 0)},ma=Dt.div(fa||(fa=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(['\n  font-family: "barlow";\n  font-size: 2rem;\n  color: ',";\n  margin-top: 1.5rem;\n"],['\n  font-family: "barlow";\n  font-size: 2rem;\n  color: ',";\n  margin-top: 1.5rem;\n"])),(function(e){return e.theme.colors.redLight})),va=function(e){var t=e.value;return(0,a.jsx)(ga,{children:t},void 0)},ga=Dt.div(da||(da=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(['\n  font-family: "barlow";\n  font-size: 2rem;\n  margin-top: 0.25rem;\n'],['\n  font-family: "barlow";\n  font-size: 2rem;\n  margin-top: 0.25rem;\n']))),ya=function(){return(ya=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const ba=function(e){var t=e.src,n=e.title,r=e.prices,o=e.descriptions;return(0,a.jsxs)(ka,{children:[(0,a.jsx)(sa,{src:t,title:n},void 0),(0,a.jsx)(ha,{title:n},void 0),r.map((function(e){return(0,a.jsx)(va,{value:e},e)})),o.map((function(e,t){return(0,a.jsx)(lo,ya({paddingTop:0===t?"0.75rem":"0rem"},{children:e}),e)}))]},void 0)};var wa,ka=Dt.div(wa||(wa=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0.4rem 4rem 0.4rem;\n"],["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0.4rem 4rem 0.4rem;\n"]))),xa=function(){return(xa=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Sa=function(){return(0,a.jsx)(Mr,{children:(0,a.jsx)(aa,{children:la.map((function(e){return(0,a.jsx)(ba,xa({},e),e.title)}))},void 0)},void 0)},ja=function(){return(0,a.jsx)(Mr,{children:"Kde zakoupit"},void 0)},Ea=function(){return(0,a.jsx)(Pn,{children:(0,a.jsxs)(On,{children:[(0,a.jsx)(En,{exact:!0,path:ir.Home,component:eo},void 0),(0,a.jsx)(En,{path:ir.WorkPlace,component:Po},void 0),(0,a.jsx)(En,{path:ir.PublicAppleJuicing,component:Uo},void 0),(0,a.jsx)(En,{path:ir.Products,component:To},void 0),(0,a.jsx)(En,{path:ir.FruitOrchards,component:Ho},void 0),(0,a.jsx)(En,{path:ir.WhereToBuy,component:ja},void 0),(0,a.jsx)(En,{path:ir.OurProducts,component:Sa},void 0),(0,a.jsx)(En,{path:ir.Contact,component:Zo},void 0),(0,a.jsx)(En,{path:ir.WantToFruitPress,component:oa},void 0),(0,a.jsx)(En,{component:sr},void 0)]},void 0)},void 0)};var Oa=function(){return(Oa=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const Ca=function(e){var t=e.children,n=(0,l.useState)(!0),r=n[0],o=n[1],i=(0,l.useMemo)((function(){return{showLandingPage:r,setShowLandingPage:o}}),[r,o]);return(0,a.jsx)(Jr.Provider,Oa({value:i},{children:t}),void 0)};var Pa=function(){return(Pa=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};i.render((0,a.jsx)((function(){return(0,a.jsxs)(l.StrictMode,{children:[(0,a.jsx)(ae,{},void 0),(0,a.jsxs)(At,Pa({theme:Ft},{children:[(0,a.jsx)($t,{},void 0),(0,a.jsx)(Ca,{children:(0,a.jsx)(Ea,{},void 0)},void 0)]}),void 0)]},void 0)}),{},void 0),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXN0LWNvbXBhcmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1zaWRlLWVmZmVjdC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1ydW50aW1lLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9zaGFsbG93ZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWhlbG1ldC9lcy9IZWxtZXQuanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9jb21wb25lbnRzL0RvY3VtZW50SGVhZC9Eb2N1bWVudEhlYWQudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGlzL2Rpc3Qvc3R5bGlzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9zdHlsZWQtY29tcG9uZW50cy9kaXN0L3N0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvc3R5bGVzL3RoZW1lLnRzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvc3R5bGVzL2ZvbnRzL0Jhcmxvd0NvbmRlbnNlZC1TZW1pQm9sZC50dGYiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9zdHlsZXMvZm9udHMvUm9ib3RvLVJlZ3VsYXIudHRmIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvc3R5bGVzL2ZvbnRzL1JvYm90by1Cb2xkLnR0ZiIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3N0eWxlcy9nbG9iYWxzLnRzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vYXNzZXRzL2hvbWUuc3ZnIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvc2hvcHBpbmdDYXJ0LnN2ZyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vYXNzZXRzL2NlbGxQaG9uZS5zdmciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9mcnVpdFByZXNzLnN2ZyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vYXNzZXRzL3R3b0JvdHRsZXMuc3ZnIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvbGVhZi5zdmciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9hcHBsZUFuZEJvdHRsZS5zdmciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy90YXAuc3ZnIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvd2luZUdsYXNzLnN2ZyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vYXNzZXRzL21vc3Rhcm5hV2lkZXNjcmVlbi5qcGciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9jdXRlTGFkeS5qcGciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9ib3R0bGVzV2lkZXNjcmVlbi5qcGciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9wdWJsaWNBcHBsZUp1aWNpbmcuanBnIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9Ob3RGb3VuZC9Ob3Rmb3VuZC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy93ZWJCYWNrZ3JvdW5kLmpwZyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vYXNzZXRzL2luc3RhZ3JhbS5zdmciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9mYWNlYm9vay5zdmciLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2Fzc2V0cy9wb2xhYmkucG5nIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvZXUucG5nIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvcGRmL2NlcnQucGRmIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvZXVfbW9zdGFybmEuanBnIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvVG9wUGFydC9QYWdlVG9wUGFydC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9jb21wb25lbnRzL05hdmlnYXRpb24vY29tcG9uZW50cy9OYXZMaW5rLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvTmF2aWdhdGlvbi9jb21wb25lbnRzL05hdkl0ZW0udHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvY29tcG9uZW50cy9OYXZpZ2F0aW9uL01haW5OYXZpZ2F0aW9uLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9QYWdlLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3N0eWxlcy9wYWdlLnRzIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9hc3NldHMvbGFuZGluZ19iYWNrZ3JvdW5kLmpwZyIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vYXNzZXRzL2xvZ29fd2hpdGUuanBnIiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvSG9tZS9jb21wb25lbnRzL0xhbmRpbmcudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvSG9tZS9jb21wb25lbnRzL0ltYWdlTGluay50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9Ib21lL2NvbXBvbmVudHMvQ29udGVudC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9jb250ZXh0L2NvbnRleHQudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvSG9tZS9Ib21lLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnQvSGVhZGVyLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnQvUGFyYWdyYXBoLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3BhZ2VzL1dvcmtQbGFjZS9jb21wb25lbnRzL1RleHRDb250ZW50LnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L1BvcnRyYWl0SW1hZ2UvUGFnZUltYWdlLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9Db2x1bW4udHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvTGF5b3V0L0NvbnRlbnRXcmFwcGVyLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvTmF2aWdhdGlvbi9Ib21lTmF2aWdhdGlvbi50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9jb21wb25lbnRzL1BhZ2VzQ29udGVudC9MYXlvdXQvSG9tZVN1YlBhZ2VXcmFwcGVyLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9Db2x1bW5zV3JhcHBlci50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9jb21wb25lbnRzL1BhZ2VzQ29udGVudC9MYXlvdXQvQ29udGVudEhlYWRlci50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9Xb3JrUGxhY2UvV29ya1BsYWNlLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3BhZ2VzL1Byb2R1Y3RzL2NvbXBvbmVudHMvVGV4dENvbnRlbnQudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvUHJvZHVjdHMvUHJvZHVjdHMudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvUHVibGljQXBwbGVKdWljaW5nL2NvbXBvbmVudHMvTGVmdENvbHVtbi50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9jb21wb25lbnRzL1RleHRDb250ZW50L1dpZGdldC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9QdWJsaWNBcHBsZUp1aWNpbmcvY29tcG9uZW50cy9SaWdodENvbHVtbi50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9QdWJsaWNBcHBsZUp1aWNpbmcvUHVibGljQXBwbGVKdWljaW5nLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3BhZ2VzL0ZydWl0T3JjaGFyZHMvY29tcG9uZW50cy9UZXh0Q29udGVudC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9GcnVpdE9yY2hhcmRzL0ZydWl0T3JjaGFyZHMudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvQ29udGFjdC9jb21wb25lbnRzL1N0eWxlZE1hcC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9Db250YWN0L2NvbXBvbmVudHMvTGVmdENvbHVtbi50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9Db250YWN0L2NvbXBvbmVudHMvUmlnaHRDb2x1bW4udHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvQ29udGFjdC9Db250YWN0LnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3BhZ2VzL1dhbnRUb0ZydWl0UHJlc3MvY29tcG9uZW50cy9MZWZ0Q29sdW1uLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3BhZ2VzL1dhbnRUb0ZydWl0UHJlc3MvY29tcG9uZW50cy9SaWdodENvbHVtbi50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9XYW50VG9GcnVpdFByZXNzL1dhbnRUb0ZydWl0UHJlc3MudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvT3VyUHJvZHVjdHMvY29tcG9uZW50cy9Db250ZW50V3JhcHBlci50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9PdXJQcm9kdWN0cy9jb21wb25lbnRzL21vY2sudHMiLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9PdXJQcm9kdWN0cy9jb21wb25lbnRzL1Byb2R1Y3RJbWFnZS50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9PdXJQcm9kdWN0cy9jb21wb25lbnRzL1RpdGxlLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL3BhZ2VzL091clByb2R1Y3RzL2NvbXBvbmVudHMvUHJpY2UudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvT3VyUHJvZHVjdHMvY29tcG9uZW50cy9Qcm9kdWN0SXRlbS50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9PdXJQcm9kdWN0cy9PdXJQcm9kdWN0cy50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL3NyYy9wYWdlcy9XaGVyZVRvQnV5L1doZXJlVG9CdXkudHN4Iiwid2VicGFjazovL2NlcnZlbm9wZWNlY2t5LW1vc3QvLi9zcmMvcGFnZXMvUm91dGVzLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL2NvbnRleHQvQ29udGV4dFByb3ZpZGVyLnRzeCIsIndlYnBhY2s6Ly9jZXJ2ZW5vcGVjZWNreS1tb3N0Ly4vc3JjL0FwcC50c3giLCJ3ZWJwYWNrOi8vY2VydmVub3BlY2Vja3ktbW9zdC8uL2luZGV4LnRzeCJdLCJuYW1lcyI6WyJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwibmFtZSIsImxlbmd0aCIsInByb3RvdHlwZSIsImNhbGxlciIsImNhbGxlZSIsImFyZ3VtZW50cyIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiaSIsImtleSIsImRlc2NyaXB0b3IiLCJlIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsIlR5cGVFcnJvciIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJuIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInMiLCJjYWxsIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJFcnJvciIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwibSIsInIiLCJ5IiwiYSIsImIiLCJjIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYmEiLCJTZXQiLCJjYSIsImRhIiwiZWEiLCJhZGQiLCJmYSIsIndpbmRvdyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImhhIiwiaWEiLCJqYSIsImthIiwiQiIsImQiLCJmIiwiZyIsInRoaXMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsIkQiLCJ0b0xvd2VyQ2FzZSIsIm9hIiwicGEiLCJ0b1VwcGVyQ2FzZSIsInFhIiwic2xpY2UiLCJtYSIsImlzTmFOIiwibmEiLCJ0ZXN0IiwibGEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInJlcGxhY2UiLCJ4bGlua0hyZWYiLCJyYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwic2EiLCJ0YSIsInVhIiwid2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIlN5bWJvbCIsImZvciIsIkUiLCJNYSIsIkthIiwiaXRlcmF0b3IiLCJMYSIsIk5hIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiayIsImgiLCJRYSIsInRhZyIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiY29uc3RydWN0b3IiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwidmFsdWUiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsImNiIiwib3duZXJEb2N1bWVudCIsImViIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsIkFycmF5IiwiaXNBcnJheSIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwidG9TdHJpbmciLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInN0eWxlIiwiaW5kZXhPZiIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsInB1c2giLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJSYiIsImwiLCJhcHBseSIsIm9uRXJyb3IiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJaYiIsImFsdGVybmF0ZSIsInJldHVybiIsImZsYWdzIiwiJGIiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImFjIiwiY2MiLCJjaGlsZCIsInNpYmxpbmciLCJjdXJyZW50IiwiYmMiLCJkYyIsImVjIiwiZmMiLCJnYyIsImhjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJtYyIsIm5jIiwiTWFwIiwib2MiLCJwYyIsInFjIiwicmMiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRDb250YWluZXJzIiwic2MiLCJkZWxldGUiLCJwb2ludGVySWQiLCJ0YyIsInZjIiwid2MiLCJsYW5lUHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJjb250YWluZXJJbmZvIiwieGMiLCJ5YyIsInNoaWZ0IiwiemMiLCJBYyIsIkJjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiQ2MiLCJEYyIsIkVjIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiRmMiLCJHYyIsIkhjIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJRYyIsInVuc3RhYmxlX25vdyIsIkYiLCJSYyIsIlVjIiwicGVuZGluZ0xhbmVzIiwiZXhwaXJlZExhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsIlZjIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsImV2ZW50VGltZXMiLCJNYXRoIiwiY2x6MzIiLCJiZCIsImNkIiwibG9nIiwiTE4yIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiaWQiLCJiaW5kIiwidWMiLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJkYXRhIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJSZCIsImNvZGUiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlRkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJaZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiJGQiLCJhZSIsImJlIiwiZG9jdW1lbnRNb2RlIiwiY2UiLCJkZSIsImVlIiwiZmUiLCJnZSIsImhlIiwiaWUiLCJsZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJldmVudCIsImxpc3RlbmVycyIsInBlIiwicWUiLCJyZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIk1lIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk5lIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiaHJlZiIsIk9lIiwiY29udGVudEVkaXRhYmxlIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJaZSIsIlliIiwiaW5zdGFuY2UiLCJsaXN0ZW5lciIsIkciLCIkZSIsImhhcyIsImFmIiwiYmYiLCJyYW5kb20iLCJjZiIsImRmIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJOYiIsIngiLCJ3IiwieiIsInUiLCJxIiwidCIsInYiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsIkoiLCJLIiwiUSIsIkwiLCJqZSIsImNoYXIiLCJrZSIsInVuc2hpZnQiLCJqZiIsImtmIiwibGYiLCJtZiIsImF1dG9Gb2N1cyIsIm5mIiwiX19odG1sIiwib2YiLCJzZXRUaW1lb3V0IiwicGYiLCJjbGVhclRpbWVvdXQiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiSCIsIkkiLCJDZiIsIk0iLCJOIiwiRGYiLCJFZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiR2YiLCJIZiIsIklmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiUWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlJmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiU2YiLCJUZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiVWYiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlZmIiwiV2YiLCJYZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiWWYiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJPIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwiY29udGV4dCIsIm9ic2VydmVkQml0cyIsIm5leHQiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsImNhbGxiYWNrIiwiQWciLCJCZyIsIkNnIiwiQSIsInAiLCJDIiwiRGciLCJFZyIsIkZnIiwiQ29tcG9uZW50IiwicmVmcyIsIkdnIiwiS2ciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJIZyIsIklnIiwiSmciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiTGciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIk1nIiwic3RhdGUiLCJ1cGRhdGVyIiwiTmciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJPZyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiUGciLCJRZyIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJSZyIsIlNnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsImluZGV4IiwiVGciLCJVZyIsIm1vZGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsImRvbmUiLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJzdWJzY3JpYmUiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiViIsIkhpIiwiSWkiLCJXIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJtZXNzYWdlIiwiTmkiLCJjb25zb2xlIiwiZXJyb3IiLCJPaSIsIldlYWtNYXAiLCJQaSIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJ0aGVuIiwibWoiLCJuaiIsImNlaWwiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJrayIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJWaiIsInZrIiwiRXZlbnRzIiwid2siLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInhrIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ5ayIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiaGFzRWxlbWVudFR5cGUiLCJFbGVtZW50IiwiaGFzTWFwIiwiaGFzU2V0IiwiaGFzQXJyYXlCdWZmZXIiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsImVxdWFsIiwiaXQiLCJlbnRyaWVzIiwiUmVnRXhwIiwid2FybiIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJhcnIiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGF0aCIsImdyb3VwcyIsInByZWZpeCIsImRlbGltaXRlciIsIm9wdGlvbmFsIiwicGFydGlhbCIsImFzdGVyaXNrIiwicGF0dGVybiIsImF0dGFjaEtleXMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInRva2Vuc1RvUmVnRXhwIiwicGFyc2UiLCJzdHJpbmdUb1JlZ2V4cCIsImNvbXBpbGUiLCJzdHIiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwiUEFUSF9SRUdFWFAiLCJyZXMiLCJ0b2tlbnMiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJncm91cCIsIm1vZGlmaWVyIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjaGFyQ29kZUF0IiwibWF0Y2hlcyIsIm9iaiIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJ0b2tlbiIsInNlZ21lbnQiLCJqIiwic2Vuc2l0aXZlIiwic3RyaWN0Iiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImV4IiwiUmVhY3QiLCJSZWFjdF9fZGVmYXVsdCIsIl9kZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiY2FuVXNlRE9NIiwicmVkdWNlUHJvcHNUb1N0YXRlIiwiaGFuZGxlU3RhdGVDaGFuZ2VPbkNsaWVudCIsIm1hcFN0YXRlT25TZXJ2ZXIiLCJXcmFwcGVkQ29tcG9uZW50IiwibW91bnRlZEluc3RhbmNlcyIsImVtaXRDaGFuZ2UiLCJTaWRlRWZmZWN0IiwiX1B1cmVDb21wb25lbnQiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfX3Byb3RvX18iLCJwZWVrIiwicmV3aW5kIiwicmVjb3JkZWRTdGF0ZSIsInVuZGVmaW5lZCIsIl9wcm90byIsInNwbGljZSIsIlB1cmVDb21wb25lbnQiLCJnZXREaXNwbGF5TmFtZSIsIl9fc2VsZiIsIl9fc291cmNlIiwianN4IiwianN4cyIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwicGVyZm9ybWFuY2UiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInBvcCIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsIm9iakEiLCJvYmpCIiwiY29tcGFyZUNvbnRleHQiLCJyZXQiLCJrZXlzQSIsImtleXNCIiwiYkhhc093blByb3BlcnR5IiwiaWR4IiwidmFsdWVBIiwidmFsdWVCIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwibyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJjbG9jayIsIl9jbGFzcyIsIl90ZW1wIiwiQVRUUklCVVRFX05BTUVTIiwiVEFHX05BTUVTIiwiQkFTRSIsIkJPRFkiLCJIRUFEIiwiSFRNTCIsIkxJTksiLCJNRVRBIiwiTk9TQ1JJUFQiLCJTQ1JJUFQiLCJTVFlMRSIsIlRJVExFIiwiVEFHX1BST1BFUlRJRVMiLCJSRUFDVF9UQUdfTUFQIiwiYWNjZXNza2V5IiwiY2hhcnNldCIsImNsYXNzIiwiY29udGVudGVkaXRhYmxlIiwiY29udGV4dG1lbnUiLCJpdGVtcHJvcCIsInRhYmluZGV4IiwiSFRNTF9UQUdfTUFQIiwicmVkdWNlIiwiU0VMRl9DTE9TSU5HX1RBR1MiLCJIRUxNRVRfQVRUUklCVVRFIiwiX3R5cGVvZiIsImNsYXNzQ2FsbENoZWNrIiwiQ29uc3RydWN0b3IiLCJjcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJvYmplY3RXaXRob3V0UHJvcGVydGllcyIsInBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJlbmNvZGVTcGVjaWFsQ2hhcmFjdGVycyIsImdldFRpdGxlRnJvbVByb3BzTGlzdCIsInByb3BzTGlzdCIsImlubmVybW9zdFRpdGxlIiwiZ2V0SW5uZXJtb3N0UHJvcGVydHkiLCJpbm5lcm1vc3RUZW1wbGF0ZSIsImlubmVybW9zdERlZmF1bHRUaXRsZSIsImdldE9uQ2hhbmdlQ2xpZW50U3RhdGUiLCJnZXRBdHRyaWJ1dGVzRnJvbVByb3BzTGlzdCIsInRhZ1R5cGUiLCJmaWx0ZXIiLCJ0YWdBdHRycyIsImdldEJhc2VUYWdGcm9tUHJvcHNMaXN0IiwicHJpbWFyeUF0dHJpYnV0ZXMiLCJyZXZlcnNlIiwiaW5uZXJtb3N0QmFzZVRhZyIsImxvd2VyQ2FzZUF0dHJpYnV0ZUtleSIsImdldFRhZ3NGcm9tUHJvcHNMaXN0IiwiYXBwcm92ZWRTZWVuVGFncyIsImFwcHJvdmVkVGFncyIsImluc3RhbmNlVGFncyIsImluc3RhbmNlU2VlblRhZ3MiLCJwcmltYXJ5QXR0cmlidXRlS2V5IiwiYXR0cmlidXRlS2V5IiwidGFnVW5pb24iLCJwcm9wZXJ0eSIsInJhZlBvbHlmaWxsIiwiY3VycmVudFRpbWUiLCJjYWZQb2x5ZmlsbCIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lIiwibW96Q2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtc2ciLCJfaGVsbWV0Q2FsbGJhY2siLCJjb21taXRUYWdDaGFuZ2VzIiwibmV3U3RhdGUiLCJiYXNlVGFnIiwiYm9keUF0dHJpYnV0ZXMiLCJodG1sQXR0cmlidXRlcyIsImxpbmtUYWdzIiwibWV0YVRhZ3MiLCJub3NjcmlwdFRhZ3MiLCJvbkNoYW5nZUNsaWVudFN0YXRlIiwic2NyaXB0VGFncyIsInN0eWxlVGFncyIsInRpdGxlIiwidGl0bGVBdHRyaWJ1dGVzIiwidXBkYXRlQXR0cmlidXRlcyIsInVwZGF0ZVRpdGxlIiwidGFnVXBkYXRlcyIsInVwZGF0ZVRhZ3MiLCJhZGRlZFRhZ3MiLCJyZW1vdmVkVGFncyIsIl90YWdVcGRhdGVzJHRhZ1R5cGUiLCJuZXdUYWdzIiwib2xkVGFncyIsImZsYXR0ZW5BcnJheSIsInBvc3NpYmxlQXJyYXkiLCJhdHRyaWJ1dGVzIiwiZWxlbWVudFRhZyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiaGVsbWV0QXR0cmlidXRlU3RyaW5nIiwiZ2V0QXR0cmlidXRlIiwiaGVsbWV0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXNUb1JlbW92ZSIsImF0dHJpYnV0ZUtleXMiLCJhdHRyaWJ1dGUiLCJpbmRleFRvU2F2ZSIsIl9pIiwidGFncyIsImhlYWRFbGVtZW50IiwiaGVhZCIsInF1ZXJ5U2VsZWN0b3IiLCJ0YWdOb2RlcyIsImluZGV4VG9EZWxldGUiLCJuZXdFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJzb21lIiwiZXhpc3RpbmdUYWciLCJpc0VxdWFsTm9kZSIsImdlbmVyYXRlRWxlbWVudEF0dHJpYnV0ZXNBc1N0cmluZyIsImF0dHIiLCJjb252ZXJ0RWxlbWVudEF0dHJpYnV0ZXN0b1JlYWN0UHJvcHMiLCJpbml0UHJvcHMiLCJnZXRNZXRob2RzRm9yVGFnIiwidG9Db21wb25lbnQiLCJfaW5pdFByb3BzIiwiYXR0cmlidXRlU3RyaW5nIiwiZmxhdHRlbmVkVGl0bGUiLCJnZW5lcmF0ZVRpdGxlQXNTdHJpbmciLCJfbWFwcGVkVGFnIiwibWFwcGVkVGFnIiwibWFwcGVkQXR0cmlidXRlIiwiY29udGVudCIsImdlbmVyYXRlVGFnc0FzUmVhY3RDb21wb25lbnQiLCJhdHRyaWJ1dGVIdG1sIiwidGFnQ29udGVudCIsImlzU2VsZkNsb3NpbmciLCJnZW5lcmF0ZVRhZ3NBc1N0cmluZyIsIl9yZWYiLCJfcmVmJHRpdGxlIiwibm9zY3JpcHQiLCJzY3JpcHQiLCJIZWxtZXRTaWRlRWZmZWN0cyIsImRlZmVyIiwiSGVsbWV0RXhwb3J0IiwiX1JlYWN0JENvbXBvbmVudCIsIkhlbG1ldFdyYXBwZXIiLCJzZXRQcm90b3R5cGVPZiIsImluaGVyaXRzIiwibmV4dFByb3BzIiwibWFwTmVzdGVkQ2hpbGRyZW5Ub1Byb3BzIiwibmVzdGVkQ2hpbGRyZW4iLCJmbGF0dGVuQXJyYXlUeXBlQ2hpbGRyZW4iLCJfYmFiZWxIZWxwZXJzJGV4dGVuZHMiLCJhcnJheVR5cGVDaGlsZHJlbiIsIm5ld0NoaWxkUHJvcHMiLCJtYXBPYmplY3RUeXBlQ2hpbGRyZW4iLCJfcmVmMiIsIl9iYWJlbEhlbHBlcnMkZXh0ZW5kczIiLCJfYmFiZWxIZWxwZXJzJGV4dGVuZHMzIiwibmV3UHJvcHMiLCJtYXBBcnJheVR5cGVDaGlsZHJlblRvUHJvcHMiLCJuZXdGbGF0dGVuZWRQcm9wcyIsImFycmF5Q2hpbGROYW1lIiwiX2JhYmVsSGVscGVycyRleHRlbmRzNCIsIndhcm5PbkludmFsaWRDaGlsZHJlbiIsIm1hcENoaWxkcmVuVG9Qcm9wcyIsIl90aGlzMiIsIl9jaGlsZCRwcm9wcyIsImluaXRBdHRyaWJ1dGVzIiwiY29udmVydFJlYWN0UHJvcHN0b0h0bWxBdHRyaWJ1dGVzIiwiX3Byb3BzIiwiZGVmYXVsdFRpdGxlIiwidGl0bGVUZW1wbGF0ZSIsIm1hcHBlZFN0YXRlIiwicmVuZGVyU3RhdGljIiwiY2hhclNldCIsInJlbCIsInVzZSIsIm1zR3JpZFJvdyIsIm1zR3JpZFJvd1NwYW4iLCJtc0dyaWRDb2x1bW4iLCJtc0dyaWRDb2x1bW5TcGFuIiwiV2Via2l0TGluZUNsYW1wIiwicmVhY3RQcm9wc1JlZ2V4IiwiY2FjaGUiLCJhcmciLCJmcmVlemUiLCJfIiwic3R5bGVkQ29tcG9uZW50SWQiLCJwcm9jZXNzIiwiUkVBQ1RfQVBQX1NDX0FUVFIiLCJTQ19BVFRSIiwiQm9vbGVhbiIsIlNDX0RJU0FCTEVfU1BFRURZIiwiUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZIiwiZ3JvdXBTaXplcyIsIlVpbnQzMkFycmF5IiwiaW5kZXhPZkdyb3VwIiwiaW5zZXJ0UnVsZXMiLCJpbnNlcnRSdWxlIiwiY2xlYXJHcm91cCIsImRlbGV0ZVJ1bGUiLCJnZXRHcm91cCIsImdldFJ1bGUiLCJyZWdpc3Rlck5hbWUiLCJwYXJzZUludCIsImdldFRhZyIsIl9fd2VicGFja19ub25jZV9fIiwiY2hpbGROb2RlcyIsIiQiLCJzaGVldCIsInN0eWxlU2hlZXRzIiwib3duZXJOb2RlIiwiY3NzUnVsZXMiLCJub2RlcyIsInJ1bGVzIiwiaXNTZXJ2ZXIiLCJ1c2VDU1NPTUluamVjdGlvbiIsImdzIiwibmFtZXMiLCJyZWdpc3RlcklkIiwicmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImFsbG9jYXRlR1NJbnN0YW5jZSIsImhhc05hbWVGb3JJZCIsImNsZWFyTmFtZXMiLCJjbGVhciIsImNsZWFyUnVsZXMiLCJjbGVhclRhZyIsImFicyIsInN0YXRpY1J1bGVzSWQiLCJpc1N0YXRpYyIsImNvbXBvbmVudElkIiwiYmFzZUhhc2giLCJiYXNlU3R5bGUiLCJnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyIsImhhc2giLCJwbHVnaW5zIiwibGFzdEluZGV4T2YiLCJzdHlsaXNQbHVnaW5zIiwiZGlzYWJsZUNTU09NSW5qZWN0aW9uIiwiZGlzYWJsZVZlbmRvclByZWZpeGVzIiwiZ2V0TmFtZSIsIl9lIiwidGhlbWUiLCJHZSIsImF0dHJzIiwicGFyZW50Q29tcG9uZW50SWQiLCJzaG91bGRGb3J3YXJkUHJvcCIsImNvbXBvbmVudFN0eWxlIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwiJGFzIiwiYXMiLCJjbGFzc05hbWUiLCJ3aXRoQ29tcG9uZW50IiwiX2ZvbGRlZERlZmF1bHRQcm9wcyIsIndpdGhDb25maWciLCJjcmVhdGVTdHlsZXMiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJfZW1pdFNoZWV0Q1NTIiwiZ2V0U3R5bGVUYWdzIiwic2VhbGVkIiwiZ2V0U3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZWFsIiwiY29sbGVjdFN0eWxlcyIsImludGVybGVhdmVXaXRoTm9kZVN0cmVhbSIsImNvbG9ycyIsImdyZXlEYXJrIiwicmVkRGFyayIsInJlZExpZ2h0Iiwib2NoZXIiLCJ3aGl0ZSIsImZvbnRTaXplIiwiaGVhZGVyIiwibm9ybWFsIiwic21hbGwiLCJ0ZW1wbGF0ZU9iamVjdF8xIiwiY29va2VkIiwicmF3IiwiX3NldFByb3RvdHlwZU9mIiwiX2luaGVyaXRzTG9vc2UiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJsaXN0IiwiY29uZGl0aW9uIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwicmVzdWx0IiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJpdGVtIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsImFyZ3MiLCJfa2V5IiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIk1BWF9TSUdORURfMzFfQklUX0lOVCIsImNvbW1vbmpzR2xvYmFsIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwiaGFuZGxlcnMiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIl9Db21wb25lbnQiLCJfdGhpcyIsImVtaXR0ZXIiLCJvbGRWYWx1ZSIsIm9iamVjdElzIiwiX0NvbXBvbmVudDIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJoaXN0b3J5Q29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCQxIiwiUm91dGVyIiwiX2lzTW91bnRlZCIsIl9wZW5kaW5nTG9jYXRpb24iLCJzdGF0aWNDb250ZXh0IiwiY29tcHV0ZVJvb3RNYXRjaCIsInBhcmFtcyIsImlzRXhhY3QiLCJjYWNoZSQxIiwiY2FjaGVDb3VudCQxIiwibWF0Y2hQYXRoIiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIm1hdGNoZWQiLCJfY29tcGlsZVBhdGgiLCJjYWNoZUtleSIsInBhdGhDYWNoZSIsInJlZ2V4cCIsImNvbXBpbGVQYXRoJDEiLCJ2YWx1ZXMiLCJSb3V0ZSIsImNvbnRleHQkMSIsImNvbXB1dGVkTWF0Y2giLCJfdGhpcyRwcm9wcyIsIlN3aXRjaCIsIkJyb3dzZXJSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkxpbmtBbmNob3IiLCJmb3J3YXJkZWRSZWYiLCJpbm5lclJlZiIsIm5hdmlnYXRlIiwiX29uQ2xpY2siLCJyZXN0IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyJGNvbXBvbmVudCIsImZvcndhcmRSZWZTaGltJDEiLCJmb3J3YXJkUmVmJDEiLCJfcGF0aCIsIk5hdkxpbmsiLCJfcmVmJGFyaWFDdXJyZW50IiwiYXJpYUN1cnJlbnQiLCJfcmVmJGFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiY2xhc3NOYW1lUHJvcCIsImlzQWN0aXZlUHJvcCIsImxvY2F0aW9uUHJvcCIsInN0eWxlUHJvcCIsImVzY2FwZWRQYXRoIiwiY2xhc3NuYW1lcyIsImpvaW5DbGFzc25hbWVzIiwiX2ciLCJQYWdlIiwicGFnZXMiLCJIb21lIiwibGFiZWwiLCJpY29uIiwieG1sbnMiLCJ2aWV3Qm94IiwiV2FudFRvRnJ1aXRQcmVzcyIsIk91clByb2R1Y3RzIiwiV2hlcmVUb0J1eSIsIkNvbnRhY3QiLCJob21lUGFnZXMiLCJXb3JrUGxhY2UiLCJpbWFnZVNvdXJjZSIsIkZydWl0T3JjaGFyZHMiLCJjdXRlTGFkeSIsIlByb2R1Y3RzIiwiYm90dGxlc1dpZGVzY3JlZW4iLCJQdWJsaWNBcHBsZUp1aWNpbmciLCJwdWJsaWNBcHBsZUp1aWNpbmciLCJXcmFwcGVyIiwiX19hc3NpZ24iLCJhbHQiLCJzcmMiLCJwb2xhYmkiLCJvcGVuIiwiY2VydCIsImV1IiwiX2EiLCJTdmdJY29uIiwic2hvd0xhYmVsIiwiX2IiLCJob3Jpem9udGFsU3BhY2luZyIsIk5hdiIsInBhZ2UiLCJzZXRTaG93TGFuZGluZ1BhZ2UiLCJiYWNrR3JvdW5kSW1hZ2VMb2FkZWQiLCJzZXRCYWNrZ3JvdW5kSW1hZ2VMb2FkZWQiLCJfYyIsImxvZ29Mb2FkZWQiLCJzZXRMb2dvTG9hZGVkIiwiX2QiLCJoaWRlTGFuZGluZyIsInNldEhpZGVMYW5kaW5nIiwic2V0UmVuZGVyIiwic3RhcnRBbmltYXRpb24iLCJvdmVyZmxvd1kiLCJ0aW1lcklkIiwib25UcmFuc2l0aW9uRW5kIiwib25Mb2FkIiwiJGhpZGUiLCIkc3RhcnRBbmltYXRpb24iLCJob3ZlcmVkIiwic2V0SG92ZXJlZCIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsIiRob3ZlciIsIkNvbnRleHQiLCJzaG93TGFuZGluZ1BhZ2UiLCJIZWFkZXIiLCJzdHlsZVByb3BzIiwiX19yZXN0IiwicHJpbWFyeSIsIm1hcmdpblRvcCIsIlBhcmFncmFwaCIsImJvbGQiLCJzbWFsbEZvbnRTaXplIiwicHJpbWFyeUNvbG9yIiwicGFkZGluZ1RvcCIsIkltYWdlIiwiaXNPbkxlZnQiLCJpc09uUmlnaHQiLCJmaW5kIiwiaG9tZVBhZ2UiLCJDb2x1bW4iLCJtYXJnaW5Cb3R0b20iLCJMZWZ0Q29sdW1uIiwiUmlnaHRDb2x1bW4iLCJsb2FkaW5nIiwicHJpY2VzIiwiZGVzY3JpcHRpb25zIiwiVGl0bGUiLCJQcmljZSIsInByaWNlIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7d0NBRUEsSUFBSUEsRUFBVSxFQUFRLEtBTWxCQyxFQUFnQixDQUNsQkMsbUJBQW1CLEVBQ25CQyxhQUFhLEVBQ2JDLGNBQWMsRUFDZEMsY0FBYyxFQUNkQyxhQUFhLEVBQ2JDLGlCQUFpQixFQUNqQkMsMEJBQTBCLEVBQzFCQywwQkFBMEIsRUFDMUJDLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxNQUFNLEdBRUpDLEVBQWdCLENBQ2xCQyxNQUFNLEVBQ05DLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxRQUFRLEVBQ1JDLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxPQUFPLEdBU0xDLEVBQWUsQ0FDakIsVUFBWSxFQUNaQyxTQUFTLEVBQ1RqQixjQUFjLEVBQ2RDLGFBQWEsRUFDYkssV0FBVyxFQUNYQyxNQUFNLEdBRUpXLEVBQWUsR0FJbkIsU0FBU0MsRUFBV0MsR0FFbEIsT0FBSXpCLEVBQVEwQixPQUFPRCxHQUNWSixFQUlGRSxFQUFhRSxFQUFvQixXQUFNeEIsRUFWaERzQixFQUFhdkIsRUFBUTJCLFlBaEJLLENBQ3hCLFVBQVksRUFDWkMsUUFBUSxFQUNSdkIsY0FBYyxFQUNkQyxhQUFhLEVBQ2JLLFdBQVcsR0FZYlksRUFBYXZCLEVBQVE2QixNQUFRUixFQVk3QixJQUFJUyxFQUFpQkMsT0FBT0QsZUFDeEJFLEVBQXNCRCxPQUFPQyxvQkFDN0JDLEVBQXdCRixPQUFPRSxzQkFDL0JDLEVBQTJCSCxPQUFPRyx5QkFDbENDLEVBQWlCSixPQUFPSSxlQUN4QkMsRUFB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U0FBVSxFQUFDLFNBQUssR0FBTSxRQUFJLElBQ3BELFVBQU0sR0FBZSxHQUFTLENBQUVrN0MsTUFBT0EsSUFBUyxDQUFFbDdDLFNBQVUsRUFBQyxTQUFLLEdBQWMsUUFBSSxJQUM1RSxTQUFLLEdBQWlCLENBQUVBLFVBQVUsU0FBSyxHQUFRLFFBQUksU0FBVyxXQUFhLFVBQVksS0NuQmpGLFFBQUksR0FBU2xILFNBQVM4NUMsY0FBYyxXIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih5KDIyNykpO3ZhciBiYT1uZXcgU2V0LGNhPXt9O2Z1bmN0aW9uIGRhKGEsYil7ZWEoYSxiKTtlYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gZWEoYSxiKXtjYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspYmEuYWRkKGJbYV0pfVxudmFyIGZhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxoYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8saWE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcbmphPXt9LGthPXt9O2Z1bmN0aW9uIGxhKGEpe2lmKGlhLmNhbGwoa2EsYSkpcmV0dXJuITA7aWYoaWEuY2FsbChqYSxhKSlyZXR1cm4hMTtpZihoYS50ZXN0KGEpKXJldHVybiBrYVthXT0hMDtqYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBtYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIG5hKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fG1hKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciBvYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHBhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLFxucGEpO0RbYl09bmV3IEIoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuRC54bGlua0hyZWY9bmV3IEIoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gcWEoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgcmE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsc2E9NjAxMDMsdGE9NjAxMDYsdWE9NjAxMDcsd2E9NjAxMDgseGE9NjAxMTQseWE9NjAxMDksemE9NjAxMTAsQWE9NjAxMTIsQmE9NjAxMTMsQ2E9NjAxMjAsRGE9NjAxMTUsRWE9NjAxMTYsRmE9NjAxMjEsR2E9NjAxMjgsSGE9NjAxMjksSWE9NjAxMzAsSmE9NjAxMzE7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgRT1TeW1ib2wuZm9yO3NhPUUoXCJyZWFjdC5lbGVtZW50XCIpO3RhPUUoXCJyZWFjdC5wb3J0YWxcIik7dWE9RShcInJlYWN0LmZyYWdtZW50XCIpO3dhPUUoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTt4YT1FKFwicmVhY3QucHJvZmlsZXJcIik7eWE9RShcInJlYWN0LnByb3ZpZGVyXCIpO3phPUUoXCJyZWFjdC5jb250ZXh0XCIpO0FhPUUoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtCYT1FKFwicmVhY3Quc3VzcGVuc2VcIik7Q2E9RShcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7RGE9RShcInJlYWN0Lm1lbW9cIik7RWE9RShcInJlYWN0LmxhenlcIik7RmE9RShcInJlYWN0LmJsb2NrXCIpO0UoXCJyZWFjdC5zY29wZVwiKTtHYT1FKFwicmVhY3Qub3BhcXVlLmlkXCIpO0hhPUUoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO0lhPUUoXCJyZWFjdC5vZmZzY3JlZW5cIik7SmE9RShcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIil9XG52YXIgS2E9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIExhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1LYSYmYVtLYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgTWE7ZnVuY3Rpb24gTmEoYSl7aWYodm9pZCAwPT09TWEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TWE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK01hK2F9dmFyIE9hPSExO1xuZnVuY3Rpb24gUGEoYSxiKXtpZighYXx8T2EpcmV0dXJuXCJcIjtPYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2goayl7dmFyIGQ9a31SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGspe2Q9a31hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGspe2Q9a31hKCl9fWNhdGNoKGspe2lmKGsmJmQmJlwic3RyaW5nXCI9PT10eXBlb2Ygay5zdGFjayl7Zm9yKHZhciBlPWsuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSlyZXR1cm5cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3doaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtPYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP05hKGEpOlwiXCJ9XG5mdW5jdGlvbiBRYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTmEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBOYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTmEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBOYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9UGEoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9UGEoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDIyOnJldHVybiBhPVBhKGEudHlwZS5fcmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1QYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFJhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgdGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIHhhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHdhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgQmE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgQ2E6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgemE6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgeWE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgQWE6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7XG5yZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIERhOnJldHVybiBSYShhLnR5cGUpO2Nhc2UgRmE6cmV0dXJuIFJhKGEuX3JlbmRlcik7Y2FzZSBFYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gUmEoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBtKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uICRhKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmcWEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGFiKGEsYil7JGEoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9iYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZiYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBiYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBkYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBlYihhLGIpe2E9bSh7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWRiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHkoOTEpKTtyZXR1cm4gbSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih5KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IoeSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIGtiPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5iLG9iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtiLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25iPW5ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW5iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWJbYl09cWJbYV19KX0pO2Z1bmN0aW9uIHNiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxYi5oYXNPd25Qcm9wZXJ0eShhKSYmcWJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGIoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2IoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWI9bSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZiKGEsYil7aWYoYil7aWYodWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih5KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih5KDYyKSk7fX1cbmZ1bmN0aW9uIHdiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1mdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHkoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPUdiLEtiPSExLExiPSExO2Z1bmN0aW9uIE1iKCl7aWYobnVsbCE9PXpifHxudWxsIT09QWIpSWIoKSxGYigpfVxuZnVuY3Rpb24gTmIoYSxiLGMpe2lmKExiKXJldHVybiBhKGIsYyk7TGI9ITA7dHJ5e3JldHVybiBKYihhLGIsYyl9ZmluYWxseXtMYj0hMSxNYigpfX1cbmZ1bmN0aW9uIE9iKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9RGIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IoeSgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBQYj0hMTtpZihmYSl0cnl7dmFyIFFiPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShRYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7UGI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKX1jYXRjaChhKXtQYj0hMX1mdW5jdGlvbiBSYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobil7dGhpcy5vbkVycm9yKG4pfX12YXIgU2I9ITEsVGI9bnVsbCxVYj0hMSxWYj1udWxsLFdiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe1NiPSEwO1RiPWF9fTtmdW5jdGlvbiBYYihhLGIsYyxkLGUsZixnLGgsayl7U2I9ITE7VGI9bnVsbDtSYi5hcHBseShXYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gWWIoYSxiLGMsZCxlLGYsZyxoLGspe1hiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihTYil7aWYoU2Ipe3ZhciBsPVRiO1NiPSExO1RiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih5KDE5OCkpO1VifHwoVWI9ITAsVmI9bCl9fWZ1bmN0aW9uIFpiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBhYyhhKXtpZihaYihhKSE9PWEpdGhyb3cgRXJyb3IoeSgxODgpKTt9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1aYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBhYyhlKSxhO2lmKGY9PT1kKXJldHVybiBhYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHkoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IoeSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih5KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGNjKGEpe2E9YmMoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkYyhhLGIpe2Zvcih2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09Yjspe2lmKGI9PT1hfHxiPT09YylyZXR1cm4hMDtiPWIucmV0dXJufXJldHVybiExfXZhciBlYyxmYyxnYyxoYyxpYz0hMSxqYz1bXSxrYz1udWxsLGxjPW51bGwsbWM9bnVsbCxuYz1uZXcgTWFwLG9jPW5ldyBNYXAscGM9W10scWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gcmMoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsZG9tRXZlbnROYW1lOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDE2LG5hdGl2ZUV2ZW50OmUsdGFyZ2V0Q29udGFpbmVyczpbZF19fWZ1bmN0aW9uIHNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6a2M9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmxjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOm1jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpuYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpvYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIHRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9cmMoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJmZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIGtjPXRjKGtjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBsYz10YyhsYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gbWM9dGMobWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtuYy5zZXQoZix0YyhuYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsb2Muc2V0KGYsdGMob2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gdmMoYSl7dmFyIGI9d2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1aYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj0kYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtoYyhhLmxhbmVQcmlvcml0eSxmdW5jdGlvbigpe3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtnYyhjKX0pfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1cbmZ1bmN0aW9uIHhjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTtmb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09YylyZXR1cm4gYj1DYihjKSxudWxsIT09YiYmZmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gemMoYSxiLGMpe3hjKGEpJiZjLmRlbGV0ZShiKX1cbmZ1bmN0aW9uIEFjKCl7Zm9yKGljPSExOzA8amMubGVuZ3RoOyl7dmFyIGE9amNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNiKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmZWMoYSk7YnJlYWt9Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpe2EuYmxvY2tlZE9uPWM7YnJlYWt9Yi5zaGlmdCgpfW51bGw9PT1hLmJsb2NrZWRPbiYmamMuc2hpZnQoKX1udWxsIT09a2MmJnhjKGtjKSYmKGtjPW51bGwpO251bGwhPT1sYyYmeGMobGMpJiYobGM9bnVsbCk7bnVsbCE9PW1jJiZ4YyhtYykmJihtYz1udWxsKTtuYy5mb3JFYWNoKHpjKTtvYy5mb3JFYWNoKHpjKX1cbmZ1bmN0aW9uIEJjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxpY3x8KGljPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LEFjKSkpfVxuZnVuY3Rpb24gQ2MoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gQmMoYixhKX1pZigwPGpjLmxlbmd0aCl7QmMoamNbMF0sYSk7Zm9yKHZhciBjPTE7YzxqYy5sZW5ndGg7YysrKXt2YXIgZD1qY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PWtjJiZCYyhrYyxhKTtudWxsIT09bGMmJkJjKGxjLGEpO251bGwhPT1tYyYmQmMobWMsYSk7bmMuZm9yRWFjaChiKTtvYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxwYy5sZW5ndGg7YysrKWQ9cGNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPHBjLmxlbmd0aCYmKGM9cGNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspdmMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZwYy5zaGlmdCgpfVxuZnVuY3Rpb24gRGMoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgRWM9e2FuaW1hdGlvbmVuZDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOkRjKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sRmM9e30sR2M9e307XG5mYSYmKEdjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIEVjLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIEVjLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gSGMoYSl7aWYoRmNbYV0pcmV0dXJuIEZjW2FdO2lmKCFFY1thXSlyZXR1cm4gYTt2YXIgYj1FY1thXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBHYylyZXR1cm4gRmNbYV09YltjXTtyZXR1cm4gYX1cbnZhciBJYz1IYyhcImFuaW1hdGlvbmVuZFwiKSxKYz1IYyhcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxLYz1IYyhcImFuaW1hdGlvbnN0YXJ0XCIpLExjPUhjKFwidHJhbnNpdGlvbmVuZFwiKSxNYz1uZXcgTWFwLE5jPW5ldyBNYXAsT2M9W1wiYWJvcnRcIixcImFib3J0XCIsSWMsXCJhbmltYXRpb25FbmRcIixKYyxcImFuaW1hdGlvbkl0ZXJhdGlvblwiLEtjLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFxuXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsTGMsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIFBjKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdO2U9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7TmMuc2V0KGQsYik7TWMuc2V0KGQsZSk7ZGEoZSxbZF0pfX12YXIgUWM9ci51bnN0YWJsZV9ub3c7UWMoKTt2YXIgRj04O1xuZnVuY3Rpb24gUmMoYSl7aWYoMCE9PSgxJmEpKXJldHVybiBGPTE1LDE7aWYoMCE9PSgyJmEpKXJldHVybiBGPTE0LDI7aWYoMCE9PSg0JmEpKXJldHVybiBGPTEzLDQ7dmFyIGI9MjQmYTtpZigwIT09YilyZXR1cm4gRj0xMixiO2lmKDAhPT0oYSYzMikpcmV0dXJuIEY9MTEsMzI7Yj0xOTImYTtpZigwIT09YilyZXR1cm4gRj0xMCxiO2lmKDAhPT0oYSYyNTYpKXJldHVybiBGPTksMjU2O2I9MzU4NCZhO2lmKDAhPT1iKXJldHVybiBGPTgsYjtpZigwIT09KGEmNDA5NikpcmV0dXJuIEY9Nyw0MDk2O2I9NDE4NjExMiZhO2lmKDAhPT1iKXJldHVybiBGPTYsYjtiPTYyOTE0NTYwJmE7aWYoMCE9PWIpcmV0dXJuIEY9NSxiO2lmKGEmNjcxMDg4NjQpcmV0dXJuIEY9NCw2NzEwODg2NDtpZigwIT09KGEmMTM0MjE3NzI4KSlyZXR1cm4gRj0zLDEzNDIxNzcyODtiPTgwNTMwNjM2OCZhO2lmKDAhPT1iKXJldHVybiBGPTIsYjtpZigwIT09KDEwNzM3NDE4MjQmYSkpcmV0dXJuIEY9MSwxMDczNzQxODI0O1xuRj04O3JldHVybiBhfWZ1bmN0aW9uIFNjKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiAxNTtjYXNlIDk4OnJldHVybiAxMDtjYXNlIDk3OmNhc2UgOTY6cmV0dXJuIDg7Y2FzZSA5NTpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX1mdW5jdGlvbiBUYyhhKXtzd2l0Y2goYSl7Y2FzZSAxNTpjYXNlIDE0OnJldHVybiA5OTtjYXNlIDEzOmNhc2UgMTI6Y2FzZSAxMTpjYXNlIDEwOnJldHVybiA5ODtjYXNlIDk6Y2FzZSA4OmNhc2UgNzpjYXNlIDY6Y2FzZSA0OmNhc2UgNTpyZXR1cm4gOTc7Y2FzZSAzOmNhc2UgMjpjYXNlIDE6cmV0dXJuIDk1O2Nhc2UgMDpyZXR1cm4gOTA7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDM1OCxhKSk7fX1cbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIEY9MDt2YXIgZD0wLGU9MCxmPWEuZXhwaXJlZExhbmVzLGc9YS5zdXNwZW5kZWRMYW5lcyxoPWEucGluZ2VkTGFuZXM7aWYoMCE9PWYpZD1mLGU9Rj0xNTtlbHNlIGlmKGY9YyYxMzQyMTc3MjcsMCE9PWYpe3ZhciBrPWYmfmc7MCE9PWs/KGQ9UmMoayksZT1GKTooaCY9ZiwwIT09aCYmKGQ9UmMoaCksZT1GKSl9ZWxzZSBmPWMmfmcsMCE9PWY/KGQ9UmMoZiksZT1GKTowIT09aCYmKGQ9UmMoaCksZT1GKTtpZigwPT09ZClyZXR1cm4gMDtkPTMxLVZjKGQpO2Q9YyYoKDA+ZD8wOjE8PGQpPDwxKS0xO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmcpKXtSYyhiKTtpZihlPD1GKXJldHVybiBiO0Y9ZX1iPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLVZjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gV2MoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIFhjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTU6cmV0dXJuIDE7Y2FzZSAxNDpyZXR1cm4gMjtjYXNlIDEyOnJldHVybiBhPVljKDI0Jn5iKSwwPT09YT9YYygxMCxiKTphO2Nhc2UgMTA6cmV0dXJuIGE9WWMoMTkyJn5iKSwwPT09YT9YYyg4LGIpOmE7Y2FzZSA4OnJldHVybiBhPVljKDM1ODQmfmIpLDA9PT1hJiYoYT1ZYyg0MTg2MTEyJn5iKSwwPT09YSYmKGE9NTEyKSksYTtjYXNlIDI6cmV0dXJuIGI9WWMoODA1MzA2MzY4Jn5iKSwwPT09YiYmKGI9MjY4NDM1NDU2KSxifXRocm93IEVycm9yKHkoMzU4LGEpKTt9ZnVuY3Rpb24gWWMoYSl7cmV0dXJuIGEmLWF9ZnVuY3Rpb24gWmMoYSl7Zm9yKHZhciBiPVtdLGM9MDszMT5jO2MrKyliLnB1c2goYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkYyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7dmFyIGQ9Yi0xO2Euc3VzcGVuZGVkTGFuZXMmPWQ7YS5waW5nZWRMYW5lcyY9ZDthPWEuZXZlbnRUaW1lcztiPTMxLVZjKGIpO2FbYl09Y312YXIgVmM9TWF0aC5jbHozMj9NYXRoLmNsejMyOmFkLGJkPU1hdGgubG9nLGNkPU1hdGguTE4yO2Z1bmN0aW9uIGFkKGEpe3JldHVybiAwPT09YT8zMjozMS0oYmQoYSkvY2R8MCl8MH12YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBnZChhLGIsYyxkKXtLYnx8SWIoKTt2YXIgZT1oZCxmPUtiO0tiPSEwO3RyeXtIYihlLGEsYixjLGQpfWZpbmFsbHl7KEtiPWYpfHxNYigpfX1mdW5jdGlvbiBpZChhLGIsYyxkKXtlZChkZCxoZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCl7aWYoZmQpe3ZhciBlO2lmKChlPTA9PT0oYiY0KSkmJjA8amMubGVuZ3RoJiYtMTxxYy5pbmRleE9mKGEpKWE9cmMobnVsbCxhLGIsYyxkKSxqYy5wdXNoKGEpO2Vsc2V7dmFyIGY9eWMoYSxiLGMsZCk7aWYobnVsbD09PWYpZSYmc2MoYSxkKTtlbHNle2lmKGUpe2lmKC0xPHFjLmluZGV4T2YoYSkpe2E9cmMoZixhLGIsYyxkKTtqYy5wdXNoKGEpO3JldHVybn1pZih1YyhmLGEsYixjLGQpKXJldHVybjtzYyhhLGQpfWpkKGEsYixkLG51bGwsYyl9fX19XG5mdW5jdGlvbiB5YyhhLGIsYyxkKXt2YXIgZT14YihkKTtlPXdjKGUpO2lmKG51bGwhPT1lKXt2YXIgZj1aYihlKTtpZihudWxsPT09ZillPW51bGw7ZWxzZXt2YXIgZz1mLnRhZztpZigxMz09PWcpe2U9JGIoZik7aWYobnVsbCE9PWUpcmV0dXJuIGU7ZT1udWxsfWVsc2UgaWYoMz09PWcpe2lmKGYuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1mLnRhZz9mLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7ZT1udWxsfWVsc2UgZiE9PWUmJihlPW51bGwpfX1qZChhLGIsZCxlLGMpO3JldHVybiBudWxsfXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtcbmZ1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfW0oYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPW0oe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1tKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1tKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1tKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9bSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPW0oe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9bSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPW0oe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9bSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9bSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPW0oe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPW0oe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWZhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2ZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1mYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWZhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGZhKXt2YXIgeGU7aWYoZmEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTthPXJlO2lmKEtiKWEoYik7ZWxzZXtLYj0hMDt0cnl7R2IoYSxiKX1maW5hbGx5e0tiPSExLE1iKCl9fX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZSxJZT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gSmUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIUllLmNhbGwoYixjW2RdKXx8IUhlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gS2UoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1LZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZShjKX19ZnVuY3Rpb24gTWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFBlPWZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZPZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZKZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5QYyhcImNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzaW4gZm9jdXMgZm9jdXNvdXQgYmx1ciBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLFxuMCk7UGMoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7UGMoT2MsMik7Zm9yKHZhciBWZT1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksV2U9MDtXZTxWZS5sZW5ndGg7V2UrKylOYy5zZXQoVmVbV2VdLDApO2VhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7XG5lYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2VhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtkYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2RhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZGEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2RhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBYZT1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksWWU9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQoWGUpKTtcbmZ1bmN0aW9uIFplKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1liKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a319fWlmKFViKXRocm93IGE9VmIsVWI9ITEsVmI9bnVsbCxhO31cbmZ1bmN0aW9uIEcoYSxiKXt2YXIgYz0kZShiKSxkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwoYWYoYixhLDIsITEpLGMuYWRkKGQpKX12YXIgYmY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBjZihhKXthW2JmXXx8KGFbYmZdPSEwLGJhLmZvckVhY2goZnVuY3Rpb24oYil7WWUuaGFzKGIpfHxkZihiLCExLGEsbnVsbCk7ZGYoYiwhMCxhLG51bGwpfSkpfVxuZnVuY3Rpb24gZGYoYSxiLGMsZCl7dmFyIGU9NDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjAsZj1jO1wic2VsZWN0aW9uY2hhbmdlXCI9PT1hJiY5IT09Yy5ub2RlVHlwZSYmKGY9Yy5vd25lckRvY3VtZW50KTtpZihudWxsIT09ZCYmIWImJlllLmhhcyhhKSl7aWYoXCJzY3JvbGxcIiE9PWEpcmV0dXJuO2V8PTI7Zj1kfXZhciBnPSRlKGYpLGg9YStcIl9fXCIrKGI/XCJjYXB0dXJlXCI6XCJidWJibGVcIik7Zy5oYXMoaCl8fChiJiYoZXw9NCksYWYoZixhLGUsYiksZy5hZGQoaCkpfVxuZnVuY3Rpb24gYWYoYSxiLGMsZCl7dmFyIGU9TmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1lPzI6ZSl7Y2FzZSAwOmU9Z2Q7YnJlYWs7Y2FzZSAxOmU9aWQ7YnJlYWs7ZGVmYXVsdDplPWhkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFQYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBqZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPXdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1OYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9TWMuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLHg9YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6eD1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjp4PVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSBJYzpjYXNlIEpjOmNhc2UgS2M6az1IZDticmVhaztjYXNlIExjOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHc9MCE9PShiJjQpLHo9IXcmJlwic2Nyb2xsXCI9PT1hLHU9dz9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt3PVtdO2Zvcih2YXIgdD1kLHE7bnVsbCE9PVxudDspe3E9dDt2YXIgdj1xLnN0YXRlTm9kZTs1PT09cS50YWcmJm51bGwhPT12JiYocT12LG51bGwhPT11JiYodj1PYih0LHUpLG51bGwhPXYmJncucHVzaChlZih0LHYscSkpKSk7aWYoeilicmVhazt0PXQucmV0dXJufTA8dy5sZW5ndGgmJihoPW5ldyBrKGgseCxudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp3fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmMD09PShiJjE2KSYmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKHdjKHgpfHx4W2ZmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQseD14P3djKHgpOm51bGwsbnVsbCE9PVxueCYmKHo9WmIoeCkseCE9PXp8fDUhPT14LnRhZyYmNiE9PXgudGFnKSl4PW51bGx9ZWxzZSBrPW51bGwseD1kO2lmKGshPT14KXt3PUJkO3Y9XCJvbk1vdXNlTGVhdmVcIjt1PVwib25Nb3VzZUVudGVyXCI7dD1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXc9VGQsdj1cIm9uUG9pbnRlckxlYXZlXCIsdT1cIm9uUG9pbnRlckVudGVyXCIsdD1cInBvaW50ZXJcIjt6PW51bGw9PWs/aDp1ZShrKTtxPW51bGw9PXg/aDp1ZSh4KTtoPW5ldyB3KHYsdCtcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PXo7aC5yZWxhdGVkVGFyZ2V0PXE7dj1udWxsO3djKGUpPT09ZCYmKHc9bmV3IHcodSx0K1wiZW50ZXJcIix4LGMsZSksdy50YXJnZXQ9cSx3LnJlbGF0ZWRUYXJnZXQ9eix2PXcpO3o9djtpZihrJiZ4KWI6e3c9azt1PXg7dD0wO2ZvcihxPXc7cTtxPWdmKHEpKXQrKztxPTA7Zm9yKHY9dTt2O3Y9Z2YodikpcSsrO2Zvcig7MDx0LXE7KXc9Z2YodyksdC0tO2Zvcig7MDxxLXQ7KXU9XG5nZih1KSxxLS07Zm9yKDt0LS07KXtpZih3PT09dXx8bnVsbCE9PXUmJnc9PT11LmFsdGVybmF0ZSlicmVhayBiO3c9Z2Yodyk7dT1nZih1KX13PW51bGx9ZWxzZSB3PW51bGw7bnVsbCE9PWsmJmhmKGcsaCxrLHcsITEpO251bGwhPT14JiZudWxsIT09eiYmaGYoZyx6LHgsdywhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgSj12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKUo9RmU7ZWxzZXtKPURlO3ZhciBLPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoSj1FZSk7aWYoSiYmKEo9SihhLGQpKSl7bmUoZyxKLGMsZSk7YnJlYWsgYX1LJiZLKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoSz1oLl93cmFwcGVyU3RhdGUpJiZcbksuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmYmIoaCxcIm51bWJlclwiLGgudmFsdWUpfUs9ZD91ZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYobWUoSyl8fFwidHJ1ZVwiPT09Sy5jb250ZW50RWRpdGFibGUpUWU9SyxSZT1kLFNlPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6U2U9UmU9UWU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6VGU9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOlRlPSExO1VlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUGUpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpVZShnLGMsZSl9dmFyIFE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOkw9XCJvbkNvbXBvc2l0aW9uRW5kXCI7YnJlYWsgYjtcbmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOkw9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1MPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihMPVwib25Db21wb3NpdGlvbkVuZFwiKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7TCYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09TD9cIm9uQ29tcG9zaXRpb25FbmRcIj09PUwmJmllJiYoUT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLEs9b2UoZCxMKSwwPEsubGVuZ3RoJiYoTD1uZXcgTGQoTCxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OkwsbGlzdGVuZXJzOkt9KSxRP0wuZGF0YT1ROihRPWhlKGMpLG51bGwhPT1RJiYoTC5kYXRhPVEpKSkpO2lmKFE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9USl9c2UoZyxiKX0pfWZ1bmN0aW9uIGVmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1PYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChlZihhLGYsZSkpLGY9T2IoYSxiKSxudWxsIT1mJiZkLnB1c2goZWYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBnZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gaGYoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1PYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdChlZihjLGssaCkpKTplfHwoaz1PYihjLGYpLG51bGwhPWsmJmcucHVzaChlZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfWZ1bmN0aW9uIGpmKCl7fXZhciBrZj1udWxsLGxmPW51bGw7ZnVuY3Rpb24gbWYoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBvZj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxwZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gcWYoYSl7MT09PWEubm9kZVR5cGU/YS50ZXh0Q29udGVudD1cIlwiOjk9PT1hLm5vZGVUeXBlJiYoYT1hLmJvZHksbnVsbCE9YSYmKGEudGV4dENvbnRlbnQ9XCJcIikpfVxuZnVuY3Rpb24gcmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9ZnVuY3Rpb24gc2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRmPTA7ZnVuY3Rpb24gdWYoYSl7cmV0dXJueyQkdHlwZW9mOkdhLHRvU3RyaW5nOmEsdmFsdWVPZjphfX12YXIgdmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksd2Y9XCJfX3JlYWN0RmliZXIkXCIrdmYseGY9XCJfX3JlYWN0UHJvcHMkXCIrdmYsZmY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK3ZmLHlmPVwiX19yZWFjdEV2ZW50cyRcIit2ZjtcbmZ1bmN0aW9uIHdjKGEpe3ZhciBiPWFbd2ZdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW2ZmXXx8Y1t3Zl0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZihhKTtudWxsIT09YTspe2lmKGM9YVt3Zl0pcmV0dXJuIGM7YT1zZihhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2IoYSl7YT1hW3dmXXx8YVtmZl07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHVlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih5KDMzKSk7fWZ1bmN0aW9uIERiKGEpe3JldHVybiBhW3hmXXx8bnVsbH1cbmZ1bmN0aW9uICRlKGEpe3ZhciBiPWFbeWZdO3ZvaWQgMD09PWImJihiPWFbeWZdPW5ldyBTZXQpO3JldHVybiBifXZhciB6Zj1bXSxBZj0tMTtmdW5jdGlvbiBCZihhKXtyZXR1cm57Y3VycmVudDphfX1mdW5jdGlvbiBIKGEpezA+QWZ8fChhLmN1cnJlbnQ9emZbQWZdLHpmW0FmXT1udWxsLEFmLS0pfWZ1bmN0aW9uIEkoYSxiKXtBZisrO3pmW0FmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LE09QmYoQ2YpLE49QmYoITEpLERmPUNmO1xuZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBGZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEdmKCl7SChOKTtIKE0pfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihNLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih5KDE2OCkpO0koTSxiKTtJKE4sYyl9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHkoMTA4LFJhKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG0oe30sYyxkKX1mdW5jdGlvbiBKZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9TS5jdXJyZW50O0koTSxhKTtJKE4sTi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IoeSgxNjkpKTtjPyhhPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoTiksSChNKSxJKE0sYSkpOkgoTik7SShOLGMpfVxudmFyIExmPW51bGwsTWY9bnVsbCxOZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxPZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssUGY9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxRZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFJmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LFNmPXIudW5zdGFibGVfbm93LFRmPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsVWY9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxWZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFdmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksWGY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxZZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxaZj17fSwkZj12b2lkIDAhPT1SZj9SZjpmdW5jdGlvbigpe30sYWc9bnVsbCxiZz1udWxsLGNnPSExLGRnPVNmKCksTz0xRTQ+ZGc/U2Y6ZnVuY3Rpb24oKXtyZXR1cm4gU2YoKS1kZ307XG5mdW5jdGlvbiBlZygpe3N3aXRjaChUZigpKXtjYXNlIFVmOnJldHVybiA5OTtjYXNlIFZmOnJldHVybiA5ODtjYXNlIFdmOnJldHVybiA5NztjYXNlIFhmOnJldHVybiA5NjtjYXNlIFlmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBmZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gVWY7Y2FzZSA5ODpyZXR1cm4gVmY7Y2FzZSA5NzpyZXR1cm4gV2Y7Y2FzZSA5NjpyZXR1cm4gWGY7Y2FzZSA5NTpyZXR1cm4gWWY7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZ2coYSxiKXthPWZnKGEpO3JldHVybiBOZihhLGIpfWZ1bmN0aW9uIGhnKGEsYixjKXthPWZnKGEpO3JldHVybiBPZihhLGIsYyl9ZnVuY3Rpb24gaWcoKXtpZihudWxsIT09Ymcpe3ZhciBhPWJnO2JnPW51bGw7UGYoYSl9amcoKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWNnJiZudWxsIT09YWcpe2NnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPWFnO2dnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTthZz1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1hZyYmKGFnPWFnLnNsaWNlKGErMSkpLE9mKFVmLGlnKSxjO31maW5hbGx5e2NnPSExfX19dmFyIGtnPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIGxnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBtZz1CZihudWxsKSxuZz1udWxsLG9nPW51bGwscGc9bnVsbDtmdW5jdGlvbiBxZygpe3BnPW9nPW5nPW51bGx9XG5mdW5jdGlvbiByZyhhKXt2YXIgYj1tZy5jdXJyZW50O0gobWcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gc2coYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoKGEuY2hpbGRMYW5lcyZiKT09PWIpaWYobnVsbD09PWN8fChjLmNoaWxkTGFuZXMmYik9PT1iKWJyZWFrO2Vsc2UgYy5jaGlsZExhbmVzfD1iO2Vsc2UgYS5jaGlsZExhbmVzfD1iLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKTthPWEucmV0dXJufX1mdW5jdGlvbiB0ZyhhLGIpe25nPWE7cGc9b2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJih1Zz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiB2ZyhhLGIpe2lmKHBnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilwZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09b2cpe2lmKG51bGw9PT1uZyl0aHJvdyBFcnJvcih5KDMwOCkpO29nPWI7bmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBvZz1vZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgd2c9ITE7ZnVuY3Rpb24geGcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24geWcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gemcoYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gQWcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiBCZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gQ2coYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt3Zz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBuPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXtuPW4udXBkYXRlUXVldWU7dmFyIEE9bi5sYXN0QmFzZVVwZGF0ZTtBIT09ZyYmKG51bGw9PT1BP24uZmlyc3RCYXNlVXBkYXRlPWw6QS5uZXh0PWwsbi5sYXN0QmFzZVVwZGF0ZT1rKX19aWYobnVsbCE9PWYpe0E9ZS5iYXNlU3RhdGU7Zz0wO249bD1rPW51bGw7ZG97aD1mLmxhbmU7dmFyIHA9Zi5ldmVudFRpbWU7aWYoKGQmaCk9PT1oKXtudWxsIT09biYmKG49bi5uZXh0PXtldmVudFRpbWU6cCxsYW5lOjAsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgQz1hLHg9ZjtoPWI7cD1jO3N3aXRjaCh4LnRhZyl7Y2FzZSAxOkM9eC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDKXtBPUMuY2FsbChwLEEsaCk7YnJlYWsgYX1BPUM7YnJlYWsgYTtjYXNlIDM6Qy5mbGFncz1DLmZsYWdzJi00MDk3fDY0O2Nhc2UgMDpDPXgucGF5bG9hZDtoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDP0MuY2FsbChwLEEsaCk6QztpZihudWxsPT09aHx8dm9pZCAwPT09aClicmVhayBhO0E9bSh7fSxBLGgpO2JyZWFrIGE7Y2FzZSAyOndnPSEwfX1udWxsIT09Zi5jYWxsYmFjayYmKGEuZmxhZ3N8PTMyLGg9ZS5lZmZlY3RzLG51bGw9PT1oP2UuZWZmZWN0cz1bZl06aC5wdXNoKGYpKX1lbHNlIHA9e2V2ZW50VGltZTpwLGxhbmU6aCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1uPyhsPW49cCxrPUEpOm49bi5uZXh0PXAsZ3w9aDtmPWYubmV4dDtpZihudWxsPT09XG5mKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIGY9aC5uZXh0LGgubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9aCxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW4mJihrPUEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW47RGd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1BfX1mdW5jdGlvbiBFZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IoeSgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBGZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIEdnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjptKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBLZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9aYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUhnKCksZD1JZyhhKSxlPXpnKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9XG5iKTtBZyhhLGUpO0pnKGEsZCxjKX19O2Z1bmN0aW9uIExnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUplKGMsZCl8fCFKZShlLGYpOiEwfVxuZnVuY3Rpb24gTWcoYSxiLGMpe3ZhciBkPSExLGU9Q2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9dmcoZik6KGU9RmYoYik/RGY6TS5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUtnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gT2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1GZzt4ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXZnKGYpOihmPUZmKGIpP0RmOk0uY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Q2coYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEdnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLENnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQpfXZhciBQZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHkoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUZnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHkoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHkoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBSZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih5KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO31cbmZ1bmN0aW9uIFNnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZmxhZ3M9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9VGcoYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3M9MixcbmMpOmQ7Yi5mbGFncz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFncz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VWcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVZnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuV2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG4oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVhnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VWcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGM9VmcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHRhOnJldHVybiBiPVdnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihQZyhiKXx8TGEoYikpcmV0dXJuIGI9WGcoYixcbmEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtSZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHAoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT11YT9uKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgdGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoUGcoYyl8fExhKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm4oYSxiLGMsZCxudWxsKTtSZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8XG5udWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09dWE/bihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgdGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoUGcoZCl8fExhKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG4oYixhLGQsZSxudWxsKTtSZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLHU9Zyx6PWc9MCxxPW51bGw7bnVsbCE9PXUmJno8aC5sZW5ndGg7eisrKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciBuPXAoZSx1LGhbel0sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09XG5uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcseik7bnVsbD09PXQ/bD1uOnQuc2libGluZz1uO3Q9bjt1PXF9aWYoej09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDt6PGgubGVuZ3RoO3orKyl1PUEoZSxoW3pdLGspLG51bGwhPT11JiYoZz1mKHUsZyx6KSxudWxsPT09dD9sPXU6dC5zaWJsaW5nPXUsdD11KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7ejxoLmxlbmd0aDt6KyspcT1DKHUsZSx6LGhbel0sayksbnVsbCE9PXEmJihhJiZudWxsIT09cS5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1xLmtleT96OnEua2V5KSxnPWYocSxnLHopLG51bGw9PT10P2w9cTp0LnNpYmxpbmc9cSx0PXEpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXt2YXIgbD1MYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih5KDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PVxuaCl0aHJvdyBFcnJvcih5KDE1MSkpO2Zvcih2YXIgdD1sPW51bGwsdT1nLHo9Zz0wLHE9bnVsbCxuPWgubmV4dCgpO251bGwhPT11JiYhbi5kb25lO3orKyxuPWgubmV4dCgpKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciB3PXAoZSx1LG4udmFsdWUsayk7aWYobnVsbD09PXcpe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSx1KTtnPWYodyxnLHopO251bGw9PT10P2w9dzp0LnNpYmxpbmc9dzt0PXc7dT1xfWlmKG4uZG9uZSlyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUModSxlLHosbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmXG51LmRlbGV0ZShudWxsPT09bi5rZXk/ejpuLmtleSksZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT11YSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBzYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PXVhKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7XG5kPWUoayxmLnByb3BzKTtkLnJlZj1RZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXVhPyhkPVhnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1RZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgdGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9XG5XZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1VZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihQZyhmKSlyZXR1cm4geChhLGQsZixoKTtpZihMYShmKSlyZXR1cm4gdyhhLGQsZixoKTtsJiZSZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAyMjpjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRocm93IEVycm9yKHkoMTUyLFJhKGEudHlwZSl8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFlnPVNnKCEwKSxaZz1TZyghMSksJGc9e30sYWg9QmYoJGcpLGJoPUJmKCRnKSxjaD1CZigkZyk7XG5mdW5jdGlvbiBkaChhKXtpZihhPT09JGcpdGhyb3cgRXJyb3IoeSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBlaChhLGIpe0koY2gsYik7SShiaCxhKTtJKGFoLCRnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1tYihiLGEpfUgoYWgpO0koYWgsYil9ZnVuY3Rpb24gZmgoKXtIKGFoKTtIKGJoKTtIKGNoKX1mdW5jdGlvbiBnaChhKXtkaChjaC5jdXJyZW50KTt2YXIgYj1kaChhaC5jdXJyZW50KTt2YXIgYz1tYihiLGEudHlwZSk7YiE9PWMmJihJKGJoLGEpLEkoYWgsYykpfWZ1bmN0aW9uIGhoKGEpe2JoLmN1cnJlbnQ9PT1hJiYoSChhaCksSChiaCkpfXZhciBQPUJmKDApO1xuZnVuY3Rpb24gaWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgamg9bnVsbCxraD1udWxsLGxoPSExO1xuZnVuY3Rpb24gbWgoYSxiKXt2YXIgYz1uaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5mbGFncz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gb2goYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHBoKGEpe2lmKGxoKXt2YXIgYj1raDtpZihiKXt2YXIgYz1iO2lmKCFvaChhLGIpKXtiPXJmKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhb2goYSxiKSl7YS5mbGFncz1hLmZsYWdzJi0xMDI1fDI7bGg9ITE7amg9YTtyZXR1cm59bWgoamgsYyl9amg9YTtraD1yZihiLmZpcnN0Q2hpbGQpfWVsc2UgYS5mbGFncz1hLmZsYWdzJi0xMDI1fDIsbGg9ITEsamg9YX19ZnVuY3Rpb24gcWgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO2poPWF9XG5mdW5jdGlvbiByaChhKXtpZihhIT09amgpcmV0dXJuITE7aWYoIWxoKXJldHVybiBxaChhKSxsaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW5mKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1raDtiOyltaChhLGIpLGI9cmYoYi5uZXh0U2libGluZyk7cWgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih5KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXtraD1yZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfWtoPW51bGx9fWVsc2Uga2g9amg/cmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBzaCgpe2toPWpoPW51bGw7bGg9ITF9dmFyIHRoPVtdO2Z1bmN0aW9uIHVoKCl7Zm9yKHZhciBhPTA7YTx0aC5sZW5ndGg7YSsrKXRoW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7dGgubGVuZ3RoPTB9dmFyIHZoPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsd2g9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcseGg9MCxSPW51bGwsUz1udWxsLFQ9bnVsbCx5aD0hMSx6aD0hMTtmdW5jdGlvbiBBaCgpe3Rocm93IEVycm9yKHkoMzIxKSk7fWZ1bmN0aW9uIEJoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBDaChhLGIsYyxkLGUsZil7eGg9ZjtSPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDt2aC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP0RoOkVoO2E9YyhkLGUpO2lmKHpoKXtmPTA7ZG97emg9ITE7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih5KDMwMSkpO2YrPTE7VD1TPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO3ZoLmN1cnJlbnQ9Rmg7YT1jKGQsZSl9d2hpbGUoemgpfXZoLmN1cnJlbnQ9R2g7Yj1udWxsIT09UyYmbnVsbCE9PVMubmV4dDt4aD0wO1Q9Uz1SPW51bGw7eWg9ITE7aWYoYil0aHJvdyBFcnJvcih5KDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIEhoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hO3JldHVybiBUfVxuZnVuY3Rpb24gSWgoKXtpZihudWxsPT09Uyl7dmFyIGE9Ui5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Uy5uZXh0O3ZhciBiPW51bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZTpULm5leHQ7aWYobnVsbCE9PWIpVD1iLFM9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHkoMzEwKSk7Uz1hO2E9e21lbW9pemVkU3RhdGU6Uy5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpTLmJhc2VTdGF0ZSxiYXNlUXVldWU6Uy5iYXNlUXVldWUscXVldWU6Uy5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YX1yZXR1cm4gVH1mdW5jdGlvbiBKaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIEtoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9UyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmxhbmU7aWYoKHhoJmwpPT09bCludWxsIT09aCYmKGg9aC5uZXh0PXtsYW5lOjAsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtlbHNle3ZhciBuPXtsYW5lOmwsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixcbmVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1uLGY9ZCk6aD1oLm5leHQ9bjtSLmxhbmVzfD1sO0RnfD1sfWs9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBMaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIE1oKGEsYixjKXt2YXIgZD1iLl9nZXRWZXJzaW9uO2Q9ZChiLl9zb3VyY2UpO3ZhciBlPWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk7aWYobnVsbCE9PWUpYT1lPT09ZDtlbHNlIGlmKGE9YS5tdXRhYmxlUmVhZExhbmVzLGE9KHhoJmEpPT09YSliLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWQsdGgucHVzaChiKTtpZihhKXJldHVybiBjKGIuX3NvdXJjZSk7dGgucHVzaChiKTt0aHJvdyBFcnJvcih5KDM1MCkpO31cbmZ1bmN0aW9uIE5oKGEsYixjLGQpe3ZhciBlPVU7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IoeSgzNDkpKTt2YXIgZj1iLl9nZXRWZXJzaW9uLGc9ZihiLl9zb3VyY2UpLGg9dmguY3VycmVudCxrPWgudXNlU3RhdGUoZnVuY3Rpb24oKXtyZXR1cm4gTWgoZSxiLGMpfSksbD1rWzFdLG49a1swXTtrPVQ7dmFyIEE9YS5tZW1vaXplZFN0YXRlLHA9QS5yZWZzLEM9cC5nZXRTbmFwc2hvdCx4PUEuc291cmNlO0E9QS5zdWJzY3JpYmU7dmFyIHc9UjthLm1lbW9pemVkU3RhdGU9e3JlZnM6cCxzb3VyY2U6YixzdWJzY3JpYmU6ZH07aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtwLmdldFNuYXBzaG90PWM7cC5zZXRTbmFwc2hvdD1sO3ZhciBhPWYoYi5fc291cmNlKTtpZighSGUoZyxhKSl7YT1jKGIuX3NvdXJjZSk7SGUobixhKXx8KGwoYSksYT1JZyh3KSxlLm11dGFibGVSZWFkTGFuZXN8PWEmZS5wZW5kaW5nTGFuZXMpO2E9ZS5tdXRhYmxlUmVhZExhbmVzO2UuZW50YW5nbGVkTGFuZXN8PWE7Zm9yKHZhciBkPVxuZS5lbnRhbmdsZW1lbnRzLGg9YTswPGg7KXt2YXIgaz0zMS1WYyhoKSx2PTE8PGs7ZFtrXXw9YTtoJj1+dn19fSxbYyxiLGRdKTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3JldHVybiBkKGIuX3NvdXJjZSxmdW5jdGlvbigpe3ZhciBhPXAuZ2V0U25hcHNob3QsYz1wLnNldFNuYXBzaG90O3RyeXtjKGEoYi5fc291cmNlKSk7dmFyIGQ9SWcodyk7ZS5tdXRhYmxlUmVhZExhbmVzfD1kJmUucGVuZGluZ0xhbmVzfWNhdGNoKHEpe2MoZnVuY3Rpb24oKXt0aHJvdyBxO30pfX0pfSxbYixkXSk7SGUoQyxjKSYmSGUoeCxiKSYmSGUoQSxkKXx8KGE9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6bn0sYS5kaXNwYXRjaD1sPU9oLmJpbmQobnVsbCxSLGEpLGsucXVldWU9YSxrLmJhc2VRdWV1ZT1udWxsLG49TWgoZSxiLGMpLGsubWVtb2l6ZWRTdGF0ZT1rLmJhc2VTdGF0ZT1uKTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFBoKGEsYixjKXt2YXIgZD1JaCgpO3JldHVybiBOaChkLGEsYixjKX1mdW5jdGlvbiBRaChhKXt2YXIgYj1IaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIFJoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPVIudXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sUi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBTaChhKXt2YXIgYj1IaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfWZ1bmN0aW9uIFRoKCl7cmV0dXJuIEloKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBVaChhLGIsYyxkKXt2YXIgZT1IaCgpO1IuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1JaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1TKXt2YXIgZz1TLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkJoKGQsZy5kZXBzKSl7UmgoYixjLGYsZCk7cmV0dXJufX1SLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIFdoKGEsYil7cmV0dXJuIFVoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDQsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBWaCg0LDIsYSxiKX1mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fVxuZnVuY3Rpb24gJGgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDIsWmguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gYWkoKXt9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gY2koYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBkaShhLGIpe3ZhciBjPWVnKCk7Z2coOTg+Yz85ODpjLGZ1bmN0aW9uKCl7YSghMCl9KTtnZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYz13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7YSghMSksYigpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1jfX0pfVxuZnVuY3Rpb24gT2goYSxiLGMpe3ZhciBkPUhnKCksZT1JZyhhKSxmPXtsYW5lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLnBlbmRpbmc7bnVsbD09PWc/Zi5uZXh0PWY6KGYubmV4dD1nLm5leHQsZy5uZXh0PWYpO2IucGVuZGluZz1mO2c9YS5hbHRlcm5hdGU7aWYoYT09PVJ8fG51bGwhPT1nJiZnPT09Uil6aD15aD0hMDtlbHNle2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWd8fDA9PT1nLmxhbmVzKSYmKGc9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1nKSl0cnl7dmFyIGg9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWcoaCxjKTtmLmVhZ2VyUmVkdWNlcj1nO2YuZWFnZXJTdGF0ZT1rO2lmKEhlKGssaCkpcmV0dXJufWNhdGNoKGwpe31maW5hbGx5e31KZyhhLGUsZCl9fVxudmFyIEdoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpBaCx1c2VDb250ZXh0OkFoLHVzZUVmZmVjdDpBaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkFoLHVzZUxheW91dEVmZmVjdDpBaCx1c2VNZW1vOkFoLHVzZVJlZHVjZXI6QWgsdXNlUmVmOkFoLHVzZVN0YXRlOkFoLHVzZURlYnVnVmFsdWU6QWgsdXNlRGVmZXJyZWRWYWx1ZTpBaCx1c2VUcmFuc2l0aW9uOkFoLHVzZU11dGFibGVTb3VyY2U6QWgsdXNlT3BhcXVlSWRlbnRpZmllcjpBaCx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LERoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe0hoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OldoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBVaCg0LDIsWmguYmluZChudWxsLFxuYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFVoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9SGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6U2gsdXNlU3RhdGU6UWgsdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVFoKGEpLGM9YlswXSxkPWJbMV07V2goZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO1xud2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVFoKCExKSxiPWFbMF07YT1kaS5iaW5kKG51bGwsYVsxXSk7U2goYSk7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7ZC5tZW1vaXplZFN0YXRlPXtyZWZzOntnZXRTbmFwc2hvdDpiLHNldFNuYXBzaG90Om51bGx9LHNvdXJjZTphLHN1YnNjcmliZTpjfTtyZXR1cm4gTmgoZCxhLGIsYyl9LHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtpZihsaCl7dmFyIGE9ITEsYj11ZihmdW5jdGlvbigpe2F8fChhPSEwLGMoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpKTt0aHJvdyBFcnJvcih5KDM1NSkpO30pLGM9UWgoYilbMV07MD09PShSLm1vZGUmMikmJihSLmZsYWdzfD01MTYsUmgoNSxmdW5jdGlvbigpe2MoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpfSxcbnZvaWQgMCxudWxsKSk7cmV0dXJuIGJ9Yj1cInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KTtRaChiKTtyZXR1cm4gYn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxFaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOktoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBLaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1LaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUtoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBLaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRmg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpMaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9TGgoSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1MaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LGVpPXJhLlJlYWN0Q3VycmVudE93bmVyLHVnPSExO2Z1bmN0aW9uIGZpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WmcoYixudWxsLGMsZCk6WWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZ2koYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3RnKGIsZSk7ZD1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWppKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGtpKGEsYixnLGQsZSxmKTthPVZnKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZigwPT09KGUmZikmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6SmUsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gaGkoYSxiLGYpO2IuZmxhZ3N8PTE7YT1UZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGtpKGEsYixjLGQsZSxmKXtpZihudWxsIT09YSYmSmUoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmKWlmKHVnPSExLDAhPT0oZiZlKSkwIT09KGEuZmxhZ3MmMTYzODQpJiYodWc9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxoaShhLGIsZik7cmV0dXJuIGxpKGEsYixjLGQsZil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZXx8XCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsYyk7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixudWxsIT09Zj9mLmJhc2VMYW5lczpjKTtlbHNlIHJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmF9LG5pKGIsYSksbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxuaShiLGQpO2ZpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gb2koYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9MTI4fWZ1bmN0aW9uIGxpKGEsYixjLGQsZSl7dmFyIGY9RmYoYyk/RGY6TS5jdXJyZW50O2Y9RWYoYixmKTt0ZyhiLGUpO2M9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcGkoYSxiLGMsZCxlKXtpZihGZihjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3RnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLE1nKGIsYyxkKSxPZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD12ZyhsKToobD1GZihjKT9EZjpNLmN1cnJlbnQsbD1FZihiLGwpKTt2YXIgbj1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTmcoYixnLGQsbCk7d2c9ITE7dmFyIHA9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8cCE9PWt8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuJiYoR2coYixjLG4sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXdnfHxMZyhiLGMsaCxkLHAsayxsKSk/KEF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTt5ZyhhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmxnKGIudHlwZSxoKTtnLnByb3BzPWw7QT1iLnBlbmRpbmdQcm9wcztwPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPXZnKGspOihrPUZmKGMpP0RmOk0uY3VycmVudCxrPUVmKGIsaykpO3ZhciBDPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDfHxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09QXx8cCE9PWspJiZOZyhiLGcsZCxrKTt3Zz0hMTtwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2ghPT1BfHxwIT09eHx8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIEMmJihHZyhiLGMsQyxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKGw9d2d8fExnKGIsYyxsLGQscCx4LGspKT8obnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksZD0hMSl9cmV0dXJuIHFpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIHFpKGEsYixjLGQsZSxmKXtvaShhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLGhpKGEsYixmKTtkPWIuc3RhdGVOb2RlO2VpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1ZZyhiLG51bGwsaCxmKSk6ZmkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiByaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTtlaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgc2k9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeUxhbmU6MH07XG5mdW5jdGlvbiB0aShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1QLmN1cnJlbnQsZj0hMSxnOyhnPTAhPT0oYi5mbGFncyY2NCkpfHwoZz1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2c/KGY9ITAsYi5mbGFncyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZC5mYWxsYmFja3x8ITA9PT1kLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZXw9MSk7SShQLGUmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWQuZmFsbGJhY2smJnBoKGIpO2E9ZC5jaGlsZHJlbjtlPWQuZmFsbGJhY2s7aWYoZilyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxiLm1lbW9pemVkU3RhdGU9c2ksYTtpZihcIm51bWJlclwiPT09dHlwZW9mIGQudW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSlyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxcbmIubWVtb2l6ZWRTdGF0ZT1zaSxiLmxhbmVzPTMzNTU0NDMyLGE7Yz12aSh7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjphfSxiLm1vZGUsYyxudWxsKTtjLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWN9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31pZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9Olxue2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9ZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9YS5tb2RlLGY9YS5jaGlsZDtiPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Yn07MD09PShlJjIpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9Yik6Zj12aShiLGUsMCxudWxsKTtjPVhnKGMsZSxkLG51bGwpO2YucmV0dXJuPWE7Yy5yZXR1cm49YTtmLnNpYmxpbmc9YzthLmNoaWxkPWY7cmV0dXJuIGN9XG5mdW5jdGlvbiB4aShhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO2E9ZS5zaWJsaW5nO2M9VGcoZSx7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpjfSk7MD09PShiLm1vZGUmMikmJihjLmxhbmVzPWQpO2MucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihhLm5leHRFZmZlY3Q9bnVsbCxhLmZsYWdzPTgsYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YSk7cmV0dXJuIGIuY2hpbGQ9Y31cbmZ1bmN0aW9uIHdpKGEsYixjLGQsZSl7dmFyIGY9Yi5tb2RlLGc9YS5jaGlsZDthPWcuc2libGluZzt2YXIgaD17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmN9OzA9PT0oZiYyKSYmYi5jaGlsZCE9PWc/KGM9Yi5jaGlsZCxjLmNoaWxkTGFuZXM9MCxjLnBlbmRpbmdQcm9wcz1oLGc9Yy5sYXN0RWZmZWN0LG51bGwhPT1nPyhiLmZpcnN0RWZmZWN0PWMuZmlyc3RFZmZlY3QsYi5sYXN0RWZmZWN0PWcsZy5uZXh0RWZmZWN0PW51bGwpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGwpOmM9VGcoZyxoKTtudWxsIT09YT9kPVRnKGEsZCk6KGQ9WGcoZCxmLGUsbnVsbCksZC5mbGFnc3w9Mik7ZC5yZXR1cm49YjtjLnJldHVybj1iO2Muc2libGluZz1kO2IuY2hpbGQ9YztyZXR1cm4gZH1mdW5jdGlvbiB5aShhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtzZyhhLnJldHVybixiKX1cbmZ1bmN0aW9uIHppKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBBaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO2ZpKGEsYixkLmNoaWxkcmVuLGMpO2Q9UC5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ5aShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZyl5aShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKFAsZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWloKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7emkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXppKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp6aShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO0RnfD1iLmxhbmVzO2lmKDAhPT0oYyZiLmNoaWxkTGFuZXMpKXtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IoeSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9VGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVRnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9cmV0dXJuIG51bGx9dmFyIEJpLENpLERpLEVpO1xuQmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0NpPWZ1bmN0aW9uKCl7fTtcbkRpPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtkaChhaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxlKTtkPWViKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1tKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfXZiKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09XG5sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fFxuKGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLGMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZHKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUdhP2sudG9TdHJpbmcoKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsXG5jKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07ZnVuY3Rpb24gRmkoYSxiKXtpZighbGgpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKXJoKGIpP2IuZmxhZ3N8PTQ6ZC5oeWRyYXRlfHwoYi5mbGFnc3w9MjU2KTtDaShiKTtyZXR1cm4gbnVsbDtjYXNlIDU6aGgoYik7dmFyIGU9ZGgoY2guY3VycmVudCk7Yz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKURpKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PVxuYi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtyZXR1cm4gbnVsbH1hPWRoKGFoLmN1cnJlbnQpO2lmKHJoKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW3dmXT1iO2RbeGZdPWY7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsZCk7RyhcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxYZS5sZW5ndGg7YSsrKUcoWGVbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGQpO0coXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRyhcImludmFsaWRcIixkKX12YihjLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilmLmhhc093blByb3BlcnR5KGcpJiYoZT1mW2ddLFwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBlP2QudGV4dENvbnRlbnQhPT1lJiYoYT1bXCJjaGlsZHJlblwiLGVdKTpcIm51bWJlclwiPT09dHlwZW9mIGUmJmQudGV4dENvbnRlbnQhPT1cIlwiK2UmJihhPVtcImNoaWxkcmVuXCIsXCJcIitlXSk6Y2EuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWUmJlwib25TY3JvbGxcIj09PWcmJkcoXCJzY3JvbGxcIixkKSk7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2NiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9XG5qZil9ZD1hO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDthPT09a2IuaHRtbCYmKGE9bGIoYykpO2E9PT1rYi5odG1sP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVt3Zl09YjthW3hmXT1kO0JpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXdiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsYSk7RyhcImNsb3NlXCIsYSk7XG5lPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8WGUubGVuZ3RoO2UrKylHKFhlW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGEpO0coXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9XG5nYihhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dmIoYyxlKTt2YXIgaD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3RiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZvYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Y3x8XCJcIiE9PWspJiZwYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmcGIoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihjYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZHKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmcWEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtjYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfW1mKGMsZCkmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlFaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtcbmM9ZGgoY2guY3VycmVudCk7ZGgoYWguY3VycmVudCk7cmgoYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFt3Zl09YixkLm5vZGVWYWx1ZSE9PWMmJihiLmZsYWdzfD00KSk6KGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW3dmXT1iLGIuc3RhdGVOb2RlPWQpfXJldHVybiBudWxsO2Nhc2UgMTM6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2M9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZyaChiKTpjPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoZCYmIWMmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShQLmN1cnJlbnQmMSkpMD09PVYmJihWPTMpO2Vsc2V7aWYoMD09PVZ8fDM9PT1WKVY9XG40O251bGw9PT1VfHwwPT09KERnJjEzNDIxNzcyNykmJjA9PT0oSGkmMTM0MjE3NzI3KXx8SWkoVSxXKX1pZihkfHxjKWIuZmxhZ3N8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLENpKGIpLG51bGw9PT1hJiZjZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMTk6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtmPTAhPT0oYi5mbGFncyY2NCk7Zz1kLnJlbmRlcmluZztpZihudWxsPT09ZylpZihmKUZpKGQsITEpO2Vsc2V7aWYoMCE9PVZ8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPWloKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD02NDtGaShkLCExKTtmPWcudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5mbGFnc3w9NCk7XG5udWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTIsZi5uZXh0RWZmZWN0PW51bGwsZi5maXJzdEVmZmVjdD1udWxsLGYubGFzdEVmZmVjdD1udWxsLGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxcbmYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7SShQLFAuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9YS5zaWJsaW5nfW51bGwhPT1kLnRhaWwmJk8oKT5KaSYmKGIuZmxhZ3N8PTY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMil9ZWxzZXtpZighZilpZihhPWloKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD02NCxmPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxGaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhbGgpcmV0dXJuIGI9Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMipPKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+SmkmJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9XG42NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpO2QuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxkLmxhc3Q9Zyl9cmV0dXJuIG51bGwhPT1kLnRhaWw/KGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPU8oKSxjLnNpYmxpbmc9bnVsbCxiPVAuY3VycmVudCxJKFAsZj9iJjF8MjpiJjEpLGMpOm51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09KG51bGwhPT1iLm1lbW9pemVkU3RhdGUpJiZcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCIhPT1kLm1vZGUmJihiLmZsYWdzfD00KSxudWxsfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gTGkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmYoYS50eXBlKSYmR2YoKTt2YXIgYj1hLmZsYWdzO3JldHVybiBiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2I9YS5mbGFncztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHkoMjg1KSk7YS5mbGFncz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gaGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKFApLGI9YS5mbGFncyxiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoUCksbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksbnVsbDtjYXNlIDEwOnJldHVybiByZyhhKSxudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UWEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmV9fWZ1bmN0aW9uIE5pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBQaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtRaXx8KFFpPSEwLFJpPWQpO05pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gU2koYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe05pKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1UaT9UaT1uZXcgU2V0KFt0aGlzXSk6VGkuYWRkKHRoaXMpLE5pKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfXZhciBVaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtcbmZ1bmN0aW9uIFZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1dpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBYaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5mbGFncyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmxnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpiLmZsYWdzJjI1NiYmcWYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gWWkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOmI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve2lmKDM9PT0oYS50YWcmMykpe3ZhciBkPWEuY3JlYXRlO2EuZGVzdHJveT1kKCl9YT1hLm5leHR9d2hpbGUoYSE9PWIpfWI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve3ZhciBlPWE7ZD1lLm5leHQ7ZT1lLnRhZzswIT09KGUmNCkmJjAhPT0oZSYxKSYmKFppKGMsYSksJGkoYyxhKSk7YT1kfXdoaWxlKGEhPT1iKX1yZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7Yy5mbGFncyY0JiYobnVsbD09PWI/YS5jb21wb25lbnREaWRNb3VudCgpOihkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmxnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpLGEuY29tcG9uZW50RGlkVXBkYXRlKGQsXG5iLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSkpKTtiPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkVnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9RWcoYyxiLGEpfXJldHVybjtjYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5mbGFncyY0JiZtZihjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJkNjKGMpKSkpO1xucmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6Y2FzZSAyMzpjYXNlIDI0OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIGFqKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQ9ZC5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5zZXRQcm9wZXJ0eT9kLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmQuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zYihcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigoMjMhPT1jLnRhZyYmMjQhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8Yz09PWEpJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PVxuYSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGJqKGEsYil7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7TWYub25Db21taXRGaWJlclVubW91bnQoTGYsYil9Y2F0Y2goZil7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgYz1hPWEubmV4dDtkb3t2YXIgZD1jLGU9ZC5kZXN0cm95O2Q9ZC50YWc7aWYodm9pZCAwIT09ZSlpZigwIT09KGQmNCkpWmkoYixjKTtlbHNle2Q9Yjt0cnl7ZSgpfWNhdGNoKGYpe1dpKGQsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1hKX1icmVhaztjYXNlIDE6VmkoYik7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe1dpKGIsXG5mKX1icmVhaztjYXNlIDU6VmkoYik7YnJlYWs7Y2FzZSA0OmNqKGEsYil9fWZ1bmN0aW9uIGRqKGEpe2EuYWx0ZXJuYXRlPW51bGw7YS5jaGlsZD1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5yZXR1cm49bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gZWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBmaihhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihlaihiKSlicmVhayBhO2I9Yi5yZXR1cm59dGhyb3cgRXJyb3IoeSgxNjApKTt9dmFyIGM9YjtiPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgxNjEpKTt9Yy5mbGFncyYxNiYmKHBiKGIsXCJcIiksYy5mbGFncyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGVqKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZmxhZ3MmMiljb250aW51ZSBiO2lmKG51bGw9PT1cbmMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmZsYWdzJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/Z2ooYSxjLGIpOmhqKGEsYyxiKX1cbmZ1bmN0aW9uIGdqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1qZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihnaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGhqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoaGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOyloaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBjaihhLGIpe2Zvcih2YXIgYz1iLGQ9ITEsZSxmOzspe2lmKCFkKXtkPWMucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih5KDE2MCkpO2U9ZC5zdGF0ZU5vZGU7c3dpdGNoKGQudGFnKXtjYXNlIDU6Zj0hMTticmVhayBhO2Nhc2UgMzplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGE7Y2FzZSA0OmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1kPWQucmV0dXJufWQ9ITB9aWYoNT09PWMudGFnfHw2PT09Yy50YWcpe2E6Zm9yKHZhciBnPWEsaD1jLGs9aDs7KWlmKGJqKGcsayksbnVsbCE9PWsuY2hpbGQmJjQhPT1rLnRhZylrLmNoaWxkLnJldHVybj1rLGs9ay5jaGlsZDtlbHNle2lmKGs9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09ay5zaWJsaW5nOyl7aWYobnVsbD09PWsucmV0dXJufHxrLnJldHVybj09PWgpYnJlYWsgYTtrPWsucmV0dXJufWsuc2libGluZy5yZXR1cm49ay5yZXR1cm47az1rLnNpYmxpbmd9Zj8oZz1lLGg9Yy5zdGF0ZU5vZGUsXG44PT09Zy5ub2RlVHlwZT9nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaCk6Zy5yZW1vdmVDaGlsZChoKSk6ZS5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yy50YWcpe2lmKG51bGwhPT1jLmNoaWxkKXtlPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zj0hMDtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihiaihhLGMpLG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybjs0PT09Yy50YWcmJihkPSExKX1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGlqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjp2YXIgYz1iLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2RvIDM9PT0oZC50YWcmMykmJihhPWQuZGVzdHJveSxkLmRlc3Ryb3k9dm9pZCAwLHZvaWQgMCE9PWEmJmEoKSksZD1kLm5leHQ7d2hpbGUoZCE9PWMpfXJldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe2Q9Yi5tZW1vaXplZFByb3BzO3ZhciBlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW3hmXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiYkYShjLGQpO3diKGEsZSk7Yj13YihhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz1cbjIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz90YihjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/b2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP3BiKGMsaCk6cWEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOmFiKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9mYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9XG5iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpjPWIuc3RhdGVOb2RlO2MuaHlkcmF0ZSYmKGMuaHlkcmF0ZT0hMSxDYyhjLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsIT09Yi5tZW1vaXplZFN0YXRlJiYoamo9TygpLGFqKGIuY2hpbGQsITApKTtraihiKTtyZXR1cm47Y2FzZSAxOTpraihiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm47Y2FzZSAyMzpjYXNlIDI0OmFqKGIsbnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSk7cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fWZ1bmN0aW9uIGtqKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IFVpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9bGouYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBtaihhLGIpe3JldHVybiBudWxsIT09YSYmKGE9YS5tZW1vaXplZFN0YXRlLG51bGw9PT1hfHxudWxsIT09YS5kZWh5ZHJhdGVkKT8oYj1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWImJm51bGw9PT1iLmRlaHlkcmF0ZWQpOiExfXZhciBuaj1NYXRoLmNlaWwsb2o9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixwaj1yYS5SZWFjdEN1cnJlbnRPd25lcixYPTAsVT1udWxsLFk9bnVsbCxXPTAscWo9MCxyaj1CZigwKSxWPTAsc2o9bnVsbCx0aj0wLERnPTAsSGk9MCx1aj0wLHZqPW51bGwsamo9MCxKaT1JbmZpbml0eTtmdW5jdGlvbiB3aigpe0ppPU8oKSs1MDB9dmFyIFo9bnVsbCxRaT0hMSxSaT1udWxsLFRpPW51bGwseGo9ITEseWo9bnVsbCx6aj05MCxBaj1bXSxCaj1bXSxDaj1udWxsLERqPTAsRWo9bnVsbCxGaj0tMSxHaj0wLEhqPTAsSWo9bnVsbCxKaj0hMTtmdW5jdGlvbiBIZygpe3JldHVybiAwIT09KFgmNDgpP08oKTotMSE9PUZqP0ZqOkZqPU8oKX1cbmZ1bmN0aW9uIElnKGEpe2E9YS5tb2RlO2lmKDA9PT0oYSYyKSlyZXR1cm4gMTtpZigwPT09KGEmNCkpcmV0dXJuIDk5PT09ZWcoKT8xOjI7MD09PUdqJiYoR2o9dGopO2lmKDAhPT1rZy50cmFuc2l0aW9uKXswIT09SGomJihIaj1udWxsIT09dmo/dmoucGVuZGluZ0xhbmVzOjApO2E9R2o7dmFyIGI9NDE4NjExMiZ+SGo7YiY9LWI7MD09PWImJihhPTQxODYxMTImfmEsYj1hJi1hLDA9PT1iJiYoYj04MTkyKSk7cmV0dXJuIGJ9YT1lZygpOzAhPT0oWCY0KSYmOTg9PT1hP2E9WGMoMTIsR2opOihhPVNjKGEpLGE9WGMoYSxHaikpO3JldHVybiBhfVxuZnVuY3Rpb24gSmcoYSxiLGMpe2lmKDUwPERqKXRocm93IERqPTAsRWo9bnVsbCxFcnJvcih5KDE4NSkpO2E9S2ooYSxiKTtpZihudWxsPT09YSlyZXR1cm4gbnVsbDskYyhhLGIsYyk7YT09PVUmJihIaXw9Yiw0PT09ViYmSWkoYSxXKSk7dmFyIGQ9ZWcoKTsxPT09Yj8wIT09KFgmOCkmJjA9PT0oWCY0OCk/TGooYSk6KE1qKGEsYyksMD09PVgmJih3aigpLGlnKCkpKTooMD09PShYJjQpfHw5OCE9PWQmJjk5IT09ZHx8KG51bGw9PT1Daj9Daj1uZXcgU2V0KFthXSk6Q2ouYWRkKGEpKSxNaihhLGMpKTt2aj1hfWZ1bmN0aW9uIEtqKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH1cbmZ1bmN0aW9uIE1qKGEsYil7Zm9yKHZhciBjPWEuY2FsbGJhY2tOb2RlLGQ9YS5zdXNwZW5kZWRMYW5lcyxlPWEucGluZ2VkTGFuZXMsZj1hLmV4cGlyYXRpb25UaW1lcyxnPWEucGVuZGluZ0xhbmVzOzA8Zzspe3ZhciBoPTMxLVZjKGcpLGs9MTw8aCxsPWZbaF07aWYoLTE9PT1sKXtpZigwPT09KGsmZCl8fDAhPT0oayZlKSl7bD1iO1JjKGspO3ZhciBuPUY7ZltoXT0xMDw9bj9sKzI1MDo2PD1uP2wrNUUzOi0xfX1lbHNlIGw8PWImJihhLmV4cGlyZWRMYW5lc3w9ayk7ZyY9fmt9ZD1VYyhhLGE9PT1VP1c6MCk7Yj1GO2lmKDA9PT1kKW51bGwhPT1jJiYoYyE9PVpmJiZQZihjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wKTtlbHNle2lmKG51bGwhPT1jKXtpZihhLmNhbGxiYWNrUHJpb3JpdHk9PT1iKXJldHVybjtjIT09WmYmJlBmKGMpfTE1PT09Yj8oYz1Mai5iaW5kKG51bGwsYSksbnVsbD09PWFnPyhhZz1bY10sYmc9T2YoVWYsamcpKTphZy5wdXNoKGMpLFxuYz1aZik6MTQ9PT1iP2M9aGcoOTksTGouYmluZChudWxsLGEpKTooYz1UYyhiKSxjPWhnKGMsTmouYmluZChudWxsLGEpKSk7YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBOaihhKXtGaj0tMTtIaj1Haj0wO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYj1hLmNhbGxiYWNrTm9kZTtpZihPaigpJiZhLmNhbGxiYWNrTm9kZSE9PWIpcmV0dXJuIG51bGw7dmFyIGM9VWMoYSxhPT09VT9XOjApO2lmKDA9PT1jKXJldHVybiBudWxsO3ZhciBkPWM7dmFyIGU9WDtYfD0xNjt2YXIgZj1QaigpO2lmKFUhPT1hfHxXIT09ZCl3aigpLFFqKGEsZCk7ZG8gdHJ5e1JqKCk7YnJlYWt9Y2F0Y2goaCl7U2ooYSxoKX13aGlsZSgxKTtxZygpO29qLmN1cnJlbnQ9ZjtYPWU7bnVsbCE9PVk/ZD0wOihVPW51bGwsVz0wLGQ9Vik7aWYoMCE9PSh0aiZIaSkpUWooYSwwKTtlbHNlIGlmKDAhPT1kKXsyPT09ZCYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxjPVdjKGEpLDAhPT1jJiYoZD1UaihhLGMpKSk7aWYoMT09PWQpdGhyb3cgYj1zaixRaihhLDApLElpKGEsYyksTWooYSxPKCkpLGI7YS5maW5pc2hlZFdvcms9XG5hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1jO3N3aXRjaChkKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHkoMzQ1KSk7Y2FzZSAyOlVqKGEpO2JyZWFrO2Nhc2UgMzpJaShhLGMpO2lmKChjJjYyOTE0NTYwKT09PWMmJihkPWpqKzUwMC1PKCksMTA8ZCkpe2lmKDAhPT1VYyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZjKSE9PWMpe0hnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksZCk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA0OklpKGEsYyk7aWYoKGMmNDE4NjExMik9PT1jKWJyZWFrO2Q9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8Yzspe3ZhciBnPTMxLVZjKGMpO2Y9MTw8ZztnPWRbZ107Zz5lJiYoZT1nKTtjJj1+Zn1jPWU7Yz1PKCktYztjPSgxMjA+Yz8xMjA6NDgwPmM/NDgwOjEwODA+Yz8xMDgwOjE5MjA+Yz8xOTIwOjNFMz5jPzNFMzo0MzIwPlxuYz80MzIwOjE5NjAqbmooYy8xOTYwKSktYztpZigxMDxjKXthLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGMpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNTpVaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMzI5KSk7fX1NaihhLE8oKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yj9Oai5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBJaShhLGIpe2ImPX51ajtiJj1+SGk7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1WYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19XG5mdW5jdGlvbiBMaihhKXtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7T2ooKTtpZihhPT09VSYmMCE9PShhLmV4cGlyZWRMYW5lcyZXKSl7dmFyIGI9Vzt2YXIgYz1UaihhLGIpOzAhPT0odGomSGkpJiYoYj1VYyhhLGIpLGM9VGooYSxiKSl9ZWxzZSBiPVVjKGEsMCksYz1UaihhLGIpOzAhPT1hLnRhZyYmMj09PWMmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYj1XYyhhKSwwIT09YiYmKGM9VGooYSxiKSkpO2lmKDE9PT1jKXRocm93IGM9c2osUWooYSwwKSxJaShhLGIpLE1qKGEsTygpKSxjO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7VWooYSk7TWooYSxPKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gVmooKXtpZihudWxsIT09Q2ope3ZhciBhPUNqO0NqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuZXhwaXJlZExhbmVzfD0yNCZhLnBlbmRpbmdMYW5lcztNaihhLE8oKSl9KX1pZygpfWZ1bmN0aW9uIFdqKGEsYil7dmFyIGM9WDtYfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIFhqKGEsYil7dmFyIGM9WDtYJj0tMjtYfD04O3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIG5pKGEsYil7SShyaixxaik7cWp8PWI7dGp8PWJ9ZnVuY3Rpb24gS2koKXtxaj1yai5jdXJyZW50O0gocmopfVxuZnVuY3Rpb24gUWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscGYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmR2YoKTticmVhaztjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTticmVhaztjYXNlIDU6aGgoZCk7YnJlYWs7Y2FzZSA0OmZoKCk7YnJlYWs7Y2FzZSAxMzpIKFApO2JyZWFrO2Nhc2UgMTk6SChQKTticmVhaztjYXNlIDEwOnJnKGQpO2JyZWFrO2Nhc2UgMjM6Y2FzZSAyNDpLaSgpfWM9Yy5yZXR1cm59VT1hO1k9VGcoYS5jdXJyZW50LG51bGwpO1c9cWo9dGo9YjtWPTA7c2o9bnVsbDt1aj1IaT1EZz0wfVxuZnVuY3Rpb24gU2ooYSxiKXtkb3t2YXIgYz1ZO3RyeXtxZygpO3ZoLmN1cnJlbnQ9R2g7aWYoeWgpe2Zvcih2YXIgZD1SLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fXloPSExfXhoPTA7VD1TPVI9bnVsbDt6aD0hMTtwai5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7Vj0xO3NqPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9VztoLmZsYWdzfD0yMDQ4O2guZmlyc3RFZmZlY3Q9aC5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9aztpZigwPT09KGgubW9kZSYyKSl7dmFyIG49aC5hbHRlcm5hdGU7bj8oaC51cGRhdGVRdWV1ZT1uLnVwZGF0ZVF1ZXVlLGgubWVtb2l6ZWRTdGF0ZT1uLm1lbW9pemVkU3RhdGUsaC5sYW5lcz1uLmxhbmVzKTpcbihoLnVwZGF0ZVF1ZXVlPW51bGwsaC5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBBPTAhPT0oUC5jdXJyZW50JjEpLHA9Zztkb3t2YXIgQztpZihDPTEzPT09cC50YWcpe3ZhciB4PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eClDPW51bGwhPT14LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgdz1wLm1lbW9pemVkUHJvcHM7Qz12b2lkIDA9PT13LmZhbGxiYWNrPyExOiEwIT09dy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpBPyExOiEwfX1pZihDKXt2YXIgej1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT16KXt2YXIgdT1uZXcgU2V0O3UuYWRkKGwpO3AudXBkYXRlUXVldWU9dX1lbHNlIHouYWRkKGwpO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmZsYWdzfD02NDtoLmZsYWdzfD0xNjM4NDtoLmZsYWdzJj0tMjk4MTtpZigxPT09aC50YWcpaWYobnVsbD09PWguYWx0ZXJuYXRlKWgudGFnPTE3O2Vsc2V7dmFyIHQ9emcoLTEsMSk7dC50YWc9MjtBZyhoLHQpfWgubGFuZXN8PTE7YnJlYWsgYX1rPVxudm9pZCAwO2g9Yjt2YXIgcT1mLnBpbmdDYWNoZTtudWxsPT09cT8ocT1mLnBpbmdDYWNoZT1uZXcgT2ksaz1uZXcgU2V0LHEuc2V0KGwsaykpOihrPXEuZ2V0KGwpLHZvaWQgMD09PWsmJihrPW5ldyBTZXQscS5zZXQobCxrKSkpO2lmKCFrLmhhcyhoKSl7ay5hZGQoaCk7dmFyIHY9WWouYmluZChudWxsLGYsbCxoKTtsLnRoZW4odix2KX1wLmZsYWdzfD00MDk2O3AubGFuZXM9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2s9RXJyb3IoKFJhKGgudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIil9NSE9PVYmJihWPTIpO2s9TWkoayxoKTtwPVxuZztkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzpmPWs7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBKPVBpKHAsZixiKTtCZyhwLEopO2JyZWFrIGE7Y2FzZSAxOmY9azt2YXIgSz1wLnR5cGUsUT1wLnN0YXRlTm9kZTtpZigwPT09KHAuZmxhZ3MmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEsuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09USYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFEuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoUSkpKSl7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBMPVNpKHAsZixiKTtCZyhwLEwpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVpqKGMpfWNhdGNoKHZhKXtiPXZhO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBQaigpe3ZhciBhPW9qLmN1cnJlbnQ7b2ouY3VycmVudD1HaDtyZXR1cm4gbnVsbD09PWE/R2g6YX1mdW5jdGlvbiBUaihhLGIpe3ZhciBjPVg7WHw9MTY7dmFyIGQ9UGooKTtVPT09YSYmVz09PWJ8fFFqKGEsYik7ZG8gdHJ5e2FrKCk7YnJlYWt9Y2F0Y2goZSl7U2ooYSxlKX13aGlsZSgxKTtxZygpO1g9Yztvai5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IoeSgyNjEpKTtVPW51bGw7Vz0wO3JldHVybiBWfWZ1bmN0aW9uIGFrKCl7Zm9yKDtudWxsIT09WTspYmsoWSl9ZnVuY3Rpb24gUmooKXtmb3IoO251bGwhPT1ZJiYhUWYoKTspYmsoWSl9ZnVuY3Rpb24gYmsoYSl7dmFyIGI9Y2soYS5hbHRlcm5hdGUsYSxxaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1pqKGEpOlk9Yjtwai5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBaaihhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjIwNDgpKXtjPUdpKGMsYixxaik7aWYobnVsbCE9PWMpe1k9YztyZXR1cm59Yz1iO2lmKDI0IT09Yy50YWcmJjIzIT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fDAhPT0ocWomMTA3Mzc0MTgyNCl8fDA9PT0oYy5tb2RlJjQpKXtmb3IodmFyIGQ9MCxlPWMuY2hpbGQ7bnVsbCE9PWU7KWR8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGU9ZS5zaWJsaW5nO2MuY2hpbGRMYW5lcz1kfW51bGwhPT1hJiYwPT09KGEuZmxhZ3MmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Yi5maXJzdEVmZmVjdCksbnVsbCE9PWIubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0KSwxPGIuZmxhZ3MmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YjphLmZpcnN0RWZmZWN0PWIsYS5sYXN0RWZmZWN0PWIpKX1lbHNle2M9TGkoYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTIwNDc7WT1jO3JldHVybn1udWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5mbGFnc3w9MjA0OCl9Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1WJiYoVj01KX1mdW5jdGlvbiBVaihhKXt2YXIgYj1lZygpO2dnKDk5LGRrLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRrKGEsYil7ZG8gT2ooKTt3aGlsZShudWxsIT09eWopO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yaztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IoeSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO3ZhciBkPWMubGFuZXN8Yy5jaGlsZExhbmVzLGU9ZCxmPWEucGVuZGluZ0xhbmVzJn5lO2EucGVuZGluZ0xhbmVzPWU7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9ZTthLm11dGFibGVSZWFkTGFuZXMmPWU7YS5lbnRhbmdsZWRMYW5lcyY9ZTtlPWEuZW50YW5nbGVtZW50cztmb3IodmFyIGc9YS5ldmVudFRpbWVzLGg9YS5leHBpcmF0aW9uVGltZXM7MDxmOyl7dmFyIGs9MzEtVmMoZiksbD0xPDxrO2Vba109MDtnW2tdPS0xO2hba109LTE7ZiY9fmx9bnVsbCE9PVxuQ2omJjA9PT0oZCYyNCkmJkNqLmhhcyhhKSYmQ2ouZGVsZXRlKGEpO2E9PT1VJiYoWT1VPW51bGwsVz0wKTsxPGMuZmxhZ3M/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxkPWMuZmlyc3RFZmZlY3QpOmQ9YzpkPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWQpe2U9WDtYfD0zMjtwai5jdXJyZW50PW51bGw7a2Y9ZmQ7Zz1OZSgpO2lmKE9lKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKWg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6aWYoaD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3csKGw9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCkpJiYwIT09bC5yYW5nZUNvdW50KXtoPWwuYW5jaG9yTm9kZTtmPWwuYW5jaG9yT2Zmc2V0O2s9bC5mb2N1c05vZGU7bD1sLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2godmEpe2g9bnVsbDtcbmJyZWFrIGF9dmFyIG49MCxBPS0xLHA9LTEsQz0wLHg9MCx3PWcsej1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHU7Oyl7dyE9PWh8fDAhPT1mJiYzIT09dy5ub2RlVHlwZXx8KEE9bitmKTt3IT09a3x8MCE9PWwmJjMhPT13Lm5vZGVUeXBlfHwocD1uK2wpOzM9PT13Lm5vZGVUeXBlJiYobis9dy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHU9dy5maXJzdENoaWxkKSlicmVhazt6PXc7dz11fWZvcig7Oyl7aWYodz09PWcpYnJlYWsgYjt6PT09aCYmKytDPT09ZiYmKEE9bik7ej09PWsmJisreD09PWwmJihwPW4pO2lmKG51bGwhPT0odT13Lm5leHRTaWJsaW5nKSlicmVhazt3PXo7ej13LnBhcmVudE5vZGV9dz11fWg9LTE9PT1BfHwtMT09PXA/bnVsbDp7c3RhcnQ6QSxlbmQ6cH19ZWxzZSBoPW51bGw7aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPW51bGw7bGY9e2ZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7SWo9bnVsbDtKaj0hMTtaPWQ7ZG8gdHJ5e2VrKCl9Y2F0Y2godmEpe2lmKG51bGw9PT1cblopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7SWo9bnVsbDtaPWQ7ZG8gdHJ5e2ZvcihnPWE7bnVsbCE9PVo7KXt2YXIgdD1aLmZsYWdzO3QmMTYmJnBiKFouc3RhdGVOb2RlLFwiXCIpO2lmKHQmMTI4KXt2YXIgcT1aLmFsdGVybmF0ZTtpZihudWxsIT09cSl7dmFyIHY9cS5yZWY7bnVsbCE9PXYmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdj92KG51bGwpOnYuY3VycmVudD1udWxsKX19c3dpdGNoKHQmMTAzOCl7Y2FzZSAyOmZqKFopO1ouZmxhZ3MmPS0zO2JyZWFrO2Nhc2UgNjpmaihaKTtaLmZsYWdzJj0tMztpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDEwMjQ6Wi5mbGFncyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlouZmxhZ3MmPS0xMDI1O2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgNDppaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDg6aD1aO2NqKGcsaCk7dmFyIEo9aC5hbHRlcm5hdGU7ZGooaCk7bnVsbCE9PVxuSiYmZGooSil9Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTt2PWxmO3E9TmUoKTt0PXYuZm9jdXNlZEVsZW07Zz12LnNlbGVjdGlvblJhbmdlO2lmKHEhPT10JiZ0JiZ0Lm93bmVyRG9jdW1lbnQmJk1lKHQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdCkpe251bGwhPT1nJiZPZSh0KSYmKHE9Zy5zdGFydCx2PWcuZW5kLHZvaWQgMD09PXYmJih2PXEpLFwic2VsZWN0aW9uU3RhcnRcImluIHQ/KHQuc2VsZWN0aW9uU3RhcnQ9cSx0LnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHQudmFsdWUubGVuZ3RoKSk6KHY9KHE9dC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnEuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxoPXQudGV4dENvbnRlbnQubGVuZ3RoLEo9TWF0aC5taW4oZy5zdGFydCxoKSxnPXZvaWQgMD09PVxuZy5lbmQ/SjpNYXRoLm1pbihnLmVuZCxoKSwhdi5leHRlbmQmJko+ZyYmKGg9ZyxnPUosSj1oKSxoPUxlKHQsSiksZj1MZSh0LGcpLGgmJmYmJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1oLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09aC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09Zi5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpJiYocT1xLmNyZWF0ZVJhbmdlKCkscS5zZXRTdGFydChoLm5vZGUsaC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksSj5nPyh2LmFkZFJhbmdlKHEpLHYuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihxLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLHYuYWRkUmFuZ2UocSkpKSkpKTtxPVtdO2Zvcih2PXQ7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZxLnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdC5mb2N1cyYmdC5mb2N1cygpO2Zvcih0PVxuMDt0PHEubGVuZ3RoO3QrKyl2PXFbdF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9ZmQ9ISFrZjtsZj1rZj1udWxsO2EuY3VycmVudD1jO1o9ZDtkbyB0cnl7Zm9yKHQ9YTtudWxsIT09Wjspe3ZhciBLPVouZmxhZ3M7SyYzNiYmWWkodCxaLmFsdGVybmF0ZSxaKTtpZihLJjEyOCl7cT12b2lkIDA7dmFyIFE9Wi5yZWY7aWYobnVsbCE9PVEpe3ZhciBMPVouc3RhdGVOb2RlO3N3aXRjaChaLnRhZyl7Y2FzZSA1OnE9TDticmVhaztkZWZhdWx0OnE9TH1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUT9RKHEpOlEuY3VycmVudD1xfX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO1o9bnVsbDskZigpO1g9ZX1lbHNlIGEuY3VycmVudD1jO2lmKHhqKXhqPSExLHlqPWEsemo9YjtlbHNlIGZvcihaPWQ7bnVsbCE9PVo7KWI9XG5aLm5leHRFZmZlY3QsWi5uZXh0RWZmZWN0PW51bGwsWi5mbGFncyY4JiYoSz1aLEsuc2libGluZz1udWxsLEsuc3RhdGVOb2RlPW51bGwpLFo9YjtkPWEucGVuZGluZ0xhbmVzOzA9PT1kJiYoVGk9bnVsbCk7MT09PWQ/YT09PUVqP0RqKys6KERqPTAsRWo9YSk6RGo9MDtjPWMuc3RhdGVOb2RlO2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclJvb3QpdHJ5e01mLm9uQ29tbWl0RmliZXJSb290KExmLGMsdm9pZCAwLDY0PT09KGMuY3VycmVudC5mbGFncyY2NCkpfWNhdGNoKHZhKXt9TWooYSxPKCkpO2lmKFFpKXRocm93IFFpPSExLGE9UmksUmk9bnVsbCxhO2lmKDAhPT0oWCY4KSlyZXR1cm4gbnVsbDtpZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZWsoKXtmb3IoO251bGwhPT1aOyl7dmFyIGE9Wi5hbHRlcm5hdGU7Smp8fG51bGw9PT1Janx8KDAhPT0oWi5mbGFncyY4KT9kYyhaLElqKSYmKEpqPSEwKToxMz09PVoudGFnJiZtaihhLFopJiZkYyhaLElqKSYmKEpqPSEwKSk7dmFyIGI9Wi5mbGFnczswIT09KGImMjU2KSYmWGkoYSxaKTswPT09KGImNTEyKXx8eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSk7Wj1aLm5leHRFZmZlY3R9fWZ1bmN0aW9uIE9qKCl7aWYoOTAhPT16ail7dmFyIGE9OTc8emo/OTc6emo7emo9OTA7cmV0dXJuIGdnKGEsZmspfXJldHVybiExfWZ1bmN0aW9uICRpKGEsYil7QWoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfWZ1bmN0aW9uIFppKGEsYil7QmoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfVxuZnVuY3Rpb24gZmsoKXtpZihudWxsPT09eWopcmV0dXJuITE7dmFyIGE9eWo7eWo9bnVsbDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzMxKSk7dmFyIGI9WDtYfD0zMjt2YXIgYz1CajtCaj1bXTtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrPTIpe3ZhciBlPWNbZF0sZj1jW2QrMV0sZz1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyl0cnl7ZygpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Yz1BajtBaj1bXTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7ZT1jW2RdO2Y9Y1tkKzFdO3RyeXt2YXIgaD1lLmNyZWF0ZTtlLmRlc3Ryb3k9aCgpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Zm9yKGg9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1oOylhPWgubmV4dEVmZmVjdCxoLm5leHRFZmZlY3Q9bnVsbCxoLmZsYWdzJjgmJihoLnNpYmxpbmc9XG5udWxsLGguc3RhdGVOb2RlPW51bGwpLGg9YTtYPWI7aWcoKTtyZXR1cm4hMH1mdW5jdGlvbiBnayhhLGIsYyl7Yj1NaShjLGIpO2I9UGkoYSxiLDEpO0FnKGEsYik7Yj1IZygpO2E9S2ooYSwxKTtudWxsIT09YSYmKCRjKGEsMSxiKSxNaihhLGIpKX1cbmZ1bmN0aW9uIFdpKGEsYil7aWYoMz09PWEudGFnKWdrKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7Z2soYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXthPU1pKGIsYSk7dmFyIGU9U2koYyxhLDEpO0FnKGMsZSk7ZT1IZygpO2M9S2ooYywxKTtpZihudWxsIT09YykkYyhjLDEsZSksTWooYyxlKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl0cnl7ZC5jb21wb25lbnREaWRDYXRjaChiLGEpfWNhdGNoKGYpe31icmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBZaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7VT09PWEmJihXJmMpPT09YyYmKDQ9PT1WfHwzPT09ViYmKFcmNjI5MTQ1NjApPT09VyYmNTAwPk8oKS1qaj9RaihhLDApOnVqfD1jKTtNaihhLGIpfWZ1bmN0aW9uIGxqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9YS5tb2RlLDA9PT0oYiYyKT9iPTE6MD09PShiJjQpP2I9OTk9PT1lZygpPzE6MjooMD09PUdqJiYoR2o9dGopLGI9WWMoNjI5MTQ1NjAmfkdqKSwwPT09YiYmKGI9NDE5NDMwNCkpKTtjPUhnKCk7YT1LaihhLGIpO251bGwhPT1hJiYoJGMoYSxiLGMpLE1qKGEsYykpfXZhciBjaztcbmNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmxhbmVzO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxOLmN1cnJlbnQpdWc9ITA7ZWxzZSBpZigwIT09KGMmZCkpdWc9MCE9PShhLmZsYWdzJjE2Mzg0KT8hMDohMTtlbHNle3VnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOnJpKGIpO3NoKCk7YnJlYWs7Y2FzZSA1OmdoKGIpO2JyZWFrO2Nhc2UgMTpGZihiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6ZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO3ZhciBlPWIudHlwZS5fY29udGV4dDtJKG1nLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gdGkoYSxiLGMpO0koUCxQLmN1cnJlbnQmMSk7Yj1oaShhLGIsYyk7cmV0dXJuIG51bGwhPT1cbmI/Yi5zaWJsaW5nOm51bGx9SShQLFAuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjY0KSl7aWYoZClyZXR1cm4gQWkoYSxiLGMpO2IuZmxhZ3N8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7SShQLFAuY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gYi5sYW5lcz0wLG1pKGEsYixjKX1yZXR1cm4gaGkoYSxiLGMpfWVsc2UgdWc9ITE7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1FZihiLE0uY3VycmVudCk7dGcoYixjKTtlPUNoKG51bGwsYixkLGEsZSxjKTtiLmZsYWdzfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihGZihkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7eGcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkdnKGIsZCxnLGEpO2UudXBkYXRlcj1LZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxzPWI7T2coYixkLGEsYyk7Yj1xaShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxmaShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7YTp7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7XG5hPWIucGVuZGluZ1Byb3BzO2Y9ZS5faW5pdDtlPWYoZS5fcGF5bG9hZCk7Yi50eXBlPWU7Zj1iLnRhZz1oayhlKTthPWxnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWxpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1waShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPWdpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9aWkobnVsbCxiLGUsbGcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih5KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGxpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLHBpKGEsYixkLGUsYyk7Y2FzZSAzOnJpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IoeSgyODIpKTtcbmQ9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZyhhLGIpO0NnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpc2goKSxiPWhpKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZj1lLmh5ZHJhdGUpa2g9cmYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxqaD1iLGY9bGg9ITA7aWYoZil7YT1lLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE7aWYobnVsbCE9YSlmb3IoZT0wO2U8YS5sZW5ndGg7ZSs9MilmPWFbZV0sZi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1hW2UrMV0sdGgucHVzaChmKTtjPVpnKGIsbnVsbCxkLGMpO2ZvcihiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDEwMjQsYz1jLnNpYmxpbmd9ZWxzZSBmaShhLGIsZCxjKSxzaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGdoKGIpLG51bGw9PT1hJiZcbnBoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sbmYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJm5mKGQsZikmJihiLmZsYWdzfD0xNiksb2koYSxiKSxmaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJnBoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gdGkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WWcoYixudWxsLGQsYyk6ZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGdpKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShtZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPUhlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFOLmN1cnJlbnQpe2I9aGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9XG5rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9emcoLTEsYyYtYyksbC50YWc9MixBZyhoLGwpKTtoLmxhbmVzfD1jO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJihsLmxhbmVzfD1jKTtzZyhoLnJldHVybixjKTtrLmxhbmVzfD1jO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9ZmkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sdGcoYixjKSxlPXZnKGUsXG5mLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZmxhZ3N8PTEsZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWxnKGUsYi5wZW5kaW5nUHJvcHMpLGY9bGcoZS50eXBlLGYpLGlpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBraShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxiLnRhZz0xLEZmKGQpPyhhPSEwLEpmKGIpKTphPSExLHRnKGIsYyksTWcoYixkLGUpLE9nKGIsZCxlLGMpLHFpKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gQWkoYSxiLGMpO2Nhc2UgMjM6cmV0dXJuIG1pKGEsYixjKTtjYXNlIDI0OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTtcbn07ZnVuY3Rpb24gaWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmZsYWdzPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIG5oKGEsYixjLGQpe3JldHVybiBuZXcgaWsoYSxiLGMsZCl9ZnVuY3Rpb24gamkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIGhrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBqaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09QWEpcmV0dXJuIDExO2lmKGE9PT1EYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5oKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFZnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlqaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm4gWGcoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBIYTpnPTg7ZXw9MTY7YnJlYWs7Y2FzZSB3YTpnPTg7ZXw9MTticmVhaztjYXNlIHhhOnJldHVybiBhPW5oKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9eGEsYS50eXBlPXhhLGEubGFuZXM9ZixhO2Nhc2UgQmE6cmV0dXJuIGE9bmgoMTMsYyxiLGUpLGEudHlwZT1CYSxhLmVsZW1lbnRUeXBlPUJhLGEubGFuZXM9ZixhO2Nhc2UgQ2E6cmV0dXJuIGE9bmgoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9Q2EsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gdmkoYyxlLGYsYik7Y2FzZSBKYTpyZXR1cm4gYT1uaCgyNCxjLGIsZSksYS5lbGVtZW50VHlwZT1KYSxhLmxhbmVzPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB5YTpnPTEwO2JyZWFrIGE7Y2FzZSB6YTpnPTk7YnJlYWsgYTtjYXNlIEFhOmc9MTE7YnJlYWsgYTtjYXNlIERhOmc9MTQ7YnJlYWsgYTtjYXNlIEVhOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBGYTpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1uaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIFhnKGEsYixjLGQpe2E9bmgoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHZpKGEsYixjLGQpe2E9bmgoMjMsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIFVnKGEsYixjKXthPW5oKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFdnKGEsYixjKXtiPW5oKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gamsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9WmMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9WmMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9WmMoMCk7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPW51bGx9XG5mdW5jdGlvbiBrayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOnRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gbGsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9SGcoKSxnPUlnKGUpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFscztiOntpZihaYihjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEZmKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IoeSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoRmYoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj16ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1cbmQmJihiLmNhbGxiYWNrPWQpO0FnKGUsYik7SmcoZSxnLGYpO3JldHVybiBnfWZ1bmN0aW9uIG1rKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gbmsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIG9rKGEsYil7bmsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJm5rKGEsYil9ZnVuY3Rpb24gcGsoKXtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHFrKGEsYixjKXt2YXIgZD1udWxsIT1jJiZudWxsIT1jLmh5ZHJhdGlvbk9wdGlvbnMmJmMuaHlkcmF0aW9uT3B0aW9ucy5tdXRhYmxlU291cmNlc3x8bnVsbDtjPW5ldyBqayhhLGIsbnVsbCE9YyYmITA9PT1jLmh5ZHJhdGUpO2I9bmgoMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2MuY3VycmVudD1iO2Iuc3RhdGVOb2RlPWM7eGcoYik7YVtmZl09Yy5jdXJyZW50O2NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspe2I9ZFthXTt2YXIgZT1iLl9nZXRWZXJzaW9uO2U9ZShiLl9zb3VyY2UpO251bGw9PWMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2IsZV06Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYixlKX10aGlzLl9pbnRlcm5hbFJvb3Q9Y31cbnFrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7bGsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07cWsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87bGsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW2ZmXT1udWxsfSl9O2Z1bmN0aW9uIHJrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cbmZ1bmN0aW9uIHNrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgcWsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiB0ayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2guY2FsbChhKX19bGsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1zayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtrLmNhbGwoYSl9fVhqKGZ1bmN0aW9uKCl7bGsoYixnLGEsZSl9KX1yZXR1cm4gbWsoZyl9ZWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDQsYik7b2soYSw0KX19O2ZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw2NzEwODg2NCxiKTtvayhhLDY3MTA4ODY0KX19O1xuZ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKSxjPUlnKGEpO0pnKGEsYyxiKTtvayhhLGMpfX07aGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYigpfTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHkoOTApKTtXYShkKTthYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9V2o7XG5IYj1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVg7WHw9NDt0cnl7cmV0dXJuIGdnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1g9ZiwwPT09WCYmKHdqKCksaWcoKSl9fTtJYj1mdW5jdGlvbigpezA9PT0oWCY0OSkmJihWaigpLE9qKCkpfTtKYj1mdW5jdGlvbihhLGIpe3ZhciBjPVg7WHw9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX07ZnVuY3Rpb24gdWsoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4ga2soYSxiLG51bGwsYyl9dmFyIHZrPXtFdmVudHM6W0NiLHVlLERiLEViLEZiLE9qLHtjdXJyZW50OiExfV19LHdrPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE3LjAuMlwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgeGs9e2J1bmRsZVR5cGU6d2suYnVuZGxlVHlwZSx2ZXJzaW9uOndrLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp3ay5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOndrLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1jYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2suZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxucGssZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB5az1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXlrLmlzRGlzYWJsZWQmJnlrLnN1cHBvcnRzRmliZXIpdHJ5e0xmPXlrLmluamVjdCh4ayksTWY9eWt9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXZrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPXVrO1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih5KDE4OCkpO3Rocm93IEVycm9yKHkoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9Y2MoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe3ZhciBjPVg7aWYoMCE9PShjJjQ4KSlyZXR1cm4gYShiKTtYfD0xO3RyeXtpZihhKXJldHVybiBnZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtYPWMsaWcoKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcmsoYSkpdGhyb3cgRXJyb3IoeSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqKGZ1bmN0aW9uKCl7dGsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW2ZmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9V2o7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdWsoYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFyayhjKSl0aHJvdyBFcnJvcih5KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHkoMzgpKTtyZXR1cm4gdGsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyogZ2xvYmFsIE1hcDpyZWFkb25seSwgU2V0OnJlYWRvbmx5LCBBcnJheUJ1ZmZlcjpyZWFkb25seSAqL1xuXG52YXIgaGFzRWxlbWVudFR5cGUgPSB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCc7XG52YXIgaGFzTWFwID0gdHlwZW9mIE1hcCA9PT0gJ2Z1bmN0aW9uJztcbnZhciBoYXNTZXQgPSB0eXBlb2YgU2V0ID09PSAnZnVuY3Rpb24nO1xudmFyIGhhc0FycmF5QnVmZmVyID0gdHlwZW9mIEFycmF5QnVmZmVyID09PSAnZnVuY3Rpb24nICYmICEhQXJyYXlCdWZmZXIuaXNWaWV3O1xuXG4vLyBOb3RlOiBXZSAqKmRvbid0KiogbmVlZCBgZW52SGFzQmlnSW50NjRBcnJheWAgaW4gZmRlIGVzNi9pbmRleC5qc1xuXG5mdW5jdGlvbiBlcXVhbChhLCBiKSB7XG4gIC8vIFNUQVJUOiBmYXN0LWRlZXAtZXF1YWwgZXM2L2luZGV4LmpzIDMuMS4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09ICdvYmplY3QnICYmIHR5cGVvZiBiID09ICdvYmplY3QnKSB7XG4gICAgaWYgKGEuY29uc3RydWN0b3IgIT09IGIuY29uc3RydWN0b3IpIHJldHVybiBmYWxzZTtcblxuICAgIHZhciBsZW5ndGgsIGksIGtleXM7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBTVEFSVDogTW9kaWZpY2F0aW9uczpcbiAgICAvLyAxLiBFeHRyYSBgaGFzPFR5cGU+ICYmYCBoZWxwZXJzIGluIGluaXRpYWwgY29uZGl0aW9uIGFsbG93IGVzNiBjb2RlXG4gICAgLy8gICAgdG8gY28tZXhpc3Qgd2l0aCBlczUuXG4gICAgLy8gMi4gUmVwbGFjZSBgZm9yIG9mYCB3aXRoIGVzNSBjb21wbGlhbnQgaXRlcmF0aW9uIHVzaW5nIGBmb3JgLlxuICAgIC8vICAgIEJhc2ljYWxseSwgdGFrZTpcbiAgICAvL1xuICAgIC8vICAgIGBgYGpzXG4gICAgLy8gICAgZm9yIChpIG9mIGEuZW50cmllcygpKVxuICAgIC8vICAgICAgaWYgKCFiLmhhcyhpWzBdKSkgcmV0dXJuIGZhbHNlO1xuICAgIC8vICAgIGBgYFxuICAgIC8vXG4gICAgLy8gICAgLi4uIGFuZCBjb252ZXJ0IHRvOlxuICAgIC8vXG4gICAgLy8gICAgYGBganNcbiAgICAvLyAgICBpdCA9IGEuZW50cmllcygpO1xuICAgIC8vICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgLy8gICAgICBpZiAoIWIuaGFzKGkudmFsdWVbMF0pKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gICAgYGBgXG4gICAgLy9cbiAgICAvLyAgICAqKk5vdGUqKjogYGlgIGFjY2VzcyBzd2l0Y2hlcyB0byBgaS52YWx1ZWAuXG4gICAgdmFyIGl0O1xuICAgIGlmIChoYXNNYXAgJiYgKGEgaW5zdGFuY2VvZiBNYXApICYmIChiIGluc3RhbmNlb2YgTWFwKSkge1xuICAgICAgaWYgKGEuc2l6ZSAhPT0gYi5zaXplKSByZXR1cm4gZmFsc2U7XG4gICAgICBpdCA9IGEuZW50cmllcygpO1xuICAgICAgd2hpbGUgKCEoaSA9IGl0Lm5leHQoKSkuZG9uZSlcbiAgICAgICAgaWYgKCFiLmhhcyhpLnZhbHVlWzBdKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgaXQgPSBhLmVudHJpZXMoKTtcbiAgICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgICAgIGlmICghZXF1YWwoaS52YWx1ZVsxXSwgYi5nZXQoaS52YWx1ZVswXSkpKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoaGFzU2V0ICYmIChhIGluc3RhbmNlb2YgU2V0KSAmJiAoYiBpbnN0YW5jZW9mIFNldCkpIHtcbiAgICAgIGlmIChhLnNpemUgIT09IGIuc2l6ZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgaXQgPSBhLmVudHJpZXMoKTtcbiAgICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgICAgIGlmICghYi5oYXMoaS52YWx1ZVswXSkpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBFTkQ6IE1vZGlmaWNhdGlvbnNcblxuICAgIGlmIChoYXNBcnJheUJ1ZmZlciAmJiBBcnJheUJ1ZmZlci5pc1ZpZXcoYSkgJiYgQXJyYXlCdWZmZXIuaXNWaWV3KGIpKSB7XG4gICAgICBsZW5ndGggPSBhLmxlbmd0aDtcbiAgICAgIGlmIChsZW5ndGggIT0gYi5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOylcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChhLmNvbnN0cnVjdG9yID09PSBSZWdFeHApIHJldHVybiBhLnNvdXJjZSA9PT0gYi5zb3VyY2UgJiYgYS5mbGFncyA9PT0gYi5mbGFncztcbiAgICBpZiAoYS52YWx1ZU9mICE9PSBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YpIHJldHVybiBhLnZhbHVlT2YoKSA9PT0gYi52YWx1ZU9mKCk7XG4gICAgaWYgKGEudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpIHJldHVybiBhLnRvU3RyaW5nKCkgPT09IGIudG9TdHJpbmcoKTtcblxuICAgIGtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICBpZiAobGVuZ3RoICE9PSBPYmplY3Qua2V5cyhiKS5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOylcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIGtleXNbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gRU5EOiBmYXN0LWRlZXAtZXF1YWxcblxuICAgIC8vIFNUQVJUOiByZWFjdC1mYXN0LWNvbXBhcmVcbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIERPTSBlbGVtZW50c1xuICAgIGlmIChoYXNFbGVtZW50VHlwZSAmJiBhIGluc3RhbmNlb2YgRWxlbWVudCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgLy8gY3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdC9QcmVhY3RcbiAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspIHtcbiAgICAgIGlmICgoa2V5c1tpXSA9PT0gJ19vd25lcicgfHwga2V5c1tpXSA9PT0gJ19fdicgfHwga2V5c1tpXSA9PT0gJ19fbycpICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lclxuICAgICAgICAvLyBQcmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUHJlYWN0IGVsZW1lbnRzJyBfX3YgYW5kIF9fb1xuICAgICAgICAvLyAgICBfX3YgPSAkX29yaWdpbmFsIC8gJF92bm9kZVxuICAgICAgICAvLyAgICBfX28gPSAkX293bmVyXG4gICAgICAgIC8vIFRoZXNlIHByb3BlcnRpZXMgY29udGFpbiBjaXJjdWxhciByZWZlcmVuY2VzIGFuZCBhcmUgbm90IG5lZWRlZCB3aGVuXG4gICAgICAgIC8vIGNvbXBhcmluZyB0aGUgYWN0dWFsIGVsZW1lbnRzIChhbmQgbm90IHRoZWlyIG93bmVycylcbiAgICAgICAgLy8gLiQkdHlwZW9mIGFuZCAuX3N0b3JlIG9uIGp1c3QgcmVhc29uYWJsZSBtYXJrZXJzIG9mIGVsZW1lbnRzXG5cbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIGFsbCBvdGhlciBwcm9wZXJ0aWVzIHNob3VsZCBiZSB0cmF2ZXJzZWQgYXMgdXN1YWxcbiAgICAgIGlmICghZXF1YWwoYVtrZXlzW2ldXSwgYltrZXlzW2ldXSkpIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gRU5EOiByZWFjdC1mYXN0LWNvbXBhcmVcblxuICAgIC8vIFNUQVJUOiBmYXN0LWRlZXAtZXF1YWxcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoKGVycm9yLm1lc3NhZ2UgfHwgJycpLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpKSB7XG4gICAgICAvLyB3YXJuIG9uIGNpcmN1bGFyIHJlZmVyZW5jZXMsIGRvbid0IGNyYXNoXG4gICAgICAvLyBicm93c2VycyBnaXZlIHRoaXMgZGlmZmVyZW50IGVycm9ycyBuYW1lIGFuZCBtZXNzYWdlczpcbiAgICAgIC8vIGNocm9tZS9zYWZhcmk6IFwiUmFuZ2VFcnJvclwiLCBcIk1heGltdW0gY2FsbCBzdGFjayBzaXplIGV4Y2VlZGVkXCJcbiAgICAgIC8vIGZpcmVmb3g6IFwiSW50ZXJuYWxFcnJvclwiLCB0b28gbXVjaCByZWN1cnNpb25cIlxuICAgICAgLy8gZWRnZTogXCJFcnJvclwiLCBcIk91dCBvZiBzdGFjayBzcGFjZVwiXG4gICAgICBjb25zb2xlLndhcm4oJ3JlYWN0LWZhc3QtY29tcGFyZSBjYW5ub3QgaGFuZGxlIGNpcmN1bGFyIHJlZnMnKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gc29tZSBvdGhlciBlcnJvci4gd2Ugc2hvdWxkIGRlZmluaXRlbHkga25vdyBhYm91dCB0aGVzZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnLCBmbGFncyhvcHRpb25zKSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0IChleCkgeyByZXR1cm4gKGV4ICYmICh0eXBlb2YgZXggPT09ICdvYmplY3QnKSAmJiAnZGVmYXVsdCcgaW4gZXgpID8gZXhbJ2RlZmF1bHQnXSA6IGV4OyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUmVhY3RfX2RlZmF1bHQgPSBfaW50ZXJvcERlZmF1bHQoUmVhY3QpO1xuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIHdpdGhTaWRlRWZmZWN0KHJlZHVjZVByb3BzVG9TdGF0ZSwgaGFuZGxlU3RhdGVDaGFuZ2VPbkNsaWVudCwgbWFwU3RhdGVPblNlcnZlcikge1xuICBpZiAodHlwZW9mIHJlZHVjZVByb3BzVG9TdGF0ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgcmVkdWNlUHJvcHNUb1N0YXRlIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIGhhbmRsZVN0YXRlQ2hhbmdlT25DbGllbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGhhbmRsZVN0YXRlQ2hhbmdlT25DbGllbnQgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgbWFwU3RhdGVPblNlcnZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG1hcFN0YXRlT25TZXJ2ZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIG1hcFN0YXRlT25TZXJ2ZXIgdG8gZWl0aGVyIGJlIHVuZGVmaW5lZCBvciBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUoV3JhcHBlZENvbXBvbmVudCkge1xuICAgIHJldHVybiBXcmFwcGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IFdyYXBwZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKFdyYXBwZWRDb21wb25lbnQpIHtcbiAgICBpZiAodHlwZW9mIFdyYXBwZWRDb21wb25lbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgV3JhcHBlZENvbXBvbmVudCB0byBiZSBhIFJlYWN0IGNvbXBvbmVudC4nKTtcbiAgICB9XG5cbiAgICB2YXIgbW91bnRlZEluc3RhbmNlcyA9IFtdO1xuICAgIHZhciBzdGF0ZTtcblxuICAgIGZ1bmN0aW9uIGVtaXRDaGFuZ2UoKSB7XG4gICAgICBzdGF0ZSA9IHJlZHVjZVByb3BzVG9TdGF0ZShtb3VudGVkSW5zdGFuY2VzLm1hcChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLnByb3BzO1xuICAgICAgfSkpO1xuXG4gICAgICBpZiAoU2lkZUVmZmVjdC5jYW5Vc2VET00pIHtcbiAgICAgICAgaGFuZGxlU3RhdGVDaGFuZ2VPbkNsaWVudChzdGF0ZSk7XG4gICAgICB9IGVsc2UgaWYgKG1hcFN0YXRlT25TZXJ2ZXIpIHtcbiAgICAgICAgc3RhdGUgPSBtYXBTdGF0ZU9uU2VydmVyKHN0YXRlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgU2lkZUVmZmVjdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1B1cmVDb21wb25lbnQpIHtcbiAgICAgIF9pbmhlcml0c0xvb3NlKFNpZGVFZmZlY3QsIF9QdXJlQ29tcG9uZW50KTtcblxuICAgICAgZnVuY3Rpb24gU2lkZUVmZmVjdCgpIHtcbiAgICAgICAgcmV0dXJuIF9QdXJlQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIH1cblxuICAgICAgLy8gVHJ5IHRvIHVzZSBkaXNwbGF5TmFtZSBvZiB3cmFwcGVkIGNvbXBvbmVudFxuICAgICAgLy8gRXhwb3NlIGNhblVzZURPTSBzbyB0ZXN0cyBjYW4gbW9ua2V5cGF0Y2ggaXRcbiAgICAgIFNpZGVFZmZlY3QucGVlayA9IGZ1bmN0aW9uIHBlZWsoKSB7XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICAgIH07XG5cbiAgICAgIFNpZGVFZmZlY3QucmV3aW5kID0gZnVuY3Rpb24gcmV3aW5kKCkge1xuICAgICAgICBpZiAoU2lkZUVmZmVjdC5jYW5Vc2VET00pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgb25seSBjYWxsIHJld2luZCgpIG9uIHRoZSBzZXJ2ZXIuIENhbGwgcGVlaygpIHRvIHJlYWQgdGhlIGN1cnJlbnQgc3RhdGUuJyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVjb3JkZWRTdGF0ZSA9IHN0YXRlO1xuICAgICAgICBzdGF0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgbW91bnRlZEluc3RhbmNlcyA9IFtdO1xuICAgICAgICByZXR1cm4gcmVjb3JkZWRTdGF0ZTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBfcHJvdG8gPSBTaWRlRWZmZWN0LnByb3RvdHlwZTtcblxuICAgICAgX3Byb3RvLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICBtb3VudGVkSW5zdGFuY2VzLnB1c2godGhpcyk7XG4gICAgICAgIGVtaXRDaGFuZ2UoKTtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUoKSB7XG4gICAgICAgIGVtaXRDaGFuZ2UoKTtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICB2YXIgaW5kZXggPSBtb3VudGVkSW5zdGFuY2VzLmluZGV4T2YodGhpcyk7XG4gICAgICAgIG1vdW50ZWRJbnN0YW5jZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgZW1pdENoYW5nZSgpO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHRoaXMucHJvcHMpO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIFNpZGVFZmZlY3Q7XG4gICAgfShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShTaWRlRWZmZWN0LCBcImRpc3BsYXlOYW1lXCIsIFwiU2lkZUVmZmVjdChcIiArIGdldERpc3BsYXlOYW1lKFdyYXBwZWRDb21wb25lbnQpICsgXCIpXCIpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KFNpZGVFZmZlY3QsIFwiY2FuVXNlRE9NXCIsIGNhblVzZURPTSk7XG5cbiAgICByZXR1cm4gU2lkZUVmZmVjdDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3aXRoU2lkZUVmZmVjdDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC1qc3gtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIik7dmFyIGY9cmVxdWlyZShcInJlYWN0XCIpLGc9NjAxMDM7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgaD1TeW1ib2wuZm9yO2c9aChcInJlYWN0LmVsZW1lbnRcIik7ZXhwb3J0cy5GcmFnbWVudD1oKFwicmVhY3QuZnJhZ21lbnRcIil9dmFyIG09Zi5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcixuPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gcShjLGEsayl7dmFyIGIsZD17fSxlPW51bGwsbD1udWxsO3ZvaWQgMCE9PWsmJihlPVwiXCIrayk7dm9pZCAwIT09YS5rZXkmJihlPVwiXCIrYS5rZXkpO3ZvaWQgMCE9PWEucmVmJiYobD1hLnJlZik7Zm9yKGIgaW4gYSluLmNhbGwoYSxiKSYmIXAuaGFzT3duUHJvcGVydHkoYikmJihkW2JdPWFbYl0pO2lmKGMmJmMuZGVmYXVsdFByb3BzKWZvcihiIGluIGE9Yy5kZWZhdWx0UHJvcHMsYSl2b2lkIDA9PT1kW2JdJiYoZFtiXT1hW2JdKTtyZXR1cm57JCR0eXBlb2Y6Zyx0eXBlOmMsa2V5OmUscmVmOmwscHJvcHM6ZCxfb3duZXI6bS5jdXJyZW50fX1leHBvcnRzLmpzeD1xO2V4cG9ydHMuanN4cz1xO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjJcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4yXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIsIGNvbXBhcmUsIGNvbXBhcmVDb250ZXh0KSB7XG4gIHZhciByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCBvYmpBLCBvYmpCKSA6IHZvaWQgMDtcblxuICBpZiAocmV0ICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gISFyZXQ7XG4gIH1cblxuICBpZiAob2JqQSA9PT0gb2JqQikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSBcIm9iamVjdFwiIHx8ICFvYmpBIHx8IHR5cGVvZiBvYmpCICE9PSBcIm9iamVjdFwiIHx8ICFvYmpCKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBiSGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmJpbmQob2JqQik7XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwga2V5c0EubGVuZ3RoOyBpZHgrKykge1xuICAgIHZhciBrZXkgPSBrZXlzQVtpZHhdO1xuXG4gICAgaWYgKCFiSGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZUEgPSBvYmpBW2tleV07XG4gICAgdmFyIHZhbHVlQiA9IG9iakJba2V5XTtcblxuICAgIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIHZhbHVlQSwgdmFsdWVCLCBrZXkpIDogdm9pZCAwO1xuXG4gICAgaWYgKHJldCA9PT0gZmFsc2UgfHwgKHJldCA9PT0gdm9pZCAwICYmIHZhbHVlQSAhPT0gdmFsdWVCKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiOyIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2l0aFNpZGVFZmZlY3QgZnJvbSAncmVhY3Qtc2lkZS1lZmZlY3QnO1xuaW1wb3J0IGlzRXF1YWwgZnJvbSAncmVhY3QtZmFzdC1jb21wYXJlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgb2JqZWN0QXNzaWduIGZyb20gJ29iamVjdC1hc3NpZ24nO1xuXG52YXIgQVRUUklCVVRFX05BTUVTID0ge1xuICAgIEJPRFk6IFwiYm9keUF0dHJpYnV0ZXNcIixcbiAgICBIVE1MOiBcImh0bWxBdHRyaWJ1dGVzXCIsXG4gICAgVElUTEU6IFwidGl0bGVBdHRyaWJ1dGVzXCJcbn07XG5cbnZhciBUQUdfTkFNRVMgPSB7XG4gICAgQkFTRTogXCJiYXNlXCIsXG4gICAgQk9EWTogXCJib2R5XCIsXG4gICAgSEVBRDogXCJoZWFkXCIsXG4gICAgSFRNTDogXCJodG1sXCIsXG4gICAgTElOSzogXCJsaW5rXCIsXG4gICAgTUVUQTogXCJtZXRhXCIsXG4gICAgTk9TQ1JJUFQ6IFwibm9zY3JpcHRcIixcbiAgICBTQ1JJUFQ6IFwic2NyaXB0XCIsXG4gICAgU1RZTEU6IFwic3R5bGVcIixcbiAgICBUSVRMRTogXCJ0aXRsZVwiXG59O1xuXG52YXIgVkFMSURfVEFHX05BTUVTID0gT2JqZWN0LmtleXMoVEFHX05BTUVTKS5tYXAoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gVEFHX05BTUVTW25hbWVdO1xufSk7XG5cbnZhciBUQUdfUFJPUEVSVElFUyA9IHtcbiAgICBDSEFSU0VUOiBcImNoYXJzZXRcIixcbiAgICBDU1NfVEVYVDogXCJjc3NUZXh0XCIsXG4gICAgSFJFRjogXCJocmVmXCIsXG4gICAgSFRUUEVRVUlWOiBcImh0dHAtZXF1aXZcIixcbiAgICBJTk5FUl9IVE1MOiBcImlubmVySFRNTFwiLFxuICAgIElURU1fUFJPUDogXCJpdGVtcHJvcFwiLFxuICAgIE5BTUU6IFwibmFtZVwiLFxuICAgIFBST1BFUlRZOiBcInByb3BlcnR5XCIsXG4gICAgUkVMOiBcInJlbFwiLFxuICAgIFNSQzogXCJzcmNcIixcbiAgICBUQVJHRVQ6IFwidGFyZ2V0XCJcbn07XG5cbnZhciBSRUFDVF9UQUdfTUFQID0ge1xuICAgIGFjY2Vzc2tleTogXCJhY2Nlc3NLZXlcIixcbiAgICBjaGFyc2V0OiBcImNoYXJTZXRcIixcbiAgICBjbGFzczogXCJjbGFzc05hbWVcIixcbiAgICBjb250ZW50ZWRpdGFibGU6IFwiY29udGVudEVkaXRhYmxlXCIsXG4gICAgY29udGV4dG1lbnU6IFwiY29udGV4dE1lbnVcIixcbiAgICBcImh0dHAtZXF1aXZcIjogXCJodHRwRXF1aXZcIixcbiAgICBpdGVtcHJvcDogXCJpdGVtUHJvcFwiLFxuICAgIHRhYmluZGV4OiBcInRhYkluZGV4XCJcbn07XG5cbnZhciBIRUxNRVRfUFJPUFMgPSB7XG4gICAgREVGQVVMVF9USVRMRTogXCJkZWZhdWx0VGl0bGVcIixcbiAgICBERUZFUjogXCJkZWZlclwiLFxuICAgIEVOQ09ERV9TUEVDSUFMX0NIQVJBQ1RFUlM6IFwiZW5jb2RlU3BlY2lhbENoYXJhY3RlcnNcIixcbiAgICBPTl9DSEFOR0VfQ0xJRU5UX1NUQVRFOiBcIm9uQ2hhbmdlQ2xpZW50U3RhdGVcIixcbiAgICBUSVRMRV9URU1QTEFURTogXCJ0aXRsZVRlbXBsYXRlXCJcbn07XG5cbnZhciBIVE1MX1RBR19NQVAgPSBPYmplY3Qua2V5cyhSRUFDVF9UQUdfTUFQKS5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG4gICAgb2JqW1JFQUNUX1RBR19NQVBba2V5XV0gPSBrZXk7XG4gICAgcmV0dXJuIG9iajtcbn0sIHt9KTtcblxudmFyIFNFTEZfQ0xPU0lOR19UQUdTID0gW1RBR19OQU1FUy5OT1NDUklQVCwgVEFHX05BTUVTLlNDUklQVCwgVEFHX05BTUVTLlNUWUxFXTtcblxudmFyIEhFTE1FVF9BVFRSSUJVVEUgPSBcImRhdGEtcmVhY3QtaGVsbWV0XCI7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqO1xufSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuXG52YXIgY2xhc3NDYWxsQ2hlY2sgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufTtcblxudmFyIGNyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9O1xufSgpO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufTtcblxudmFyIGluaGVyaXRzID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufTtcblxudmFyIG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG9iaiwga2V5cykge1xuICB2YXIgdGFyZ2V0ID0ge307XG5cbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcbiAgICBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlO1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlO1xuICAgIHRhcmdldFtpXSA9IG9ialtpXTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG52YXIgcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiA9IGZ1bmN0aW9uIChzZWxmLCBjYWxsKSB7XG4gIGlmICghc2VsZikge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmO1xufTtcblxudmFyIGVuY29kZVNwZWNpYWxDaGFyYWN0ZXJzID0gZnVuY3Rpb24gZW5jb2RlU3BlY2lhbENoYXJhY3RlcnMoc3RyKSB7XG4gICAgdmFyIGVuY29kZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdHJ1ZTtcblxuICAgIGlmIChlbmNvZGUgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBTdHJpbmcoc3RyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gU3RyaW5nKHN0cikucmVwbGFjZSgvJi9nLCBcIiZhbXA7XCIpLnJlcGxhY2UoLzwvZywgXCImbHQ7XCIpLnJlcGxhY2UoLz4vZywgXCImZ3Q7XCIpLnJlcGxhY2UoL1wiL2csIFwiJnF1b3Q7XCIpLnJlcGxhY2UoLycvZywgXCImI3gyNztcIik7XG59O1xuXG52YXIgZ2V0VGl0bGVGcm9tUHJvcHNMaXN0ID0gZnVuY3Rpb24gZ2V0VGl0bGVGcm9tUHJvcHNMaXN0KHByb3BzTGlzdCkge1xuICAgIHZhciBpbm5lcm1vc3RUaXRsZSA9IGdldElubmVybW9zdFByb3BlcnR5KHByb3BzTGlzdCwgVEFHX05BTUVTLlRJVExFKTtcbiAgICB2YXIgaW5uZXJtb3N0VGVtcGxhdGUgPSBnZXRJbm5lcm1vc3RQcm9wZXJ0eShwcm9wc0xpc3QsIEhFTE1FVF9QUk9QUy5USVRMRV9URU1QTEFURSk7XG5cbiAgICBpZiAoaW5uZXJtb3N0VGVtcGxhdGUgJiYgaW5uZXJtb3N0VGl0bGUpIHtcbiAgICAgICAgLy8gdXNlIGZ1bmN0aW9uIGFyZyB0byBhdm9pZCBuZWVkIHRvIGVzY2FwZSAkIGNoYXJhY3RlcnNcbiAgICAgICAgcmV0dXJuIGlubmVybW9zdFRlbXBsYXRlLnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KGlubmVybW9zdFRpdGxlKSA/IGlubmVybW9zdFRpdGxlLmpvaW4oXCJcIikgOiBpbm5lcm1vc3RUaXRsZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGlubmVybW9zdERlZmF1bHRUaXRsZSA9IGdldElubmVybW9zdFByb3BlcnR5KHByb3BzTGlzdCwgSEVMTUVUX1BST1BTLkRFRkFVTFRfVElUTEUpO1xuXG4gICAgcmV0dXJuIGlubmVybW9zdFRpdGxlIHx8IGlubmVybW9zdERlZmF1bHRUaXRsZSB8fCB1bmRlZmluZWQ7XG59O1xuXG52YXIgZ2V0T25DaGFuZ2VDbGllbnRTdGF0ZSA9IGZ1bmN0aW9uIGdldE9uQ2hhbmdlQ2xpZW50U3RhdGUocHJvcHNMaXN0KSB7XG4gICAgcmV0dXJuIGdldElubmVybW9zdFByb3BlcnR5KHByb3BzTGlzdCwgSEVMTUVUX1BST1BTLk9OX0NIQU5HRV9DTElFTlRfU1RBVEUpIHx8IGZ1bmN0aW9uICgpIHt9O1xufTtcblxudmFyIGdldEF0dHJpYnV0ZXNGcm9tUHJvcHNMaXN0ID0gZnVuY3Rpb24gZ2V0QXR0cmlidXRlc0Zyb21Qcm9wc0xpc3QodGFnVHlwZSwgcHJvcHNMaXN0KSB7XG4gICAgcmV0dXJuIHByb3BzTGlzdC5maWx0ZXIoZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgcHJvcHNbdGFnVHlwZV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgfSkubWFwKGZ1bmN0aW9uIChwcm9wcykge1xuICAgICAgICByZXR1cm4gcHJvcHNbdGFnVHlwZV07XG4gICAgfSkucmVkdWNlKGZ1bmN0aW9uICh0YWdBdHRycywgY3VycmVudCkge1xuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHRhZ0F0dHJzLCBjdXJyZW50KTtcbiAgICB9LCB7fSk7XG59O1xuXG52YXIgZ2V0QmFzZVRhZ0Zyb21Qcm9wc0xpc3QgPSBmdW5jdGlvbiBnZXRCYXNlVGFnRnJvbVByb3BzTGlzdChwcmltYXJ5QXR0cmlidXRlcywgcHJvcHNMaXN0KSB7XG4gICAgcmV0dXJuIHByb3BzTGlzdC5maWx0ZXIoZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgcHJvcHNbVEFHX05BTUVTLkJBU0VdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgIH0pLm1hcChmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzW1RBR19OQU1FUy5CQVNFXTtcbiAgICB9KS5yZXZlcnNlKCkucmVkdWNlKGZ1bmN0aW9uIChpbm5lcm1vc3RCYXNlVGFnLCB0YWcpIHtcbiAgICAgICAgaWYgKCFpbm5lcm1vc3RCYXNlVGFnLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh0YWcpO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgYXR0cmlidXRlS2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgICAgICB2YXIgbG93ZXJDYXNlQXR0cmlidXRlS2V5ID0gYXR0cmlidXRlS2V5LnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAocHJpbWFyeUF0dHJpYnV0ZXMuaW5kZXhPZihsb3dlckNhc2VBdHRyaWJ1dGVLZXkpICE9PSAtMSAmJiB0YWdbbG93ZXJDYXNlQXR0cmlidXRlS2V5XSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW5uZXJtb3N0QmFzZVRhZy5jb25jYXQodGFnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5uZXJtb3N0QmFzZVRhZztcbiAgICB9LCBbXSk7XG59O1xuXG52YXIgZ2V0VGFnc0Zyb21Qcm9wc0xpc3QgPSBmdW5jdGlvbiBnZXRUYWdzRnJvbVByb3BzTGlzdCh0YWdOYW1lLCBwcmltYXJ5QXR0cmlidXRlcywgcHJvcHNMaXN0KSB7XG4gICAgLy8gQ2FsY3VsYXRlIGxpc3Qgb2YgdGFncywgZ2l2aW5nIHByaW9yaXR5IGlubmVybW9zdCBjb21wb25lbnQgKGVuZCBvZiB0aGUgcHJvcHNsaXN0KVxuICAgIHZhciBhcHByb3ZlZFNlZW5UYWdzID0ge307XG5cbiAgICByZXR1cm4gcHJvcHNMaXN0LmZpbHRlcihmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocHJvcHNbdGFnTmFtZV0pKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHByb3BzW3RhZ05hbWVdICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB3YXJuKFwiSGVsbWV0OiBcIiArIHRhZ05hbWUgKyBcIiBzaG91bGQgYmUgb2YgdHlwZSBcXFwiQXJyYXlcXFwiLiBJbnN0ZWFkIGZvdW5kIHR5cGUgXFxcIlwiICsgX3R5cGVvZihwcm9wc1t0YWdOYW1lXSkgKyBcIlxcXCJcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pLm1hcChmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzW3RhZ05hbWVdO1xuICAgIH0pLnJldmVyc2UoKS5yZWR1Y2UoZnVuY3Rpb24gKGFwcHJvdmVkVGFncywgaW5zdGFuY2VUYWdzKSB7XG4gICAgICAgIHZhciBpbnN0YW5jZVNlZW5UYWdzID0ge307XG5cbiAgICAgICAgaW5zdGFuY2VUYWdzLmZpbHRlcihmdW5jdGlvbiAodGFnKSB7XG4gICAgICAgICAgICB2YXIgcHJpbWFyeUF0dHJpYnV0ZUtleSA9IHZvaWQgMDtcbiAgICAgICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXModGFnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVLZXkgPSBrZXlzW2ldO1xuICAgICAgICAgICAgICAgIHZhciBsb3dlckNhc2VBdHRyaWJ1dGVLZXkgPSBhdHRyaWJ1dGVLZXkudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgICAgICAgIC8vIFNwZWNpYWwgcnVsZSB3aXRoIGxpbmsgdGFncywgc2luY2UgcmVsIGFuZCBocmVmIGFyZSBib3RoIHByaW1hcnkgdGFncywgcmVsIHRha2VzIHByaW9yaXR5XG4gICAgICAgICAgICAgICAgaWYgKHByaW1hcnlBdHRyaWJ1dGVzLmluZGV4T2YobG93ZXJDYXNlQXR0cmlidXRlS2V5KSAhPT0gLTEgJiYgIShwcmltYXJ5QXR0cmlidXRlS2V5ID09PSBUQUdfUFJPUEVSVElFUy5SRUwgJiYgdGFnW3ByaW1hcnlBdHRyaWJ1dGVLZXldLnRvTG93ZXJDYXNlKCkgPT09IFwiY2Fub25pY2FsXCIpICYmICEobG93ZXJDYXNlQXR0cmlidXRlS2V5ID09PSBUQUdfUFJPUEVSVElFUy5SRUwgJiYgdGFnW2xvd2VyQ2FzZUF0dHJpYnV0ZUtleV0udG9Mb3dlckNhc2UoKSA9PT0gXCJzdHlsZXNoZWV0XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHByaW1hcnlBdHRyaWJ1dGVLZXkgPSBsb3dlckNhc2VBdHRyaWJ1dGVLZXk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgaW5uZXJIVE1MIHdoaWNoIGRvZXNuJ3Qgd29yayBsb3dlcmNhc2VkXG4gICAgICAgICAgICAgICAgaWYgKHByaW1hcnlBdHRyaWJ1dGVzLmluZGV4T2YoYXR0cmlidXRlS2V5KSAhPT0gLTEgJiYgKGF0dHJpYnV0ZUtleSA9PT0gVEFHX1BST1BFUlRJRVMuSU5ORVJfSFRNTCB8fCBhdHRyaWJ1dGVLZXkgPT09IFRBR19QUk9QRVJUSUVTLkNTU19URVhUIHx8IGF0dHJpYnV0ZUtleSA9PT0gVEFHX1BST1BFUlRJRVMuSVRFTV9QUk9QKSkge1xuICAgICAgICAgICAgICAgICAgICBwcmltYXJ5QXR0cmlidXRlS2V5ID0gYXR0cmlidXRlS2V5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFwcmltYXJ5QXR0cmlidXRlS2V5IHx8ICF0YWdbcHJpbWFyeUF0dHJpYnV0ZUtleV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRhZ1twcmltYXJ5QXR0cmlidXRlS2V5XS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgICAgICBpZiAoIWFwcHJvdmVkU2VlblRhZ3NbcHJpbWFyeUF0dHJpYnV0ZUtleV0pIHtcbiAgICAgICAgICAgICAgICBhcHByb3ZlZFNlZW5UYWdzW3ByaW1hcnlBdHRyaWJ1dGVLZXldID0ge307XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghaW5zdGFuY2VTZWVuVGFnc1twcmltYXJ5QXR0cmlidXRlS2V5XSkge1xuICAgICAgICAgICAgICAgIGluc3RhbmNlU2VlblRhZ3NbcHJpbWFyeUF0dHJpYnV0ZUtleV0gPSB7fTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFhcHByb3ZlZFNlZW5UYWdzW3ByaW1hcnlBdHRyaWJ1dGVLZXldW3ZhbHVlXSkge1xuICAgICAgICAgICAgICAgIGluc3RhbmNlU2VlblRhZ3NbcHJpbWFyeUF0dHJpYnV0ZUtleV1bdmFsdWVdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KS5yZXZlcnNlKCkuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBwcm92ZWRUYWdzLnB1c2godGFnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gVXBkYXRlIHNlZW4gdGFncyB3aXRoIHRhZ3MgZnJvbSB0aGlzIGluc3RhbmNlXG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoaW5zdGFuY2VTZWVuVGFncyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZUtleSA9IGtleXNbaV07XG4gICAgICAgICAgICB2YXIgdGFnVW5pb24gPSBvYmplY3RBc3NpZ24oe30sIGFwcHJvdmVkU2VlblRhZ3NbYXR0cmlidXRlS2V5XSwgaW5zdGFuY2VTZWVuVGFnc1thdHRyaWJ1dGVLZXldKTtcblxuICAgICAgICAgICAgYXBwcm92ZWRTZWVuVGFnc1thdHRyaWJ1dGVLZXldID0gdGFnVW5pb247XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYXBwcm92ZWRUYWdzO1xuICAgIH0sIFtdKS5yZXZlcnNlKCk7XG59O1xuXG52YXIgZ2V0SW5uZXJtb3N0UHJvcGVydHkgPSBmdW5jdGlvbiBnZXRJbm5lcm1vc3RQcm9wZXJ0eShwcm9wc0xpc3QsIHByb3BlcnR5KSB7XG4gICAgZm9yICh2YXIgaSA9IHByb3BzTGlzdC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICB2YXIgcHJvcHMgPSBwcm9wc0xpc3RbaV07XG5cbiAgICAgICAgaWYgKHByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHByb3BzW3Byb3BlcnR5XTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xufTtcblxudmFyIHJlZHVjZVByb3BzVG9TdGF0ZSA9IGZ1bmN0aW9uIHJlZHVjZVByb3BzVG9TdGF0ZShwcm9wc0xpc3QpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBiYXNlVGFnOiBnZXRCYXNlVGFnRnJvbVByb3BzTGlzdChbVEFHX1BST1BFUlRJRVMuSFJFRiwgVEFHX1BST1BFUlRJRVMuVEFSR0VUXSwgcHJvcHNMaXN0KSxcbiAgICAgICAgYm9keUF0dHJpYnV0ZXM6IGdldEF0dHJpYnV0ZXNGcm9tUHJvcHNMaXN0KEFUVFJJQlVURV9OQU1FUy5CT0RZLCBwcm9wc0xpc3QpLFxuICAgICAgICBkZWZlcjogZ2V0SW5uZXJtb3N0UHJvcGVydHkocHJvcHNMaXN0LCBIRUxNRVRfUFJPUFMuREVGRVIpLFxuICAgICAgICBlbmNvZGU6IGdldElubmVybW9zdFByb3BlcnR5KHByb3BzTGlzdCwgSEVMTUVUX1BST1BTLkVOQ09ERV9TUEVDSUFMX0NIQVJBQ1RFUlMpLFxuICAgICAgICBodG1sQXR0cmlidXRlczogZ2V0QXR0cmlidXRlc0Zyb21Qcm9wc0xpc3QoQVRUUklCVVRFX05BTUVTLkhUTUwsIHByb3BzTGlzdCksXG4gICAgICAgIGxpbmtUYWdzOiBnZXRUYWdzRnJvbVByb3BzTGlzdChUQUdfTkFNRVMuTElOSywgW1RBR19QUk9QRVJUSUVTLlJFTCwgVEFHX1BST1BFUlRJRVMuSFJFRl0sIHByb3BzTGlzdCksXG4gICAgICAgIG1ldGFUYWdzOiBnZXRUYWdzRnJvbVByb3BzTGlzdChUQUdfTkFNRVMuTUVUQSwgW1RBR19QUk9QRVJUSUVTLk5BTUUsIFRBR19QUk9QRVJUSUVTLkNIQVJTRVQsIFRBR19QUk9QRVJUSUVTLkhUVFBFUVVJViwgVEFHX1BST1BFUlRJRVMuUFJPUEVSVFksIFRBR19QUk9QRVJUSUVTLklURU1fUFJPUF0sIHByb3BzTGlzdCksXG4gICAgICAgIG5vc2NyaXB0VGFnczogZ2V0VGFnc0Zyb21Qcm9wc0xpc3QoVEFHX05BTUVTLk5PU0NSSVBULCBbVEFHX1BST1BFUlRJRVMuSU5ORVJfSFRNTF0sIHByb3BzTGlzdCksXG4gICAgICAgIG9uQ2hhbmdlQ2xpZW50U3RhdGU6IGdldE9uQ2hhbmdlQ2xpZW50U3RhdGUocHJvcHNMaXN0KSxcbiAgICAgICAgc2NyaXB0VGFnczogZ2V0VGFnc0Zyb21Qcm9wc0xpc3QoVEFHX05BTUVTLlNDUklQVCwgW1RBR19QUk9QRVJUSUVTLlNSQywgVEFHX1BST1BFUlRJRVMuSU5ORVJfSFRNTF0sIHByb3BzTGlzdCksXG4gICAgICAgIHN0eWxlVGFnczogZ2V0VGFnc0Zyb21Qcm9wc0xpc3QoVEFHX05BTUVTLlNUWUxFLCBbVEFHX1BST1BFUlRJRVMuQ1NTX1RFWFRdLCBwcm9wc0xpc3QpLFxuICAgICAgICB0aXRsZTogZ2V0VGl0bGVGcm9tUHJvcHNMaXN0KHByb3BzTGlzdCksXG4gICAgICAgIHRpdGxlQXR0cmlidXRlczogZ2V0QXR0cmlidXRlc0Zyb21Qcm9wc0xpc3QoQVRUUklCVVRFX05BTUVTLlRJVExFLCBwcm9wc0xpc3QpXG4gICAgfTtcbn07XG5cbnZhciByYWZQb2x5ZmlsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2xvY2sgPSBEYXRlLm5vdygpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB2YXIgY3VycmVudFRpbWUgPSBEYXRlLm5vdygpO1xuXG4gICAgICAgIGlmIChjdXJyZW50VGltZSAtIGNsb2NrID4gMTYpIHtcbiAgICAgICAgICAgIGNsb2NrID0gY3VycmVudFRpbWU7XG4gICAgICAgICAgICBjYWxsYmFjayhjdXJyZW50VGltZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByYWZQb2x5ZmlsbChjYWxsYmFjayk7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgfVxuICAgIH07XG59KCk7XG5cbnZhciBjYWZQb2x5ZmlsbCA9IGZ1bmN0aW9uIGNhZlBvbHlmaWxsKGlkKSB7XG4gICAgcmV0dXJuIGNsZWFyVGltZW91dChpZCk7XG59O1xuXG52YXIgcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgJiYgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdykgfHwgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHJhZlBvbHlmaWxsIDogZ2xvYmFsLnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCByYWZQb2x5ZmlsbDtcblxudmFyIGNhbmNlbEFuaW1hdGlvbkZyYW1lID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWUgfHwgd2luZG93Lm1vekNhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IGNhZlBvbHlmaWxsIDogZ2xvYmFsLmNhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IGNhZlBvbHlmaWxsO1xuXG52YXIgd2FybiA9IGZ1bmN0aW9uIHdhcm4obXNnKSB7XG4gICAgcmV0dXJuIGNvbnNvbGUgJiYgdHlwZW9mIGNvbnNvbGUud2FybiA9PT0gXCJmdW5jdGlvblwiICYmIGNvbnNvbGUud2Fybihtc2cpO1xufTtcblxudmFyIF9oZWxtZXRDYWxsYmFjayA9IG51bGw7XG5cbnZhciBoYW5kbGVDbGllbnRTdGF0ZUNoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUNsaWVudFN0YXRlQ2hhbmdlKG5ld1N0YXRlKSB7XG4gICAgaWYgKF9oZWxtZXRDYWxsYmFjaykge1xuICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShfaGVsbWV0Q2FsbGJhY2spO1xuICAgIH1cblxuICAgIGlmIChuZXdTdGF0ZS5kZWZlcikge1xuICAgICAgICBfaGVsbWV0Q2FsbGJhY2sgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29tbWl0VGFnQ2hhbmdlcyhuZXdTdGF0ZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF9oZWxtZXRDYWxsYmFjayA9IG51bGw7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29tbWl0VGFnQ2hhbmdlcyhuZXdTdGF0ZSk7XG4gICAgICAgIF9oZWxtZXRDYWxsYmFjayA9IG51bGw7XG4gICAgfVxufTtcblxudmFyIGNvbW1pdFRhZ0NoYW5nZXMgPSBmdW5jdGlvbiBjb21taXRUYWdDaGFuZ2VzKG5ld1N0YXRlLCBjYikge1xuICAgIHZhciBiYXNlVGFnID0gbmV3U3RhdGUuYmFzZVRhZyxcbiAgICAgICAgYm9keUF0dHJpYnV0ZXMgPSBuZXdTdGF0ZS5ib2R5QXR0cmlidXRlcyxcbiAgICAgICAgaHRtbEF0dHJpYnV0ZXMgPSBuZXdTdGF0ZS5odG1sQXR0cmlidXRlcyxcbiAgICAgICAgbGlua1RhZ3MgPSBuZXdTdGF0ZS5saW5rVGFncyxcbiAgICAgICAgbWV0YVRhZ3MgPSBuZXdTdGF0ZS5tZXRhVGFncyxcbiAgICAgICAgbm9zY3JpcHRUYWdzID0gbmV3U3RhdGUubm9zY3JpcHRUYWdzLFxuICAgICAgICBvbkNoYW5nZUNsaWVudFN0YXRlID0gbmV3U3RhdGUub25DaGFuZ2VDbGllbnRTdGF0ZSxcbiAgICAgICAgc2NyaXB0VGFncyA9IG5ld1N0YXRlLnNjcmlwdFRhZ3MsXG4gICAgICAgIHN0eWxlVGFncyA9IG5ld1N0YXRlLnN0eWxlVGFncyxcbiAgICAgICAgdGl0bGUgPSBuZXdTdGF0ZS50aXRsZSxcbiAgICAgICAgdGl0bGVBdHRyaWJ1dGVzID0gbmV3U3RhdGUudGl0bGVBdHRyaWJ1dGVzO1xuXG4gICAgdXBkYXRlQXR0cmlidXRlcyhUQUdfTkFNRVMuQk9EWSwgYm9keUF0dHJpYnV0ZXMpO1xuICAgIHVwZGF0ZUF0dHJpYnV0ZXMoVEFHX05BTUVTLkhUTUwsIGh0bWxBdHRyaWJ1dGVzKTtcblxuICAgIHVwZGF0ZVRpdGxlKHRpdGxlLCB0aXRsZUF0dHJpYnV0ZXMpO1xuXG4gICAgdmFyIHRhZ1VwZGF0ZXMgPSB7XG4gICAgICAgIGJhc2VUYWc6IHVwZGF0ZVRhZ3MoVEFHX05BTUVTLkJBU0UsIGJhc2VUYWcpLFxuICAgICAgICBsaW5rVGFnczogdXBkYXRlVGFncyhUQUdfTkFNRVMuTElOSywgbGlua1RhZ3MpLFxuICAgICAgICBtZXRhVGFnczogdXBkYXRlVGFncyhUQUdfTkFNRVMuTUVUQSwgbWV0YVRhZ3MpLFxuICAgICAgICBub3NjcmlwdFRhZ3M6IHVwZGF0ZVRhZ3MoVEFHX05BTUVTLk5PU0NSSVBULCBub3NjcmlwdFRhZ3MpLFxuICAgICAgICBzY3JpcHRUYWdzOiB1cGRhdGVUYWdzKFRBR19OQU1FUy5TQ1JJUFQsIHNjcmlwdFRhZ3MpLFxuICAgICAgICBzdHlsZVRhZ3M6IHVwZGF0ZVRhZ3MoVEFHX05BTUVTLlNUWUxFLCBzdHlsZVRhZ3MpXG4gICAgfTtcblxuICAgIHZhciBhZGRlZFRhZ3MgPSB7fTtcbiAgICB2YXIgcmVtb3ZlZFRhZ3MgPSB7fTtcblxuICAgIE9iamVjdC5rZXlzKHRhZ1VwZGF0ZXMpLmZvckVhY2goZnVuY3Rpb24gKHRhZ1R5cGUpIHtcbiAgICAgICAgdmFyIF90YWdVcGRhdGVzJHRhZ1R5cGUgPSB0YWdVcGRhdGVzW3RhZ1R5cGVdLFxuICAgICAgICAgICAgbmV3VGFncyA9IF90YWdVcGRhdGVzJHRhZ1R5cGUubmV3VGFncyxcbiAgICAgICAgICAgIG9sZFRhZ3MgPSBfdGFnVXBkYXRlcyR0YWdUeXBlLm9sZFRhZ3M7XG5cblxuICAgICAgICBpZiAobmV3VGFncy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGFkZGVkVGFnc1t0YWdUeXBlXSA9IG5ld1RhZ3M7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9sZFRhZ3MubGVuZ3RoKSB7XG4gICAgICAgICAgICByZW1vdmVkVGFnc1t0YWdUeXBlXSA9IHRhZ1VwZGF0ZXNbdGFnVHlwZV0ub2xkVGFncztcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgY2IgJiYgY2IoKTtcblxuICAgIG9uQ2hhbmdlQ2xpZW50U3RhdGUobmV3U3RhdGUsIGFkZGVkVGFncywgcmVtb3ZlZFRhZ3MpO1xufTtcblxudmFyIGZsYXR0ZW5BcnJheSA9IGZ1bmN0aW9uIGZsYXR0ZW5BcnJheShwb3NzaWJsZUFycmF5KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocG9zc2libGVBcnJheSkgPyBwb3NzaWJsZUFycmF5LmpvaW4oXCJcIikgOiBwb3NzaWJsZUFycmF5O1xufTtcblxudmFyIHVwZGF0ZVRpdGxlID0gZnVuY3Rpb24gdXBkYXRlVGl0bGUodGl0bGUsIGF0dHJpYnV0ZXMpIHtcbiAgICBpZiAodHlwZW9mIHRpdGxlICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50LnRpdGxlICE9PSB0aXRsZSkge1xuICAgICAgICBkb2N1bWVudC50aXRsZSA9IGZsYXR0ZW5BcnJheSh0aXRsZSk7XG4gICAgfVxuXG4gICAgdXBkYXRlQXR0cmlidXRlcyhUQUdfTkFNRVMuVElUTEUsIGF0dHJpYnV0ZXMpO1xufTtcblxudmFyIHVwZGF0ZUF0dHJpYnV0ZXMgPSBmdW5jdGlvbiB1cGRhdGVBdHRyaWJ1dGVzKHRhZ05hbWUsIGF0dHJpYnV0ZXMpIHtcbiAgICB2YXIgZWxlbWVudFRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ05hbWUpWzBdO1xuXG4gICAgaWYgKCFlbGVtZW50VGFnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgaGVsbWV0QXR0cmlidXRlU3RyaW5nID0gZWxlbWVudFRhZy5nZXRBdHRyaWJ1dGUoSEVMTUVUX0FUVFJJQlVURSk7XG4gICAgdmFyIGhlbG1ldEF0dHJpYnV0ZXMgPSBoZWxtZXRBdHRyaWJ1dGVTdHJpbmcgPyBoZWxtZXRBdHRyaWJ1dGVTdHJpbmcuc3BsaXQoXCIsXCIpIDogW107XG4gICAgdmFyIGF0dHJpYnV0ZXNUb1JlbW92ZSA9IFtdLmNvbmNhdChoZWxtZXRBdHRyaWJ1dGVzKTtcbiAgICB2YXIgYXR0cmlidXRlS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdHRyaWJ1dGVLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBhdHRyaWJ1dGUgPSBhdHRyaWJ1dGVLZXlzW2ldO1xuICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2F0dHJpYnV0ZV0gfHwgXCJcIjtcblxuICAgICAgICBpZiAoZWxlbWVudFRhZy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlKSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGVsZW1lbnRUYWcuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgdmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhlbG1ldEF0dHJpYnV0ZXMuaW5kZXhPZihhdHRyaWJ1dGUpID09PSAtMSkge1xuICAgICAgICAgICAgaGVsbWV0QXR0cmlidXRlcy5wdXNoKGF0dHJpYnV0ZSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaW5kZXhUb1NhdmUgPSBhdHRyaWJ1dGVzVG9SZW1vdmUuaW5kZXhPZihhdHRyaWJ1dGUpO1xuICAgICAgICBpZiAoaW5kZXhUb1NhdmUgIT09IC0xKSB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzVG9SZW1vdmUuc3BsaWNlKGluZGV4VG9TYXZlLCAxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gYXR0cmlidXRlc1RvUmVtb3ZlLmxlbmd0aCAtIDE7IF9pID49IDA7IF9pLS0pIHtcbiAgICAgICAgZWxlbWVudFRhZy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlc1RvUmVtb3ZlW19pXSk7XG4gICAgfVxuXG4gICAgaWYgKGhlbG1ldEF0dHJpYnV0ZXMubGVuZ3RoID09PSBhdHRyaWJ1dGVzVG9SZW1vdmUubGVuZ3RoKSB7XG4gICAgICAgIGVsZW1lbnRUYWcucmVtb3ZlQXR0cmlidXRlKEhFTE1FVF9BVFRSSUJVVEUpO1xuICAgIH0gZWxzZSBpZiAoZWxlbWVudFRhZy5nZXRBdHRyaWJ1dGUoSEVMTUVUX0FUVFJJQlVURSkgIT09IGF0dHJpYnV0ZUtleXMuam9pbihcIixcIikpIHtcbiAgICAgICAgZWxlbWVudFRhZy5zZXRBdHRyaWJ1dGUoSEVMTUVUX0FUVFJJQlVURSwgYXR0cmlidXRlS2V5cy5qb2luKFwiLFwiKSk7XG4gICAgfVxufTtcblxudmFyIHVwZGF0ZVRhZ3MgPSBmdW5jdGlvbiB1cGRhdGVUYWdzKHR5cGUsIHRhZ3MpIHtcbiAgICB2YXIgaGVhZEVsZW1lbnQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoVEFHX05BTUVTLkhFQUQpO1xuICAgIHZhciB0YWdOb2RlcyA9IGhlYWRFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodHlwZSArIFwiW1wiICsgSEVMTUVUX0FUVFJJQlVURSArIFwiXVwiKTtcbiAgICB2YXIgb2xkVGFncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRhZ05vZGVzKTtcbiAgICB2YXIgbmV3VGFncyA9IFtdO1xuICAgIHZhciBpbmRleFRvRGVsZXRlID0gdm9pZCAwO1xuXG4gICAgaWYgKHRhZ3MgJiYgdGFncy5sZW5ndGgpIHtcbiAgICAgICAgdGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgICAgICAgIHZhciBuZXdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0eXBlKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgYXR0cmlidXRlIGluIHRhZykge1xuICAgICAgICAgICAgICAgIGlmICh0YWcuaGFzT3duUHJvcGVydHkoYXR0cmlidXRlKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cmlidXRlID09PSBUQUdfUFJPUEVSVElFUy5JTk5FUl9IVE1MKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdFbGVtZW50LmlubmVySFRNTCA9IHRhZy5pbm5lckhUTUw7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYXR0cmlidXRlID09PSBUQUdfUFJPUEVSVElFUy5DU1NfVEVYVCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0VsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gdGFnLmNzc1RleHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGFnLmNzc1RleHQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IHR5cGVvZiB0YWdbYXR0cmlidXRlXSA9PT0gXCJ1bmRlZmluZWRcIiA/IFwiXCIgOiB0YWdbYXR0cmlidXRlXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZShIRUxNRVRfQVRUUklCVVRFLCBcInRydWVcIik7XG5cbiAgICAgICAgICAgIC8vIFJlbW92ZSBhIGR1cGxpY2F0ZSB0YWcgZnJvbSBkb21UYWdzdG9SZW1vdmUsIHNvIGl0IGlzbid0IGNsZWFyZWQuXG4gICAgICAgICAgICBpZiAob2xkVGFncy5zb21lKGZ1bmN0aW9uIChleGlzdGluZ1RhZywgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICBpbmRleFRvRGVsZXRlID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld0VsZW1lbnQuaXNFcXVhbE5vZGUoZXhpc3RpbmdUYWcpO1xuICAgICAgICAgICAgfSkpIHtcbiAgICAgICAgICAgICAgICBvbGRUYWdzLnNwbGljZShpbmRleFRvRGVsZXRlLCAxKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3VGFncy5wdXNoKG5ld0VsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbGRUYWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgICByZXR1cm4gdGFnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFnKTtcbiAgICB9KTtcbiAgICBuZXdUYWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgICByZXR1cm4gaGVhZEVsZW1lbnQuYXBwZW5kQ2hpbGQodGFnKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIG9sZFRhZ3M6IG9sZFRhZ3MsXG4gICAgICAgIG5ld1RhZ3M6IG5ld1RhZ3NcbiAgICB9O1xufTtcblxudmFyIGdlbmVyYXRlRWxlbWVudEF0dHJpYnV0ZXNBc1N0cmluZyA9IGZ1bmN0aW9uIGdlbmVyYXRlRWxlbWVudEF0dHJpYnV0ZXNBc1N0cmluZyhhdHRyaWJ1dGVzKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLnJlZHVjZShmdW5jdGlvbiAoc3RyLCBrZXkpIHtcbiAgICAgICAgdmFyIGF0dHIgPSB0eXBlb2YgYXR0cmlidXRlc1trZXldICE9PSBcInVuZGVmaW5lZFwiID8ga2V5ICsgXCI9XFxcIlwiICsgYXR0cmlidXRlc1trZXldICsgXCJcXFwiXCIgOiBcIlwiICsga2V5O1xuICAgICAgICByZXR1cm4gc3RyID8gc3RyICsgXCIgXCIgKyBhdHRyIDogYXR0cjtcbiAgICB9LCBcIlwiKTtcbn07XG5cbnZhciBnZW5lcmF0ZVRpdGxlQXNTdHJpbmcgPSBmdW5jdGlvbiBnZW5lcmF0ZVRpdGxlQXNTdHJpbmcodHlwZSwgdGl0bGUsIGF0dHJpYnV0ZXMsIGVuY29kZSkge1xuICAgIHZhciBhdHRyaWJ1dGVTdHJpbmcgPSBnZW5lcmF0ZUVsZW1lbnRBdHRyaWJ1dGVzQXNTdHJpbmcoYXR0cmlidXRlcyk7XG4gICAgdmFyIGZsYXR0ZW5lZFRpdGxlID0gZmxhdHRlbkFycmF5KHRpdGxlKTtcbiAgICByZXR1cm4gYXR0cmlidXRlU3RyaW5nID8gXCI8XCIgKyB0eXBlICsgXCIgXCIgKyBIRUxNRVRfQVRUUklCVVRFICsgXCI9XFxcInRydWVcXFwiIFwiICsgYXR0cmlidXRlU3RyaW5nICsgXCI+XCIgKyBlbmNvZGVTcGVjaWFsQ2hhcmFjdGVycyhmbGF0dGVuZWRUaXRsZSwgZW5jb2RlKSArIFwiPC9cIiArIHR5cGUgKyBcIj5cIiA6IFwiPFwiICsgdHlwZSArIFwiIFwiICsgSEVMTUVUX0FUVFJJQlVURSArIFwiPVxcXCJ0cnVlXFxcIj5cIiArIGVuY29kZVNwZWNpYWxDaGFyYWN0ZXJzKGZsYXR0ZW5lZFRpdGxlLCBlbmNvZGUpICsgXCI8L1wiICsgdHlwZSArIFwiPlwiO1xufTtcblxudmFyIGdlbmVyYXRlVGFnc0FzU3RyaW5nID0gZnVuY3Rpb24gZ2VuZXJhdGVUYWdzQXNTdHJpbmcodHlwZSwgdGFncywgZW5jb2RlKSB7XG4gICAgcmV0dXJuIHRhZ3MucmVkdWNlKGZ1bmN0aW9uIChzdHIsIHRhZykge1xuICAgICAgICB2YXIgYXR0cmlidXRlSHRtbCA9IE9iamVjdC5rZXlzKHRhZykuZmlsdGVyKGZ1bmN0aW9uIChhdHRyaWJ1dGUpIHtcbiAgICAgICAgICAgIHJldHVybiAhKGF0dHJpYnV0ZSA9PT0gVEFHX1BST1BFUlRJRVMuSU5ORVJfSFRNTCB8fCBhdHRyaWJ1dGUgPT09IFRBR19QUk9QRVJUSUVTLkNTU19URVhUKTtcbiAgICAgICAgfSkucmVkdWNlKGZ1bmN0aW9uIChzdHJpbmcsIGF0dHJpYnV0ZSkge1xuICAgICAgICAgICAgdmFyIGF0dHIgPSB0eXBlb2YgdGFnW2F0dHJpYnV0ZV0gPT09IFwidW5kZWZpbmVkXCIgPyBhdHRyaWJ1dGUgOiBhdHRyaWJ1dGUgKyBcIj1cXFwiXCIgKyBlbmNvZGVTcGVjaWFsQ2hhcmFjdGVycyh0YWdbYXR0cmlidXRlXSwgZW5jb2RlKSArIFwiXFxcIlwiO1xuICAgICAgICAgICAgcmV0dXJuIHN0cmluZyA/IHN0cmluZyArIFwiIFwiICsgYXR0ciA6IGF0dHI7XG4gICAgICAgIH0sIFwiXCIpO1xuXG4gICAgICAgIHZhciB0YWdDb250ZW50ID0gdGFnLmlubmVySFRNTCB8fCB0YWcuY3NzVGV4dCB8fCBcIlwiO1xuXG4gICAgICAgIHZhciBpc1NlbGZDbG9zaW5nID0gU0VMRl9DTE9TSU5HX1RBR1MuaW5kZXhPZih0eXBlKSA9PT0gLTE7XG5cbiAgICAgICAgcmV0dXJuIHN0ciArIFwiPFwiICsgdHlwZSArIFwiIFwiICsgSEVMTUVUX0FUVFJJQlVURSArIFwiPVxcXCJ0cnVlXFxcIiBcIiArIGF0dHJpYnV0ZUh0bWwgKyAoaXNTZWxmQ2xvc2luZyA/IFwiLz5cIiA6IFwiPlwiICsgdGFnQ29udGVudCArIFwiPC9cIiArIHR5cGUgKyBcIj5cIik7XG4gICAgfSwgXCJcIik7XG59O1xuXG52YXIgY29udmVydEVsZW1lbnRBdHRyaWJ1dGVzdG9SZWFjdFByb3BzID0gZnVuY3Rpb24gY29udmVydEVsZW1lbnRBdHRyaWJ1dGVzdG9SZWFjdFByb3BzKGF0dHJpYnV0ZXMpIHtcbiAgICB2YXIgaW5pdFByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG4gICAgICAgIG9ialtSRUFDVF9UQUdfTUFQW2tleV0gfHwga2V5XSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9LCBpbml0UHJvcHMpO1xufTtcblxudmFyIGNvbnZlcnRSZWFjdFByb3BzdG9IdG1sQXR0cmlidXRlcyA9IGZ1bmN0aW9uIGNvbnZlcnRSZWFjdFByb3BzdG9IdG1sQXR0cmlidXRlcyhwcm9wcykge1xuICAgIHZhciBpbml0QXR0cmlidXRlcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMocHJvcHMpLnJlZHVjZShmdW5jdGlvbiAob2JqLCBrZXkpIHtcbiAgICAgICAgb2JqW0hUTUxfVEFHX01BUFtrZXldIHx8IGtleV0gPSBwcm9wc1trZXldO1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH0sIGluaXRBdHRyaWJ1dGVzKTtcbn07XG5cbnZhciBnZW5lcmF0ZVRpdGxlQXNSZWFjdENvbXBvbmVudCA9IGZ1bmN0aW9uIGdlbmVyYXRlVGl0bGVBc1JlYWN0Q29tcG9uZW50KHR5cGUsIHRpdGxlLCBhdHRyaWJ1dGVzKSB7XG4gICAgdmFyIF9pbml0UHJvcHM7XG5cbiAgICAvLyBhc3NpZ25pbmcgaW50byBhbiBhcnJheSB0byBkZWZpbmUgdG9TdHJpbmcgZnVuY3Rpb24gb24gaXRcbiAgICB2YXIgaW5pdFByb3BzID0gKF9pbml0UHJvcHMgPSB7XG4gICAgICAgIGtleTogdGl0bGVcbiAgICB9LCBfaW5pdFByb3BzW0hFTE1FVF9BVFRSSUJVVEVdID0gdHJ1ZSwgX2luaXRQcm9wcyk7XG4gICAgdmFyIHByb3BzID0gY29udmVydEVsZW1lbnRBdHRyaWJ1dGVzdG9SZWFjdFByb3BzKGF0dHJpYnV0ZXMsIGluaXRQcm9wcyk7XG5cbiAgICByZXR1cm4gW1JlYWN0LmNyZWF0ZUVsZW1lbnQoVEFHX05BTUVTLlRJVExFLCBwcm9wcywgdGl0bGUpXTtcbn07XG5cbnZhciBnZW5lcmF0ZVRhZ3NBc1JlYWN0Q29tcG9uZW50ID0gZnVuY3Rpb24gZ2VuZXJhdGVUYWdzQXNSZWFjdENvbXBvbmVudCh0eXBlLCB0YWdzKSB7XG4gICAgcmV0dXJuIHRhZ3MubWFwKGZ1bmN0aW9uICh0YWcsIGkpIHtcbiAgICAgICAgdmFyIF9tYXBwZWRUYWc7XG5cbiAgICAgICAgdmFyIG1hcHBlZFRhZyA9IChfbWFwcGVkVGFnID0ge1xuICAgICAgICAgICAga2V5OiBpXG4gICAgICAgIH0sIF9tYXBwZWRUYWdbSEVMTUVUX0FUVFJJQlVURV0gPSB0cnVlLCBfbWFwcGVkVGFnKTtcblxuICAgICAgICBPYmplY3Qua2V5cyh0YWcpLmZvckVhY2goZnVuY3Rpb24gKGF0dHJpYnV0ZSkge1xuICAgICAgICAgICAgdmFyIG1hcHBlZEF0dHJpYnV0ZSA9IFJFQUNUX1RBR19NQVBbYXR0cmlidXRlXSB8fCBhdHRyaWJ1dGU7XG5cbiAgICAgICAgICAgIGlmIChtYXBwZWRBdHRyaWJ1dGUgPT09IFRBR19QUk9QRVJUSUVTLklOTkVSX0hUTUwgfHwgbWFwcGVkQXR0cmlidXRlID09PSBUQUdfUFJPUEVSVElFUy5DU1NfVEVYVCkge1xuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gdGFnLmlubmVySFRNTCB8fCB0YWcuY3NzVGV4dDtcbiAgICAgICAgICAgICAgICBtYXBwZWRUYWcuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPSB7IF9faHRtbDogY29udGVudCB9O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtYXBwZWRUYWdbbWFwcGVkQXR0cmlidXRlXSA9IHRhZ1thdHRyaWJ1dGVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCh0eXBlLCBtYXBwZWRUYWcpO1xuICAgIH0pO1xufTtcblxudmFyIGdldE1ldGhvZHNGb3JUYWcgPSBmdW5jdGlvbiBnZXRNZXRob2RzRm9yVGFnKHR5cGUsIHRhZ3MsIGVuY29kZSkge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFRBR19OQU1FUy5USVRMRTpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdG9Db21wb25lbnQ6IGZ1bmN0aW9uIHRvQ29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2VuZXJhdGVUaXRsZUFzUmVhY3RDb21wb25lbnQodHlwZSwgdGFncy50aXRsZSwgdGFncy50aXRsZUF0dHJpYnV0ZXMsIGVuY29kZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0b1N0cmluZzogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBnZW5lcmF0ZVRpdGxlQXNTdHJpbmcodHlwZSwgdGFncy50aXRsZSwgdGFncy50aXRsZUF0dHJpYnV0ZXMsIGVuY29kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBBVFRSSUJVVEVfTkFNRVMuQk9EWTpcbiAgICAgICAgY2FzZSBBVFRSSUJVVEVfTkFNRVMuSFRNTDpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdG9Db21wb25lbnQ6IGZ1bmN0aW9uIHRvQ29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udmVydEVsZW1lbnRBdHRyaWJ1dGVzdG9SZWFjdFByb3BzKHRhZ3MpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2VuZXJhdGVFbGVtZW50QXR0cmlidXRlc0FzU3RyaW5nKHRhZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHRvQ29tcG9uZW50OiBmdW5jdGlvbiB0b0NvbXBvbmVudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdlbmVyYXRlVGFnc0FzUmVhY3RDb21wb25lbnQodHlwZSwgdGFncyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0b1N0cmluZzogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBnZW5lcmF0ZVRhZ3NBc1N0cmluZyh0eXBlLCB0YWdzLCBlbmNvZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgfVxufTtcblxudmFyIG1hcFN0YXRlT25TZXJ2ZXIgPSBmdW5jdGlvbiBtYXBTdGF0ZU9uU2VydmVyKF9yZWYpIHtcbiAgICB2YXIgYmFzZVRhZyA9IF9yZWYuYmFzZVRhZyxcbiAgICAgICAgYm9keUF0dHJpYnV0ZXMgPSBfcmVmLmJvZHlBdHRyaWJ1dGVzLFxuICAgICAgICBlbmNvZGUgPSBfcmVmLmVuY29kZSxcbiAgICAgICAgaHRtbEF0dHJpYnV0ZXMgPSBfcmVmLmh0bWxBdHRyaWJ1dGVzLFxuICAgICAgICBsaW5rVGFncyA9IF9yZWYubGlua1RhZ3MsXG4gICAgICAgIG1ldGFUYWdzID0gX3JlZi5tZXRhVGFncyxcbiAgICAgICAgbm9zY3JpcHRUYWdzID0gX3JlZi5ub3NjcmlwdFRhZ3MsXG4gICAgICAgIHNjcmlwdFRhZ3MgPSBfcmVmLnNjcmlwdFRhZ3MsXG4gICAgICAgIHN0eWxlVGFncyA9IF9yZWYuc3R5bGVUYWdzLFxuICAgICAgICBfcmVmJHRpdGxlID0gX3JlZi50aXRsZSxcbiAgICAgICAgdGl0bGUgPSBfcmVmJHRpdGxlID09PSB1bmRlZmluZWQgPyBcIlwiIDogX3JlZiR0aXRsZSxcbiAgICAgICAgdGl0bGVBdHRyaWJ1dGVzID0gX3JlZi50aXRsZUF0dHJpYnV0ZXM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYmFzZTogZ2V0TWV0aG9kc0ZvclRhZyhUQUdfTkFNRVMuQkFTRSwgYmFzZVRhZywgZW5jb2RlKSxcbiAgICAgICAgYm9keUF0dHJpYnV0ZXM6IGdldE1ldGhvZHNGb3JUYWcoQVRUUklCVVRFX05BTUVTLkJPRFksIGJvZHlBdHRyaWJ1dGVzLCBlbmNvZGUpLFxuICAgICAgICBodG1sQXR0cmlidXRlczogZ2V0TWV0aG9kc0ZvclRhZyhBVFRSSUJVVEVfTkFNRVMuSFRNTCwgaHRtbEF0dHJpYnV0ZXMsIGVuY29kZSksXG4gICAgICAgIGxpbms6IGdldE1ldGhvZHNGb3JUYWcoVEFHX05BTUVTLkxJTkssIGxpbmtUYWdzLCBlbmNvZGUpLFxuICAgICAgICBtZXRhOiBnZXRNZXRob2RzRm9yVGFnKFRBR19OQU1FUy5NRVRBLCBtZXRhVGFncywgZW5jb2RlKSxcbiAgICAgICAgbm9zY3JpcHQ6IGdldE1ldGhvZHNGb3JUYWcoVEFHX05BTUVTLk5PU0NSSVBULCBub3NjcmlwdFRhZ3MsIGVuY29kZSksXG4gICAgICAgIHNjcmlwdDogZ2V0TWV0aG9kc0ZvclRhZyhUQUdfTkFNRVMuU0NSSVBULCBzY3JpcHRUYWdzLCBlbmNvZGUpLFxuICAgICAgICBzdHlsZTogZ2V0TWV0aG9kc0ZvclRhZyhUQUdfTkFNRVMuU1RZTEUsIHN0eWxlVGFncywgZW5jb2RlKSxcbiAgICAgICAgdGl0bGU6IGdldE1ldGhvZHNGb3JUYWcoVEFHX05BTUVTLlRJVExFLCB7IHRpdGxlOiB0aXRsZSwgdGl0bGVBdHRyaWJ1dGVzOiB0aXRsZUF0dHJpYnV0ZXMgfSwgZW5jb2RlKVxuICAgIH07XG59O1xuXG52YXIgSGVsbWV0ID0gZnVuY3Rpb24gSGVsbWV0KENvbXBvbmVudCkge1xuICAgIHZhciBfY2xhc3MsIF90ZW1wO1xuXG4gICAgcmV0dXJuIF90ZW1wID0gX2NsYXNzID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgICAgICAgaW5oZXJpdHMoSGVsbWV0V3JhcHBlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgICAgICAgZnVuY3Rpb24gSGVsbWV0V3JhcHBlcigpIHtcbiAgICAgICAgICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEhlbG1ldFdyYXBwZXIpO1xuICAgICAgICAgICAgcmV0dXJuIHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIEhlbG1ldFdyYXBwZXIucHJvdG90eXBlLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZ1bmN0aW9uIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMpIHtcbiAgICAgICAgICAgIHJldHVybiAhaXNFcXVhbCh0aGlzLnByb3BzLCBuZXh0UHJvcHMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIEhlbG1ldFdyYXBwZXIucHJvdG90eXBlLm1hcE5lc3RlZENoaWxkcmVuVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcE5lc3RlZENoaWxkcmVuVG9Qcm9wcyhjaGlsZCwgbmVzdGVkQ2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGlmICghbmVzdGVkQ2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3dpdGNoIChjaGlsZC50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBUQUdfTkFNRVMuU0NSSVBUOlxuICAgICAgICAgICAgICAgIGNhc2UgVEFHX05BTUVTLk5PU0NSSVBUOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5uZXJIVE1MOiBuZXN0ZWRDaGlsZHJlblxuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgY2FzZSBUQUdfTkFNRVMuU1RZTEU6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NUZXh0OiBuZXN0ZWRDaGlsZHJlblxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCI8XCIgKyBjaGlsZC50eXBlICsgXCIgLz4gZWxlbWVudHMgYXJlIHNlbGYtY2xvc2luZyBhbmQgY2FuIG5vdCBjb250YWluIGNoaWxkcmVuLiBSZWZlciB0byBvdXIgQVBJIGZvciBtb3JlIGluZm9ybWF0aW9uLlwiKTtcbiAgICAgICAgfTtcblxuICAgICAgICBIZWxtZXRXcmFwcGVyLnByb3RvdHlwZS5mbGF0dGVuQXJyYXlUeXBlQ2hpbGRyZW4gPSBmdW5jdGlvbiBmbGF0dGVuQXJyYXlUeXBlQ2hpbGRyZW4oX3JlZikge1xuICAgICAgICAgICAgdmFyIF9iYWJlbEhlbHBlcnMkZXh0ZW5kcztcblxuICAgICAgICAgICAgdmFyIGNoaWxkID0gX3JlZi5jaGlsZCxcbiAgICAgICAgICAgICAgICBhcnJheVR5cGVDaGlsZHJlbiA9IF9yZWYuYXJyYXlUeXBlQ2hpbGRyZW4sXG4gICAgICAgICAgICAgICAgbmV3Q2hpbGRQcm9wcyA9IF9yZWYubmV3Q2hpbGRQcm9wcyxcbiAgICAgICAgICAgICAgICBuZXN0ZWRDaGlsZHJlbiA9IF9yZWYubmVzdGVkQ2hpbGRyZW47XG5cbiAgICAgICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgYXJyYXlUeXBlQ2hpbGRyZW4sIChfYmFiZWxIZWxwZXJzJGV4dGVuZHMgPSB7fSwgX2JhYmVsSGVscGVycyRleHRlbmRzW2NoaWxkLnR5cGVdID0gW10uY29uY2F0KGFycmF5VHlwZUNoaWxkcmVuW2NoaWxkLnR5cGVdIHx8IFtdLCBbX2V4dGVuZHMoe30sIG5ld0NoaWxkUHJvcHMsIHRoaXMubWFwTmVzdGVkQ2hpbGRyZW5Ub1Byb3BzKGNoaWxkLCBuZXN0ZWRDaGlsZHJlbikpXSksIF9iYWJlbEhlbHBlcnMkZXh0ZW5kcykpO1xuICAgICAgICB9O1xuXG4gICAgICAgIEhlbG1ldFdyYXBwZXIucHJvdG90eXBlLm1hcE9iamVjdFR5cGVDaGlsZHJlbiA9IGZ1bmN0aW9uIG1hcE9iamVjdFR5cGVDaGlsZHJlbihfcmVmMikge1xuICAgICAgICAgICAgdmFyIF9iYWJlbEhlbHBlcnMkZXh0ZW5kczIsIF9iYWJlbEhlbHBlcnMkZXh0ZW5kczM7XG5cbiAgICAgICAgICAgIHZhciBjaGlsZCA9IF9yZWYyLmNoaWxkLFxuICAgICAgICAgICAgICAgIG5ld1Byb3BzID0gX3JlZjIubmV3UHJvcHMsXG4gICAgICAgICAgICAgICAgbmV3Q2hpbGRQcm9wcyA9IF9yZWYyLm5ld0NoaWxkUHJvcHMsXG4gICAgICAgICAgICAgICAgbmVzdGVkQ2hpbGRyZW4gPSBfcmVmMi5uZXN0ZWRDaGlsZHJlbjtcblxuICAgICAgICAgICAgc3dpdGNoIChjaGlsZC50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBUQUdfTkFNRVMuVElUTEU6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgbmV3UHJvcHMsIChfYmFiZWxIZWxwZXJzJGV4dGVuZHMyID0ge30sIF9iYWJlbEhlbHBlcnMkZXh0ZW5kczJbY2hpbGQudHlwZV0gPSBuZXN0ZWRDaGlsZHJlbiwgX2JhYmVsSGVscGVycyRleHRlbmRzMi50aXRsZUF0dHJpYnV0ZXMgPSBfZXh0ZW5kcyh7fSwgbmV3Q2hpbGRQcm9wcyksIF9iYWJlbEhlbHBlcnMkZXh0ZW5kczIpKTtcblxuICAgICAgICAgICAgICAgIGNhc2UgVEFHX05BTUVTLkJPRFk6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgbmV3UHJvcHMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlBdHRyaWJ1dGVzOiBfZXh0ZW5kcyh7fSwgbmV3Q2hpbGRQcm9wcylcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIFRBR19OQU1FUy5IVE1MOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIG5ld1Byb3BzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBodG1sQXR0cmlidXRlczogX2V4dGVuZHMoe30sIG5ld0NoaWxkUHJvcHMpXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIG5ld1Byb3BzLCAoX2JhYmVsSGVscGVycyRleHRlbmRzMyA9IHt9LCBfYmFiZWxIZWxwZXJzJGV4dGVuZHMzW2NoaWxkLnR5cGVdID0gX2V4dGVuZHMoe30sIG5ld0NoaWxkUHJvcHMpLCBfYmFiZWxIZWxwZXJzJGV4dGVuZHMzKSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgSGVsbWV0V3JhcHBlci5wcm90b3R5cGUubWFwQXJyYXlUeXBlQ2hpbGRyZW5Ub1Byb3BzID0gZnVuY3Rpb24gbWFwQXJyYXlUeXBlQ2hpbGRyZW5Ub1Byb3BzKGFycmF5VHlwZUNoaWxkcmVuLCBuZXdQcm9wcykge1xuICAgICAgICAgICAgdmFyIG5ld0ZsYXR0ZW5lZFByb3BzID0gX2V4dGVuZHMoe30sIG5ld1Byb3BzKTtcblxuICAgICAgICAgICAgT2JqZWN0LmtleXMoYXJyYXlUeXBlQ2hpbGRyZW4pLmZvckVhY2goZnVuY3Rpb24gKGFycmF5Q2hpbGROYW1lKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9iYWJlbEhlbHBlcnMkZXh0ZW5kczQ7XG5cbiAgICAgICAgICAgICAgICBuZXdGbGF0dGVuZWRQcm9wcyA9IF9leHRlbmRzKHt9LCBuZXdGbGF0dGVuZWRQcm9wcywgKF9iYWJlbEhlbHBlcnMkZXh0ZW5kczQgPSB7fSwgX2JhYmVsSGVscGVycyRleHRlbmRzNFthcnJheUNoaWxkTmFtZV0gPSBhcnJheVR5cGVDaGlsZHJlblthcnJheUNoaWxkTmFtZV0sIF9iYWJlbEhlbHBlcnMkZXh0ZW5kczQpKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gbmV3RmxhdHRlbmVkUHJvcHM7XG4gICAgICAgIH07XG5cbiAgICAgICAgSGVsbWV0V3JhcHBlci5wcm90b3R5cGUud2Fybk9uSW52YWxpZENoaWxkcmVuID0gZnVuY3Rpb24gd2Fybk9uSW52YWxpZENoaWxkcmVuKGNoaWxkLCBuZXN0ZWRDaGlsZHJlbikge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGlmICghVkFMSURfVEFHX05BTUVTLnNvbWUoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkLnR5cGUgPT09IG5hbWU7XG4gICAgICAgICAgICAgICAgfSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZC50eXBlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3YXJuKFwiWW91IG1heSBiZSBhdHRlbXB0aW5nIHRvIG5lc3QgPEhlbG1ldD4gY29tcG9uZW50cyB3aXRoaW4gZWFjaCBvdGhlciwgd2hpY2ggaXMgbm90IGFsbG93ZWQuIFJlZmVyIHRvIG91ciBBUEkgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdhcm4oXCJPbmx5IGVsZW1lbnRzIHR5cGVzIFwiICsgVkFMSURfVEFHX05BTUVTLmpvaW4oXCIsIFwiKSArIFwiIGFyZSBhbGxvd2VkLiBIZWxtZXQgZG9lcyBub3Qgc3VwcG9ydCByZW5kZXJpbmcgPFwiICsgY2hpbGQudHlwZSArIFwiPiBlbGVtZW50cy4gUmVmZXIgdG8gb3VyIEFQSSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKG5lc3RlZENoaWxkcmVuICYmIHR5cGVvZiBuZXN0ZWRDaGlsZHJlbiAhPT0gXCJzdHJpbmdcIiAmJiAoIUFycmF5LmlzQXJyYXkobmVzdGVkQ2hpbGRyZW4pIHx8IG5lc3RlZENoaWxkcmVuLnNvbWUoZnVuY3Rpb24gKG5lc3RlZENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0eXBlb2YgbmVzdGVkQ2hpbGQgIT09IFwic3RyaW5nXCI7XG4gICAgICAgICAgICAgICAgfSkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkhlbG1ldCBleHBlY3RzIGEgc3RyaW5nIGFzIGEgY2hpbGQgb2YgPFwiICsgY2hpbGQudHlwZSArIFwiPi4gRGlkIHlvdSBmb3JnZXQgdG8gd3JhcCB5b3VyIGNoaWxkcmVuIGluIGJyYWNlcz8gKCA8XCIgKyBjaGlsZC50eXBlICsgXCI+e2BgfTwvXCIgKyBjaGlsZC50eXBlICsgXCI+ICkgUmVmZXIgdG8gb3VyIEFQSSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfTtcblxuICAgICAgICBIZWxtZXRXcmFwcGVyLnByb3RvdHlwZS5tYXBDaGlsZHJlblRvUHJvcHMgPSBmdW5jdGlvbiBtYXBDaGlsZHJlblRvUHJvcHMoY2hpbGRyZW4sIG5ld1Byb3BzKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgdmFyIGFycmF5VHlwZUNoaWxkcmVuID0ge307XG5cbiAgICAgICAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGQgfHwgIWNoaWxkLnByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgX2NoaWxkJHByb3BzID0gY2hpbGQucHJvcHMsXG4gICAgICAgICAgICAgICAgICAgIG5lc3RlZENoaWxkcmVuID0gX2NoaWxkJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZFByb3BzID0gb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX2NoaWxkJHByb3BzLCBbXCJjaGlsZHJlblwiXSk7XG5cbiAgICAgICAgICAgICAgICB2YXIgbmV3Q2hpbGRQcm9wcyA9IGNvbnZlcnRSZWFjdFByb3BzdG9IdG1sQXR0cmlidXRlcyhjaGlsZFByb3BzKTtcblxuICAgICAgICAgICAgICAgIF90aGlzMi53YXJuT25JbnZhbGlkQ2hpbGRyZW4oY2hpbGQsIG5lc3RlZENoaWxkcmVuKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoY2hpbGQudHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFRBR19OQU1FUy5MSU5LOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFRBR19OQU1FUy5NRVRBOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFRBR19OQU1FUy5OT1NDUklQVDpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBUQUdfTkFNRVMuU0NSSVBUOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFRBR19OQU1FUy5TVFlMRTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGFycmF5VHlwZUNoaWxkcmVuID0gX3RoaXMyLmZsYXR0ZW5BcnJheVR5cGVDaGlsZHJlbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IGNoaWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFycmF5VHlwZUNoaWxkcmVuOiBhcnJheVR5cGVDaGlsZHJlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDaGlsZFByb3BzOiBuZXdDaGlsZFByb3BzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5lc3RlZENoaWxkcmVuOiBuZXN0ZWRDaGlsZHJlblxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3UHJvcHMgPSBfdGhpczIubWFwT2JqZWN0VHlwZUNoaWxkcmVuKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZDogY2hpbGQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UHJvcHM6IG5ld1Byb3BzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NoaWxkUHJvcHM6IG5ld0NoaWxkUHJvcHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmVzdGVkQ2hpbGRyZW46IG5lc3RlZENoaWxkcmVuXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBuZXdQcm9wcyA9IHRoaXMubWFwQXJyYXlUeXBlQ2hpbGRyZW5Ub1Byb3BzKGFycmF5VHlwZUNoaWxkcmVuLCBuZXdQcm9wcyk7XG4gICAgICAgICAgICByZXR1cm4gbmV3UHJvcHM7XG4gICAgICAgIH07XG5cbiAgICAgICAgSGVsbWV0V3JhcHBlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgICAgICAgcHJvcHMgPSBvYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHMsIFtcImNoaWxkcmVuXCJdKTtcblxuICAgICAgICAgICAgdmFyIG5ld1Byb3BzID0gX2V4dGVuZHMoe30sIHByb3BzKTtcblxuICAgICAgICAgICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgbmV3UHJvcHMgPSB0aGlzLm1hcENoaWxkcmVuVG9Qcm9wcyhjaGlsZHJlbiwgbmV3UHJvcHMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIG5ld1Byb3BzKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjcmVhdGVDbGFzcyhIZWxtZXRXcmFwcGVyLCBudWxsLCBbe1xuICAgICAgICAgICAga2V5OiBcImNhblVzZURPTVwiLFxuXG5cbiAgICAgICAgICAgIC8vIENvbXBvbmVudC5wZWVrIGNvbWVzIGZyb20gcmVhY3Qtc2lkZS1lZmZlY3Q6XG4gICAgICAgICAgICAvLyBGb3IgdGVzdGluZywgeW91IG1heSB1c2UgYSBzdGF0aWMgcGVlaygpIG1ldGhvZCBhdmFpbGFibGUgb24gdGhlIHJldHVybmVkIGNvbXBvbmVudC5cbiAgICAgICAgICAgIC8vIEl0IGxldHMgeW91IGdldCB0aGUgY3VycmVudCBzdGF0ZSB3aXRob3V0IHJlc2V0dGluZyB0aGUgbW91bnRlZCBpbnN0YW5jZSBzdGFjay5cbiAgICAgICAgICAgIC8vIERvbuKAmXQgdXNlIGl0IGZvciBhbnl0aGluZyBvdGhlciB0aGFuIHRlc3RpbmcuXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGJhc2U6IHtcInRhcmdldFwiOiBcIl9ibGFua1wiLCBcImhyZWZcIjogXCJodHRwOi8vbXlzaXRlLmNvbS9cIn1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBib2R5QXR0cmlidXRlczoge1wiY2xhc3NOYW1lXCI6IFwicm9vdFwifVxuICAgICAgICAgICAgICogQHBhcmFtIHtTdHJpbmd9IGRlZmF1bHRUaXRsZTogXCJEZWZhdWx0IFRpdGxlXCJcbiAgICAgICAgICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gZGVmZXI6IHRydWVcbiAgICAgICAgICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gZW5jb2RlU3BlY2lhbENoYXJhY3RlcnM6IHRydWVcbiAgICAgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBodG1sQXR0cmlidXRlczoge1wibGFuZ1wiOiBcImVuXCIsIFwiYW1wXCI6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGxpbms6IFt7XCJyZWxcIjogXCJjYW5vbmljYWxcIiwgXCJocmVmXCI6IFwiaHR0cDovL215c2l0ZS5jb20vZXhhbXBsZVwifV1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG1ldGE6IFt7XCJuYW1lXCI6IFwiZGVzY3JpcHRpb25cIiwgXCJjb250ZW50XCI6IFwiVGVzdCBkZXNjcmlwdGlvblwifV1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG5vc2NyaXB0OiBbe1wiaW5uZXJIVE1MXCI6IFwiPGltZyBzcmM9J2h0dHA6Ly9teXNpdGUuY29tL2pzL3Rlc3QuanMnXCJ9XVxuICAgICAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb25DaGFuZ2VDbGllbnRTdGF0ZTogXCIobmV3U3RhdGUpID0+IGNvbnNvbGUubG9nKG5ld1N0YXRlKVwiXG4gICAgICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBzY3JpcHQ6IFt7XCJ0eXBlXCI6IFwidGV4dC9qYXZhc2NyaXB0XCIsIFwic3JjXCI6IFwiaHR0cDovL215c2l0ZS5jb20vanMvdGVzdC5qc1wifV1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IHN0eWxlOiBbe1widHlwZVwiOiBcInRleHQvY3NzXCIsIFwiY3NzVGV4dFwiOiBcImRpdiB7IGRpc3BsYXk6IGJsb2NrOyBjb2xvcjogYmx1ZTsgfVwifV1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSB0aXRsZTogXCJUaXRsZVwiXG4gICAgICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdGl0bGVBdHRyaWJ1dGVzOiB7XCJpdGVtcHJvcFwiOiBcIm5hbWVcIn1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSB0aXRsZVRlbXBsYXRlOiBcIk15U2l0ZS5jb20gLSAlc1wiXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24gc2V0JCQxKGNhblVzZURPTSkge1xuICAgICAgICAgICAgICAgIENvbXBvbmVudC5jYW5Vc2VET00gPSBjYW5Vc2VET007XG4gICAgICAgICAgICB9XG4gICAgICAgIH1dKTtcbiAgICAgICAgcmV0dXJuIEhlbG1ldFdyYXBwZXI7XG4gICAgfShSZWFjdC5Db21wb25lbnQpLCBfY2xhc3MucHJvcFR5cGVzID0ge1xuICAgICAgICBiYXNlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgICAgICBib2R5QXR0cmlidXRlczogUHJvcFR5cGVzLm9iamVjdCxcbiAgICAgICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5ub2RlKSwgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICAgICAgZGVmYXVsdFRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBkZWZlcjogUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIGVuY29kZVNwZWNpYWxDaGFyYWN0ZXJzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAgICAgaHRtbEF0dHJpYnV0ZXM6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgICAgIGxpbms6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vYmplY3QpLFxuICAgICAgICBtZXRhOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSxcbiAgICAgICAgbm9zY3JpcHQ6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vYmplY3QpLFxuICAgICAgICBvbkNoYW5nZUNsaWVudFN0YXRlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICAgICAgc2NyaXB0OiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSxcbiAgICAgICAgc3R5bGU6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vYmplY3QpLFxuICAgICAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgdGl0bGVBdHRyaWJ1dGVzOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgICAgICB0aXRsZVRlbXBsYXRlOiBQcm9wVHlwZXMuc3RyaW5nXG4gICAgfSwgX2NsYXNzLmRlZmF1bHRQcm9wcyA9IHtcbiAgICAgICAgZGVmZXI6IHRydWUsXG4gICAgICAgIGVuY29kZVNwZWNpYWxDaGFyYWN0ZXJzOiB0cnVlXG4gICAgfSwgX2NsYXNzLnBlZWsgPSBDb21wb25lbnQucGVlaywgX2NsYXNzLnJld2luZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1hcHBlZFN0YXRlID0gQ29tcG9uZW50LnJld2luZCgpO1xuICAgICAgICBpZiAoIW1hcHBlZFN0YXRlKSB7XG4gICAgICAgICAgICAvLyBwcm92aWRlIGZhbGxiYWNrIGlmIG1hcHBlZFN0YXRlIGlzIHVuZGVmaW5lZFxuICAgICAgICAgICAgbWFwcGVkU3RhdGUgPSBtYXBTdGF0ZU9uU2VydmVyKHtcbiAgICAgICAgICAgICAgICBiYXNlVGFnOiBbXSxcbiAgICAgICAgICAgICAgICBib2R5QXR0cmlidXRlczoge30sXG4gICAgICAgICAgICAgICAgZW5jb2RlU3BlY2lhbENoYXJhY3RlcnM6IHRydWUsXG4gICAgICAgICAgICAgICAgaHRtbEF0dHJpYnV0ZXM6IHt9LFxuICAgICAgICAgICAgICAgIGxpbmtUYWdzOiBbXSxcbiAgICAgICAgICAgICAgICBtZXRhVGFnczogW10sXG4gICAgICAgICAgICAgICAgbm9zY3JpcHRUYWdzOiBbXSxcbiAgICAgICAgICAgICAgICBzY3JpcHRUYWdzOiBbXSxcbiAgICAgICAgICAgICAgICBzdHlsZVRhZ3M6IFtdLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlwiLFxuICAgICAgICAgICAgICAgIHRpdGxlQXR0cmlidXRlczoge31cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1hcHBlZFN0YXRlO1xuICAgIH0sIF90ZW1wO1xufTtcblxudmFyIE51bGxDb21wb25lbnQgPSBmdW5jdGlvbiBOdWxsQ29tcG9uZW50KCkge1xuICAgIHJldHVybiBudWxsO1xufTtcblxudmFyIEhlbG1ldFNpZGVFZmZlY3RzID0gd2l0aFNpZGVFZmZlY3QocmVkdWNlUHJvcHNUb1N0YXRlLCBoYW5kbGVDbGllbnRTdGF0ZUNoYW5nZSwgbWFwU3RhdGVPblNlcnZlcikoTnVsbENvbXBvbmVudCk7XG5cbnZhciBIZWxtZXRFeHBvcnQgPSBIZWxtZXQoSGVsbWV0U2lkZUVmZmVjdHMpO1xuSGVsbWV0RXhwb3J0LnJlbmRlclN0YXRpYyA9IEhlbG1ldEV4cG9ydC5yZXdpbmQ7XG5cbmV4cG9ydCBkZWZhdWx0IEhlbG1ldEV4cG9ydDtcbmV4cG9ydCB7IEhlbG1ldEV4cG9ydCBhcyBIZWxtZXQgfTtcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IEhlbG1ldCB9IGZyb20gXCJyZWFjdC1oZWxtZXRcIjtcclxudmFyIERvY3VtZW50SGVhZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoX2pzeHMoSGVsbWV0LCB7IGNoaWxkcmVuOiBbX2pzeChcIm1ldGFcIiwgeyBjaGFyU2V0OiBcInV0Zi04XCIgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChcInRpdGxlXCIsIHsgY2hpbGRyZW46IFwiXFx1MDEwQ2VydmVub3BlXFx1MDEwRGVja1xcdTAwRkQgbW9cXHUwMTYxdFwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goXCJsaW5rXCIsIHsgcmVsOiBcImljb25cIiwgaHJlZjogXCIuLi8uLi9hc3NldHMvZmF2aWNvbi5zdmdcIiB9LCB2b2lkIDApXSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgRG9jdW1lbnRIZWFkO1xyXG4iLCJmdW5jdGlvbiBzdHlsaXNfbWluIChXKSB7XG4gIGZ1bmN0aW9uIE0oZCwgYywgZSwgaCwgYSkge1xuICAgIGZvciAodmFyIG0gPSAwLCBiID0gMCwgdiA9IDAsIG4gPSAwLCBxLCBnLCB4ID0gMCwgSyA9IDAsIGssIHUgPSBrID0gcSA9IDAsIGwgPSAwLCByID0gMCwgSSA9IDAsIHQgPSAwLCBCID0gZS5sZW5ndGgsIEogPSBCIC0gMSwgeSwgZiA9ICcnLCBwID0gJycsIEYgPSAnJywgRyA9ICcnLCBDOyBsIDwgQjspIHtcbiAgICAgIGcgPSBlLmNoYXJDb2RlQXQobCk7XG4gICAgICBsID09PSBKICYmIDAgIT09IGIgKyBuICsgdiArIG0gJiYgKDAgIT09IGIgJiYgKGcgPSA0NyA9PT0gYiA/IDEwIDogNDcpLCBuID0gdiA9IG0gPSAwLCBCKyssIEorKyk7XG5cbiAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgIGlmIChsID09PSBKICYmICgwIDwgciAmJiAoZiA9IGYucmVwbGFjZShOLCAnJykpLCAwIDwgZi50cmltKCkubGVuZ3RoKSkge1xuICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgNTk6XG4gICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIGYgKz0gZS5jaGFyQXQobCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZyA9IDU5O1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICBmID0gZi50cmltKCk7XG4gICAgICAgICAgICBxID0gZi5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgayA9IDE7XG5cbiAgICAgICAgICAgIGZvciAodCA9ICsrbDsgbCA8IEI7KSB7XG4gICAgICAgICAgICAgIHN3aXRjaCAoZyA9IGUuY2hhckNvZGVBdChsKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgICAgICAgaysrO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICAgICAgICAgIGstLTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZyA9IGUuY2hhckNvZGVBdChsICsgMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICBhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHUgPSBsICsgMTsgdSA8IEo7ICsrdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGUuY2hhckNvZGVBdCh1KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoNDIgPT09IGcgJiYgNDIgPT09IGUuY2hhckNvZGVBdCh1IC0gMSkgJiYgbCArIDIgIT09IHUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHUgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoNDcgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHUgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHU7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgICAgICBmb3IgKDsgbCsrIDwgSiAmJiBlLmNoYXJDb2RlQXQobCkgIT09IGc7KSB7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICgwID09PSBrKSBicmVhaztcbiAgICAgICAgICAgICAgbCsrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBrID0gZS5zdWJzdHJpbmcodCwgbCk7XG4gICAgICAgICAgICAwID09PSBxICYmIChxID0gKGYgPSBmLnJlcGxhY2UoY2EsICcnKS50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKHEpIHtcbiAgICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgICAwIDwgciAmJiAoZiA9IGYucmVwbGFjZShOLCAnJykpO1xuICAgICAgICAgICAgICAgIGcgPSBmLmNoYXJDb2RlQXQoMSk7XG5cbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICAgICAgICAgIHIgPSBjO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgciA9IE87XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgayA9IE0oYywgciwgaywgZywgYSArIDEpO1xuICAgICAgICAgICAgICAgIHQgPSBrLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAwIDwgQSAmJiAociA9IFgoTywgZiwgSSksIEMgPSBIKDMsIGssIHIsIGMsIEQsIHosIHQsIGcsIGEsIGgpLCBmID0gci5qb2luKCcnKSwgdm9pZCAwICE9PSBDICYmIDAgPT09ICh0ID0gKGsgPSBDLnRyaW0oKSkubGVuZ3RoKSAmJiAoZyA9IDAsIGsgPSAnJykpO1xuICAgICAgICAgICAgICAgIGlmICgwIDwgdCkgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShkYSwgZWEpO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA5OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyAneycgKyBrICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDc6XG4gICAgICAgICAgICAgICAgICAgIGYgPSBmLnJlcGxhY2UoZmEsICckMSAkMicpO1xuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGsgPSAxID09PSB3IHx8IDIgPT09IHcgJiYgTCgnQCcgKyBrLCAzKSA/ICdALXdlYmtpdC0nICsgayArICdAJyArIGsgOiAnQCcgKyBrO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyBrLCAxMTIgPT09IGggJiYgKGsgPSAocCArPSBrLCAnJykpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBrID0gJyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBrID0gTShjLCBYKGMsIGYsIEkpLCBrLCBoLCBhICsgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEYgKz0gaztcbiAgICAgICAgICAgIGsgPSBJID0gciA9IHUgPSBxID0gMDtcbiAgICAgICAgICAgIGYgPSAnJztcbiAgICAgICAgICAgIGcgPSBlLmNoYXJDb2RlQXQoKytsKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGYgPSAoMCA8IHIgPyBmLnJlcGxhY2UoTiwgJycpIDogZikudHJpbSgpO1xuICAgICAgICAgICAgaWYgKDEgPCAodCA9IGYubGVuZ3RoKSkgc3dpdGNoICgwID09PSB1ICYmIChxID0gZi5jaGFyQ29kZUF0KDApLCA0NSA9PT0gcSB8fCA5NiA8IHEgJiYgMTIzID4gcSkgJiYgKHQgPSAoZiA9IGYucmVwbGFjZSgnICcsICc6JykpLmxlbmd0aCksIDAgPCBBICYmIHZvaWQgMCAhPT0gKEMgPSBIKDEsIGYsIGMsIGQsIEQsIHosIHAubGVuZ3RoLCBoLCBhLCBoKSkgJiYgMCA9PT0gKHQgPSAoZiA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChmID0gJ1xceDAwXFx4MDAnKSwgcSA9IGYuY2hhckNvZGVBdCgwKSwgZyA9IGYuY2hhckNvZGVBdCgxKSwgcSkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgICBpZiAoMTA1ID09PSBnIHx8IDk5ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICBHICs9IGYgKyBlLmNoYXJBdChsKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIDU4ICE9PSBmLmNoYXJDb2RlQXQodCAtIDEpICYmIChwICs9IFAoZiwgcSwgZywgZi5jaGFyQ29kZUF0KDIpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBJID0gciA9IHUgPSBxID0gMDtcbiAgICAgICAgICAgIGYgPSAnJztcbiAgICAgICAgICAgIGcgPSBlLmNoYXJDb2RlQXQoKytsKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICA0NyA9PT0gYiA/IGIgPSAwIDogMCA9PT0gMSArIHEgJiYgMTA3ICE9PSBoICYmIDAgPCBmLmxlbmd0aCAmJiAociA9IDEsIGYgKz0gJ1xceDAwJyk7XG4gICAgICAgICAgMCA8IEEgKiBZICYmIEgoMCwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpO1xuICAgICAgICAgIHogPSAxO1xuICAgICAgICAgIEQrKztcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDU5OlxuICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICAgICAgeisrO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeisrO1xuICAgICAgICAgIHkgPSBlLmNoYXJBdChsKTtcblxuICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBtICsgYikgc3dpdGNoICh4KSB7XG4gICAgICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICAgICAgeSA9ICcnO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgMzIgIT09IGcgJiYgKHkgPSAnICcpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXDAnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcZic7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDExOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFx2JztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiAociA9IEkgPSAxLCB5ID0gJ1xcZicgKyB5KTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTA4OlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIGIgKyBtICsgRSAmJiAwIDwgdSkgc3dpdGNoIChsIC0gdSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgIDExMiA9PT0geCAmJiA1OCA9PT0gZS5jaGFyQ29kZUF0KGwgLSAzKSAmJiAoRSA9IHgpO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgICAgICAgMTExID09PSBLICYmIChFID0gSyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiAodSA9IGwpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSAmJiAociA9IDEsIHkgKz0gJ1xccicpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgIDAgPT09IGIgJiYgKG4gPSBuID09PSBnID8gMCA6IDAgPT09IG4gPyBnIDogbik7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbSsrO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA5MzpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyB2ICYmIG0tLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiB2LS07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIGIgKyBtKSB7XG4gICAgICAgICAgICAgICAgaWYgKDAgPT09IHEpIHN3aXRjaCAoMiAqIHggKyAzICogSykge1xuICAgICAgICAgICAgICAgICAgY2FzZSA1MzM6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBxID0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdisrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgIDAgPT09IGIgKyB2ICsgbiArIG0gKyB1ICsgayAmJiAoayA9IDEpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgIGlmICghKDAgPCBuICsgbSArIHYpKSBzd2l0Y2ggKGIpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKDIgKiBnICsgMyAqIGUuY2hhckNvZGVBdChsICsgMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMzU6XG4gICAgICAgICAgICAgICAgICAgICAgYiA9IDQ3O1xuICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgICAgICAgICAgIHQgPSBsLCBiID0gNDI7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgIDQ3ID09PSBnICYmIDQyID09PSB4ICYmIHQgKyAyICE9PSBsICYmICgzMyA9PT0gZS5jaGFyQ29kZUF0KHQgKyAyKSAmJiAocCArPSBlLnN1YnN0cmluZyh0LCBsICsgMSkpLCB5ID0gJycsIGIgPSAwKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIDAgPT09IGIgJiYgKGYgKz0geSk7XG4gICAgICB9XG5cbiAgICAgIEsgPSB4O1xuICAgICAgeCA9IGc7XG4gICAgICBsKys7XG4gICAgfVxuXG4gICAgdCA9IHAubGVuZ3RoO1xuXG4gICAgaWYgKDAgPCB0KSB7XG4gICAgICByID0gYztcbiAgICAgIGlmICgwIDwgQSAmJiAoQyA9IEgoMiwgcCwgciwgZCwgRCwgeiwgdCwgaCwgYSwgaCksIHZvaWQgMCAhPT0gQyAmJiAwID09PSAocCA9IEMpLmxlbmd0aCkpIHJldHVybiBHICsgcCArIEY7XG4gICAgICBwID0gci5qb2luKCcsJykgKyAneycgKyBwICsgJ30nO1xuXG4gICAgICBpZiAoMCAhPT0gdyAqIEUpIHtcbiAgICAgICAgMiAhPT0gdyB8fCBMKHAsIDIpIHx8IChFID0gMCk7XG5cbiAgICAgICAgc3dpdGNoIChFKSB7XG4gICAgICAgICAgY2FzZSAxMTE6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKGhhLCAnOi1tb3otJDEnKSArIHA7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTEyOlxuICAgICAgICAgICAgcCA9IHAucmVwbGFjZShRLCAnOjotd2Via2l0LWlucHV0LSQxJykgKyBwLnJlcGxhY2UoUSwgJzo6LW1vei0kMScpICsgcC5yZXBsYWNlKFEsICc6LW1zLWlucHV0LSQxJykgKyBwO1xuICAgICAgICB9XG5cbiAgICAgICAgRSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIEcgKyBwICsgRjtcbiAgfVxuXG4gIGZ1bmN0aW9uIFgoZCwgYywgZSkge1xuICAgIHZhciBoID0gYy50cmltKCkuc3BsaXQoaWEpO1xuICAgIGMgPSBoO1xuICAgIHZhciBhID0gaC5sZW5ndGgsXG4gICAgICAgIG0gPSBkLmxlbmd0aDtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAwOlxuICAgICAgY2FzZSAxOlxuICAgICAgICB2YXIgYiA9IDA7XG5cbiAgICAgICAgZm9yIChkID0gMCA9PT0gbSA/ICcnIDogZFswXSArICcgJzsgYiA8IGE7ICsrYikge1xuICAgICAgICAgIGNbYl0gPSBaKGQsIGNbYl0sIGUpLnRyaW0oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB2YXIgdiA9IGIgPSAwO1xuXG4gICAgICAgIGZvciAoYyA9IFtdOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBtOyArK24pIHtcbiAgICAgICAgICAgIGNbdisrXSA9IFooZFtuXSArICcgJywgaFtiXSwgZSkudHJpbSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcmV0dXJuIGM7XG4gIH1cblxuICBmdW5jdGlvbiBaKGQsIGMsIGUpIHtcbiAgICB2YXIgaCA9IGMuY2hhckNvZGVBdCgwKTtcbiAgICAzMyA+IGggJiYgKGggPSAoYyA9IGMudHJpbSgpKS5jaGFyQ29kZUF0KDApKTtcblxuICAgIHN3aXRjaCAoaCkge1xuICAgICAgY2FzZSAzODpcbiAgICAgICAgcmV0dXJuIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBjYXNlIDU4OlxuICAgICAgICByZXR1cm4gZC50cmltKCkgKyBjLnJlcGxhY2UoRiwgJyQxJyArIGQudHJpbSgpKTtcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKDAgPCAxICogZSAmJiAwIDwgYy5pbmRleE9mKCdcXGYnKSkgcmV0dXJuIGMucmVwbGFjZShGLCAoNTggPT09IGQuY2hhckNvZGVBdCgwKSA/ICcnIDogJyQxJykgKyBkLnRyaW0oKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGQgKyBjO1xuICB9XG5cbiAgZnVuY3Rpb24gUChkLCBjLCBlLCBoKSB7XG4gICAgdmFyIGEgPSBkICsgJzsnLFxuICAgICAgICBtID0gMiAqIGMgKyAzICogZSArIDQgKiBoO1xuXG4gICAgaWYgKDk0NCA9PT0gbSkge1xuICAgICAgZCA9IGEuaW5kZXhPZignOicsIDkpICsgMTtcbiAgICAgIHZhciBiID0gYS5zdWJzdHJpbmcoZCwgYS5sZW5ndGggLSAxKS50cmltKCk7XG4gICAgICBiID0gYS5zdWJzdHJpbmcoMCwgZCkudHJpbSgpICsgYiArICc7JztcbiAgICAgIHJldHVybiAxID09PSB3IHx8IDIgPT09IHcgJiYgTChiLCAxKSA/ICctd2Via2l0LScgKyBiICsgYiA6IGI7XG4gICAgfVxuXG4gICAgaWYgKDAgPT09IHcgfHwgMiA9PT0gdyAmJiAhTChhLCAxKSkgcmV0dXJuIGE7XG5cbiAgICBzd2l0Y2ggKG0pIHtcbiAgICAgIGNhc2UgMTAxNTpcbiAgICAgICAgcmV0dXJuIDk3ID09PSBhLmNoYXJDb2RlQXQoMTApID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NTE6XG4gICAgICAgIHJldHVybiAxMTYgPT09IGEuY2hhckNvZGVBdCgzKSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgOTYzOlxuICAgICAgICByZXR1cm4gMTEwID09PSBhLmNoYXJDb2RlQXQoNSkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDEwMDk6XG4gICAgICAgIGlmICgxMDAgIT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTY5OlxuICAgICAgY2FzZSA5NDI6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTc4OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1vei0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgMTAxOTpcbiAgICAgIGNhc2UgOTgzOlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1vei0nICsgYSArICctbXMtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDg4MzpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoOCkpIHJldHVybiAnLXdlYmtpdC0nICsgYSArIGE7XG4gICAgICAgIGlmICgwIDwgYS5pbmRleE9mKCdpbWFnZS1zZXQoJywgMTEpKSByZXR1cm4gYS5yZXBsYWNlKGphLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5MzI6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDQpKSBzd2l0Y2ggKGEuY2hhckNvZGVBdCg1KSkge1xuICAgICAgICAgIGNhc2UgMTAzOlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LWJveC0nICsgYS5yZXBsYWNlKCctZ3JvdycsICcnKSArICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdncm93JywgJ3Bvc2l0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ3NocmluaycsICduZWdhdGl2ZScpICsgYTtcblxuICAgICAgICAgIGNhc2UgOTg6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2Jhc2lzJywgJ3ByZWZlcnJlZC1zaXplJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDk2NDpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDIzOlxuICAgICAgICBpZiAoOTkgIT09IGEuY2hhckNvZGVBdCg4KSkgYnJlYWs7XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZyhhLmluZGV4T2YoJzonLCAxNSkpLnJlcGxhY2UoJ2ZsZXgtJywgJycpLnJlcGxhY2UoJ3NwYWNlLWJldHdlZW4nLCAnanVzdGlmeScpO1xuICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LXBhY2snICsgYiArICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LXBhY2snICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAwNTpcbiAgICAgICAgcmV0dXJuIGthLnRlc3QoYSkgPyBhLnJlcGxhY2UoYWEsICc6LXdlYmtpdC0nKSArIGEucmVwbGFjZShhYSwgJzotbW96LScpICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMWUzOlxuICAgICAgICBiID0gYS5zdWJzdHJpbmcoMTMpLnRyaW0oKTtcbiAgICAgICAgYyA9IGIuaW5kZXhPZignLScpICsgMTtcblxuICAgICAgICBzd2l0Y2ggKGIuY2hhckNvZGVBdCgwKSArIGIuY2hhckNvZGVBdChjKSkge1xuICAgICAgICAgIGNhc2UgMjI2OlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAndGInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMzI6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0Yi1ybCcpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIyMDpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ2xyJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGIgKyBhO1xuXG4gICAgICBjYXNlIDEwMTc6XG4gICAgICAgIGlmICgtMSA9PT0gYS5pbmRleE9mKCdzdGlja3knLCA5KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTc1OlxuICAgICAgICBjID0gKGEgPSBkKS5sZW5ndGggLSAxMDtcbiAgICAgICAgYiA9ICgzMyA9PT0gYS5jaGFyQ29kZUF0KGMpID8gYS5zdWJzdHJpbmcoMCwgYykgOiBhKS5zdWJzdHJpbmcoZC5pbmRleE9mKCc6JywgNykgKyAxKS50cmltKCk7XG5cbiAgICAgICAgc3dpdGNoIChtID0gYi5jaGFyQ29kZUF0KDApICsgKGIuY2hhckNvZGVBdCg3KSB8IDApKSB7XG4gICAgICAgICAgY2FzZSAyMDM6XG4gICAgICAgICAgICBpZiAoMTExID4gYi5jaGFyQ29kZUF0KDgpKSBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyAnOycgKyBhO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIwNzpcbiAgICAgICAgICBjYXNlIDEwMjpcbiAgICAgICAgICAgIGEgPSBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArICgxMDIgPCBtID8gJ2lubGluZS0nIDogJycpICsgJ2JveCcpICsgJzsnICsgYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGEucmVwbGFjZShiLCAnLW1zLScgKyBiICsgJ2JveCcpICsgJzsnICsgYTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhICsgJzsnO1xuXG4gICAgICBjYXNlIDkzODpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNSkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDYpKSB7XG4gICAgICAgICAgY2FzZSAxMDU6XG4gICAgICAgICAgICByZXR1cm4gYiA9IGEucmVwbGFjZSgnLWl0ZW1zJywgJycpLCAnLXdlYmtpdC0nICsgYSArICctd2Via2l0LWJveC0nICsgYiArICctbXMtZmxleC0nICsgYiArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1pdGVtLScgKyBhLnJlcGxhY2UoYmEsICcnKSArIGE7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWxpbmUtcGFjaycgKyBhLnJlcGxhY2UoJ2FsaWduLWNvbnRlbnQnLCAnJykucmVwbGFjZShiYSwgJycpICsgYTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5NzM6XG4gICAgICBjYXNlIDk4OTpcbiAgICAgICAgaWYgKDQ1ICE9PSBhLmNoYXJDb2RlQXQoMykgfHwgMTIyID09PSBhLmNoYXJDb2RlQXQoNCkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMTpcbiAgICAgIGNhc2UgOTUzOlxuICAgICAgICBpZiAoITAgPT09IGxhLnRlc3QoZCkpIHJldHVybiAxMTUgPT09IChiID0gZC5zdWJzdHJpbmcoZC5pbmRleE9mKCc6JykgKyAxKSkuY2hhckNvZGVBdCgwKSA/IFAoZC5yZXBsYWNlKCdzdHJldGNoJywgJ2ZpbGwtYXZhaWxhYmxlJyksIGMsIGUsIGgpLnJlcGxhY2UoJzpmaWxsLWF2YWlsYWJsZScsICc6c3RyZXRjaCcpIDogYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArIGEucmVwbGFjZShiLCAnLW1vei0nICsgYi5yZXBsYWNlKCdmaWxsLScsICcnKSkgKyBhO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5NjI6XG4gICAgICAgIGlmIChhID0gJy13ZWJraXQtJyArIGEgKyAoMTAyID09PSBhLmNoYXJDb2RlQXQoNSkgPyAnLW1zLScgKyBhIDogJycpICsgYSwgMjExID09PSBlICsgaCAmJiAxMDUgPT09IGEuY2hhckNvZGVBdCgxMykgJiYgMCA8IGEuaW5kZXhPZigndHJhbnNmb3JtJywgMTApKSByZXR1cm4gYS5zdWJzdHJpbmcoMCwgYS5pbmRleE9mKCc7JywgMjcpICsgMSkucmVwbGFjZShtYSwgJyQxLXdlYmtpdC0kMicpICsgYTtcbiAgICB9XG5cbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEwoZCwgYykge1xuICAgIHZhciBlID0gZC5pbmRleE9mKDEgPT09IGMgPyAnOicgOiAneycpLFxuICAgICAgICBoID0gZC5zdWJzdHJpbmcoMCwgMyAhPT0gYyA/IGUgOiAxMCk7XG4gICAgZSA9IGQuc3Vic3RyaW5nKGUgKyAxLCBkLmxlbmd0aCAtIDEpO1xuICAgIHJldHVybiBSKDIgIT09IGMgPyBoIDogaC5yZXBsYWNlKG5hLCAnJDEnKSwgZSwgYyk7XG4gIH1cblxuICBmdW5jdGlvbiBlYShkLCBjKSB7XG4gICAgdmFyIGUgPSBQKGMsIGMuY2hhckNvZGVBdCgwKSwgYy5jaGFyQ29kZUF0KDEpLCBjLmNoYXJDb2RlQXQoMikpO1xuICAgIHJldHVybiBlICE9PSBjICsgJzsnID8gZS5yZXBsYWNlKG9hLCAnIG9yICgkMSknKS5zdWJzdHJpbmcoNCkgOiAnKCcgKyBjICsgJyknO1xuICB9XG5cbiAgZnVuY3Rpb24gSChkLCBjLCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSB7XG4gICAgZm9yICh2YXIgZyA9IDAsIHggPSBjLCB3OyBnIDwgQTsgKytnKSB7XG4gICAgICBzd2l0Y2ggKHcgPSBTW2ddLmNhbGwoQiwgZCwgeCwgZSwgaCwgYSwgbSwgYiwgdiwgbiwgcSkpIHtcbiAgICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICAgIGNhc2UgITE6XG4gICAgICAgIGNhc2UgITA6XG4gICAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHggPSB3O1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh4ICE9PSBjKSByZXR1cm4geDtcbiAgfVxuXG4gIGZ1bmN0aW9uIFQoZCkge1xuICAgIHN3aXRjaCAoZCkge1xuICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICBjYXNlIG51bGw6XG4gICAgICAgIEEgPSBTLmxlbmd0aCA9IDA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGQpIFNbQSsrXSA9IGQ7ZWxzZSBpZiAoJ29iamVjdCcgPT09IHR5cGVvZiBkKSBmb3IgKHZhciBjID0gMCwgZSA9IGQubGVuZ3RoOyBjIDwgZTsgKytjKSB7XG4gICAgICAgICAgVChkW2NdKTtcbiAgICAgICAgfSBlbHNlIFkgPSAhIWQgfCAwO1xuICAgIH1cblxuICAgIHJldHVybiBUO1xuICB9XG5cbiAgZnVuY3Rpb24gVShkKSB7XG4gICAgZCA9IGQucHJlZml4O1xuICAgIHZvaWQgMCAhPT0gZCAmJiAoUiA9IG51bGwsIGQgPyAnZnVuY3Rpb24nICE9PSB0eXBlb2YgZCA/IHcgPSAxIDogKHcgPSAyLCBSID0gZCkgOiB3ID0gMCk7XG4gICAgcmV0dXJuIFU7XG4gIH1cblxuICBmdW5jdGlvbiBCKGQsIGMpIHtcbiAgICB2YXIgZSA9IGQ7XG4gICAgMzMgPiBlLmNoYXJDb2RlQXQoMCkgJiYgKGUgPSBlLnRyaW0oKSk7XG4gICAgViA9IGU7XG4gICAgZSA9IFtWXTtcblxuICAgIGlmICgwIDwgQSkge1xuICAgICAgdmFyIGggPSBIKC0xLCBjLCBlLCBlLCBELCB6LCAwLCAwLCAwLCAwKTtcbiAgICAgIHZvaWQgMCAhPT0gaCAmJiAnc3RyaW5nJyA9PT0gdHlwZW9mIGggJiYgKGMgPSBoKTtcbiAgICB9XG5cbiAgICB2YXIgYSA9IE0oTywgZSwgYywgMCwgMCk7XG4gICAgMCA8IEEgJiYgKGggPSBIKC0yLCBhLCBlLCBlLCBELCB6LCBhLmxlbmd0aCwgMCwgMCwgMCksIHZvaWQgMCAhPT0gaCAmJiAoYSA9IGgpKTtcbiAgICBWID0gJyc7XG4gICAgRSA9IDA7XG4gICAgeiA9IEQgPSAxO1xuICAgIHJldHVybiBhO1xuICB9XG5cbiAgdmFyIGNhID0gL15cXDArL2csXG4gICAgICBOID0gL1tcXDBcXHJcXGZdL2csXG4gICAgICBhYSA9IC86ICovZyxcbiAgICAgIGthID0gL3pvb3xncmEvLFxuICAgICAgbWEgPSAvKFssOiBdKSh0cmFuc2Zvcm0pL2csXG4gICAgICBpYSA9IC8sXFxyKz8vZyxcbiAgICAgIEYgPSAvKFtcXHRcXHJcXG4gXSkqXFxmPyYvZyxcbiAgICAgIGZhID0gL0Aoa1xcdyspXFxzKihcXFMqKVxccyovLFxuICAgICAgUSA9IC86OihwbGFjZSkvZyxcbiAgICAgIGhhID0gLzoocmVhZC1vbmx5KS9nLFxuICAgICAgRyA9IC9bc3ZoXVxcdystW3RibHJdezJ9LyxcbiAgICAgIGRhID0gL1xcKFxccyooLiopXFxzKlxcKS9nLFxuICAgICAgb2EgPSAvKFtcXHNcXFNdKj8pOy9nLFxuICAgICAgYmEgPSAvLXNlbGZ8ZmxleC0vZyxcbiAgICAgIG5hID0gL1teXSo/KDpbcnBdW2VsXWFbXFx3LV0rKVteXSovLFxuICAgICAgbGEgPSAvc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLFxuICAgICAgamEgPSAvKFteLV0pKGltYWdlLXNldFxcKCkvLFxuICAgICAgeiA9IDEsXG4gICAgICBEID0gMSxcbiAgICAgIEUgPSAwLFxuICAgICAgdyA9IDEsXG4gICAgICBPID0gW10sXG4gICAgICBTID0gW10sXG4gICAgICBBID0gMCxcbiAgICAgIFIgPSBudWxsLFxuICAgICAgWSA9IDAsXG4gICAgICBWID0gJyc7XG4gIEIudXNlID0gVDtcbiAgQi5zZXQgPSBVO1xuICB2b2lkIDAgIT09IFcgJiYgVShXKTtcbiAgcmV0dXJuIEI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxpc19taW47XG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0ge307XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iLCJpbXBvcnR7dHlwZU9mIGFzIGUsaXNFbGVtZW50IGFzIHQsaXNWYWxpZEVsZW1lbnRUeXBlIGFzIG59ZnJvbVwicmVhY3QtaXNcIjtpbXBvcnQgcix7dXNlU3RhdGUgYXMgbyx1c2VDb250ZXh0IGFzIGksdXNlTWVtbyBhcyBzLHVzZUVmZmVjdCBhcyBhLHVzZVJlZiBhcyBjLGNyZWF0ZUVsZW1lbnQgYXMgdSx1c2VEZWJ1Z1ZhbHVlIGFzIGwsdXNlTGF5b3V0RWZmZWN0IGFzIGR9ZnJvbVwicmVhY3RcIjtpbXBvcnQgaCBmcm9tXCJzaGFsbG93ZXF1YWxcIjtpbXBvcnQgcCBmcm9tXCJAZW1vdGlvbi9zdHlsaXNcIjtpbXBvcnQgZiBmcm9tXCJAZW1vdGlvbi91bml0bGVzc1wiO2ltcG9ydCBtIGZyb21cIkBlbW90aW9uL2lzLXByb3AtdmFsaWRcIjtpbXBvcnQgeSBmcm9tXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiO2Z1bmN0aW9uIHYoKXtyZXR1cm4odj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBnPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPVtlWzBdXSxyPTAsbz10Lmxlbmd0aDtyPG87cis9MSluLnB1c2godFtyXSxlW3IrMV0pO3JldHVybiBufSxTPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT09dCYmXCJvYmplY3RcIj09dHlwZW9mIHQmJlwiW29iamVjdCBPYmplY3RdXCI9PT0odC50b1N0cmluZz90LnRvU3RyaW5nKCk6T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKSYmIWUodCl9LHc9T2JqZWN0LmZyZWV6ZShbXSksRT1PYmplY3QuZnJlZXplKHt9KTtmdW5jdGlvbiBiKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV9ZnVuY3Rpb24gXyhlKXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInN0cmluZ1wiPT10eXBlb2YgZSYmZXx8ZS5kaXNwbGF5TmFtZXx8ZS5uYW1lfHxcIkNvbXBvbmVudFwifWZ1bmN0aW9uIE4oZSl7cmV0dXJuIGUmJlwic3RyaW5nXCI9PXR5cGVvZiBlLnN0eWxlZENvbXBvbmVudElkfXZhciBBPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiYocHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0FUVFJ8fHByb2Nlc3MuZW52LlNDX0FUVFIpfHxcImRhdGEtc3R5bGVkXCIsQz1cIjUuMi4zXCIsST1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZcIkhUTUxFbGVtZW50XCJpbiB3aW5kb3csUD1Cb29sZWFuKFwiYm9vbGVhblwiPT10eXBlb2YgU0NfRElTQUJMRV9TUEVFRFk/U0NfRElTQUJMRV9TUEVFRFk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJnZvaWQgMCE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSYmXCJcIiE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWT9cImZhbHNlXCIhPT1wcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFkmJnByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWTpcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmdm9pZCAwIT09cHJvY2Vzcy5lbnYuU0NfRElTQUJMRV9TUEVFRFkmJlwiXCIhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWT9cImZhbHNlXCIhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWSYmcHJvY2Vzcy5lbnYuU0NfRElTQUJMRV9TUEVFRFk6XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViksTz17fSxSPVwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/ezE6XCJDYW5ub3QgY3JlYXRlIHN0eWxlZC1jb21wb25lbnQgZm9yIGNvbXBvbmVudDogJXMuXFxuXFxuXCIsMjpcIkNhbid0IGNvbGxlY3Qgc3R5bGVzIG9uY2UgeW91J3ZlIGNvbnN1bWVkIGEgYFNlcnZlclN0eWxlU2hlZXRgJ3Mgc3R5bGVzISBgU2VydmVyU3R5bGVTaGVldGAgaXMgYSBvbmUgb2ZmIGluc3RhbmNlIGZvciBlYWNoIHNlcnZlci1zaWRlIHJlbmRlciBjeWNsZS5cXG5cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJldXNlIGl0IGFjcm9zcyByZW5kZXJzP1xcbi0gQXJlIHlvdSBhY2NpZGVudGFsbHkgY2FsbGluZyBjb2xsZWN0U3R5bGVzIHR3aWNlP1xcblxcblwiLDM6XCJTdHJlYW1pbmcgU1NSIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgTm9kZS5qcyBlbnZpcm9ubWVudDsgUGxlYXNlIGRvIG5vdCB0cnkgdG8gY2FsbCB0aGlzIG1ldGhvZCBpbiB0aGUgYnJvd3Nlci5cXG5cXG5cIiw0OlwiVGhlIGBTdHlsZVNoZWV0TWFuYWdlcmAgZXhwZWN0cyBhIHZhbGlkIHRhcmdldCBvciBzaGVldCBwcm9wIVxcblxcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBjbGllbnQgYW5kIGlzIHlvdXIgdGFyZ2V0IGZhbHN5P1xcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBzZXJ2ZXIgYW5kIGlzIHRoZSBzaGVldCBmYWxzeT9cXG5cXG5cIiw1OlwiVGhlIGNsb25lIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCBvbiB0aGUgY2xpZW50IVxcblxcbi0gQXJlIHlvdSBydW5uaW5nIGluIGEgY2xpZW50LWxpa2UgZW52aXJvbm1lbnQgb24gdGhlIHNlcnZlcj9cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJ1biBTU1Igb24gdGhlIGNsaWVudD9cXG5cXG5cIiw2OlwiVHJ5aW5nIHRvIGluc2VydCBhIG5ldyBzdHlsZSB0YWcsIGJ1dCB0aGUgZ2l2ZW4gTm9kZSBpcyB1bm1vdW50ZWQhXFxuXFxuLSBBcmUgeW91IHVzaW5nIGEgY3VzdG9tIHRhcmdldCB0aGF0IGlzbid0IG1vdW50ZWQ/XFxuLSBEb2VzIHlvdXIgZG9jdW1lbnQgbm90IGhhdmUgYSB2YWxpZCBoZWFkIGVsZW1lbnQ/XFxuLSBIYXZlIHlvdSBhY2NpZGVudGFsbHkgcmVtb3ZlZCBhIHN0eWxlIHRhZyBtYW51YWxseT9cXG5cXG5cIiw3OidUaGVtZVByb3ZpZGVyOiBQbGVhc2UgcmV0dXJuIGFuIG9iamVjdCBmcm9tIHlvdXIgXCJ0aGVtZVwiIHByb3AgZnVuY3Rpb24sIGUuZy5cXG5cXG5gYGBqc1xcbnRoZW1lPXsoKSA9PiAoe30pfVxcbmBgYFxcblxcbicsODonVGhlbWVQcm92aWRlcjogUGxlYXNlIG1ha2UgeW91ciBcInRoZW1lXCIgcHJvcCBhbiBvYmplY3QuXFxuXFxuJyw5OlwiTWlzc2luZyBkb2N1bWVudCBgPGhlYWQ+YFxcblxcblwiLDEwOlwiQ2Fubm90IGZpbmQgYSBTdHlsZVNoZWV0IGluc3RhbmNlLiBVc3VhbGx5IHRoaXMgaGFwcGVucyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29waWVzIG9mIHN0eWxlZC1jb21wb25lbnRzIGxvYWRlZCBhdCBvbmNlLiBDaGVjayBvdXQgdGhpcyBpc3N1ZSBmb3IgaG93IHRvIHRyb3VibGVzaG9vdCBhbmQgZml4IHRoZSBjb21tb24gY2FzZXMgd2hlcmUgdGhpcyBzaXR1YXRpb24gY2FuIGhhcHBlbjogaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2lzc3Vlcy8xOTQxI2lzc3VlY29tbWVudC00MTc4NjIwMjFcXG5cXG5cIiwxMTpcIl9UaGlzIGVycm9yIHdhcyByZXBsYWNlZCB3aXRoIGEgZGV2LXRpbWUgd2FybmluZywgaXQgd2lsbCBiZSBkZWxldGVkIGZvciB2NCBmaW5hbC5fIFtjcmVhdGVHbG9iYWxTdHlsZV0gcmVjZWl2ZWQgY2hpbGRyZW4gd2hpY2ggd2lsbCBub3QgYmUgcmVuZGVyZWQuIFBsZWFzZSB1c2UgdGhlIGNvbXBvbmVudCB3aXRob3V0IHBhc3NpbmcgY2hpbGRyZW4gZWxlbWVudHMuXFxuXFxuXCIsMTI6XCJJdCBzZWVtcyB5b3UgYXJlIGludGVycG9sYXRpbmcgYSBrZXlmcmFtZSBkZWNsYXJhdGlvbiAoJXMpIGludG8gYW4gdW50YWdnZWQgc3RyaW5nLiBUaGlzIHdhcyBzdXBwb3J0ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjMsIGJ1dCBpcyBub3QgbG9uZ2VyIHN1cHBvcnRlZCBpbiB2NCBhcyBrZXlmcmFtZXMgYXJlIG5vdyBpbmplY3RlZCBvbi1kZW1hbmQuIFBsZWFzZSB3cmFwIHlvdXIgc3RyaW5nIGluIHRoZSBjc3NcXFxcYFxcXFxgIGhlbHBlciB3aGljaCBlbnN1cmVzIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGNvcnJlY3RseS4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FwaSNjc3NcXG5cXG5cIiwxMzpcIiVzIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cXG5cXG5cIiwxNDonVGhlbWVQcm92aWRlcjogXCJ0aGVtZVwiIHByb3AgaXMgcmVxdWlyZWQuXFxuXFxuJywxNTpcIkEgc3R5bGlzIHBsdWdpbiBoYXMgYmVlbiBzdXBwbGllZCB0aGF0IGlzIG5vdCBuYW1lZC4gV2UgbmVlZCBhIG5hbWUgZm9yIGVhY2ggcGx1Z2luIHRvIGJlIGFibGUgdG8gcHJldmVudCBzdHlsaW5nIGNvbGxpc2lvbnMgYmV0d2VlbiBkaWZmZXJlbnQgc3R5bGlzIGNvbmZpZ3VyYXRpb25zIHdpdGhpbiB0aGUgc2FtZSBhcHAuIEJlZm9yZSB5b3UgcGFzcyB5b3VyIHBsdWdpbiB0byBgPFN0eWxlU2hlZXRNYW5hZ2VyIHN0eWxpc1BsdWdpbnM9e1tdfT5gLCBwbGVhc2UgbWFrZSBzdXJlIGVhY2ggcGx1Z2luIGlzIHVuaXF1ZWx5LW5hbWVkLCBlLmcuXFxuXFxuYGBganNcXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoaW1wb3J0ZWRQbHVnaW4sICduYW1lJywgeyB2YWx1ZTogJ3NvbWUtdW5pcXVlLW5hbWUnIH0pO1xcbmBgYFxcblxcblwiLDE2OlwiUmVhY2hlZCB0aGUgbGltaXQgb2YgaG93IG1hbnkgc3R5bGVkIGNvbXBvbmVudHMgbWF5IGJlIGNyZWF0ZWQgYXQgZ3JvdXAgJXMuXFxuWW91IG1heSBvbmx5IGNyZWF0ZSB1cCB0byAxLDA3Myw3NDEsODI0IGNvbXBvbmVudHMuIElmIHlvdSdyZSBjcmVhdGluZyBjb21wb25lbnRzIGR5bmFtaWNhbGx5LFxcbmFzIGZvciBpbnN0YW5jZSBpbiB5b3VyIHJlbmRlciBtZXRob2QgdGhlbiB5b3UgbWF5IGJlIHJ1bm5pbmcgaW50byB0aGlzIGxpbWl0YXRpb24uXFxuXFxuXCIsMTc6XCJDU1NTdHlsZVNoZWV0IGNvdWxkIG5vdCBiZSBmb3VuZCBvbiBIVE1MU3R5bGVFbGVtZW50LlxcbkhhcyBzdHlsZWQtY29tcG9uZW50cycgc3R5bGUgdGFnIGJlZW4gdW5tb3VudGVkIG9yIGFsdGVyZWQgYnkgYW5vdGhlciBzY3JpcHQ/XFxuXCJ9Ont9O2Z1bmN0aW9uIEQoKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLHQ9W10sbj0xLHI9YXJndW1lbnRzLmxlbmd0aDtuPHI7bis9MSl0LnB1c2gobjwwfHxhcmd1bWVudHMubGVuZ3RoPD1uP3ZvaWQgMDphcmd1bWVudHNbbl0pO3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKHQpe2U9ZS5yZXBsYWNlKC8lW2Etel0vLHQpfSkpLGV9ZnVuY3Rpb24gaihlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07dGhyb3dcInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WP25ldyBFcnJvcihcIkFuIGVycm9yIG9jY3VycmVkLiBTZWUgaHR0cHM6Ly9naXQuaW8vSlVJYUUjXCIrZStcIiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIisobi5sZW5ndGg+MD9cIiBBcmdzOiBcIituLmpvaW4oXCIsIFwiKTpcIlwiKSk6bmV3IEVycm9yKEQuYXBwbHkodm9pZCAwLFtSW2VdXS5jb25jYXQobikpLnRyaW0oKSl9dmFyIFQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuZ3JvdXBTaXplcz1uZXcgVWludDMyQXJyYXkoNTEyKSx0aGlzLmxlbmd0aD01MTIsdGhpcy50YWc9ZX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbmRleE9mR3JvdXA9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAsbj0wO248ZTtuKyspdCs9dGhpcy5ncm91cFNpemVzW25dO3JldHVybiB0fSx0Lmluc2VydFJ1bGVzPWZ1bmN0aW9uKGUsdCl7aWYoZT49dGhpcy5ncm91cFNpemVzLmxlbmd0aCl7Zm9yKHZhciBuPXRoaXMuZ3JvdXBTaXplcyxyPW4ubGVuZ3RoLG89cjtlPj1vOykobzw8PTEpPDAmJmooMTYsXCJcIitlKTt0aGlzLmdyb3VwU2l6ZXM9bmV3IFVpbnQzMkFycmF5KG8pLHRoaXMuZ3JvdXBTaXplcy5zZXQobiksdGhpcy5sZW5ndGg9bztmb3IodmFyIGk9cjtpPG87aSsrKXRoaXMuZ3JvdXBTaXplc1tpXT0wfWZvcih2YXIgcz10aGlzLmluZGV4T2ZHcm91cChlKzEpLGE9MCxjPXQubGVuZ3RoO2E8YzthKyspdGhpcy50YWcuaW5zZXJ0UnVsZShzLHRbYV0pJiYodGhpcy5ncm91cFNpemVzW2VdKysscysrKX0sdC5jbGVhckdyb3VwPWZ1bmN0aW9uKGUpe2lmKGU8dGhpcy5sZW5ndGgpe3ZhciB0PXRoaXMuZ3JvdXBTaXplc1tlXSxuPXRoaXMuaW5kZXhPZkdyb3VwKGUpLHI9bit0O3RoaXMuZ3JvdXBTaXplc1tlXT0wO2Zvcih2YXIgbz1uO288cjtvKyspdGhpcy50YWcuZGVsZXRlUnVsZShuKX19LHQuZ2V0R3JvdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJcIjtpZihlPj10aGlzLmxlbmd0aHx8MD09PXRoaXMuZ3JvdXBTaXplc1tlXSlyZXR1cm4gdDtmb3IodmFyIG49dGhpcy5ncm91cFNpemVzW2VdLHI9dGhpcy5pbmRleE9mR3JvdXAoZSksbz1yK24saT1yO2k8bztpKyspdCs9dGhpcy50YWcuZ2V0UnVsZShpKStcIi8qIXNjKi9cXG5cIjtyZXR1cm4gdH0sZX0oKSxrPW5ldyBNYXAseD1uZXcgTWFwLFY9MSxCPWZ1bmN0aW9uKGUpe2lmKGsuaGFzKGUpKXJldHVybiBrLmdldChlKTtmb3IoO3guaGFzKFYpOylWKys7dmFyIHQ9VisrO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJigoMHx0KTwwfHx0PjE8PDMwKSYmaigxNixcIlwiK3QpLGsuc2V0KGUsdCkseC5zZXQodCxlKSx0fSxNPWZ1bmN0aW9uKGUpe3JldHVybiB4LmdldChlKX0sej1mdW5jdGlvbihlLHQpe2suc2V0KGUsdCkseC5zZXQodCxlKX0sTD1cInN0eWxlW1wiK0ErJ11bZGF0YS1zdHlsZWQtdmVyc2lvbj1cIjUuMi4zXCJdJyxHPW5ldyBSZWdFeHAoXCJeXCIrQSsnXFxcXC5nKFxcXFxkKylcXFxcW2lkPVwiKFtcXFxcd1xcXFxkLV0rKVwiXFxcXF0uKj9cIihbXlwiXSopJyksRj1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciByLG89bi5zcGxpdChcIixcIiksaT0wLHM9by5sZW5ndGg7aTxzO2krKykocj1vW2ldKSYmZS5yZWdpc3Rlck5hbWUodCxyKX0sWT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj10LmlubmVySFRNTC5zcGxpdChcIi8qIXNjKi9cXG5cIikscj1bXSxvPTAsaT1uLmxlbmd0aDtvPGk7bysrKXt2YXIgcz1uW29dLnRyaW0oKTtpZihzKXt2YXIgYT1zLm1hdGNoKEcpO2lmKGEpe3ZhciBjPTB8cGFyc2VJbnQoYVsxXSwxMCksdT1hWzJdOzAhPT1jJiYoeih1LGMpLEYoZSx1LGFbM10pLGUuZ2V0VGFnKCkuaW5zZXJ0UnVsZXMoYyxyKSksci5sZW5ndGg9MH1lbHNlIHIucHVzaChzKX19fSxxPWZ1bmN0aW9uKCl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmdm9pZCAwIT09d2luZG93Ll9fd2VicGFja19ub25jZV9fP3dpbmRvdy5fX3dlYnBhY2tfbm9uY2VfXzpudWxsfSxIPWZ1bmN0aW9uKGUpe3ZhciB0PWRvY3VtZW50LmhlYWQsbj1lfHx0LHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpLG89ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuY2hpbGROb2RlcyxuPXQubGVuZ3RoO24+PTA7bi0tKXt2YXIgcj10W25dO2lmKHImJjE9PT1yLm5vZGVUeXBlJiZyLmhhc0F0dHJpYnV0ZShBKSlyZXR1cm4gcn19KG4pLGk9dm9pZCAwIT09bz9vLm5leHRTaWJsaW5nOm51bGw7ci5zZXRBdHRyaWJ1dGUoQSxcImFjdGl2ZVwiKSxyLnNldEF0dHJpYnV0ZShcImRhdGEtc3R5bGVkLXZlcnNpb25cIixcIjUuMi4zXCIpO3ZhciBzPXEoKTtyZXR1cm4gcyYmci5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLHMpLG4uaW5zZXJ0QmVmb3JlKHIsaSkscn0sJD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dmFyIHQ9dGhpcy5lbGVtZW50PUgoZSk7dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKSksdGhpcy5zaGVldD1mdW5jdGlvbihlKXtpZihlLnNoZWV0KXJldHVybiBlLnNoZWV0O2Zvcih2YXIgdD1kb2N1bWVudC5zdHlsZVNoZWV0cyxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgbz10W25dO2lmKG8ub3duZXJOb2RlPT09ZSlyZXR1cm4gb31qKDE3KX0odCksdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7dHJ5e3JldHVybiB0aGlzLnNoZWV0Lmluc2VydFJ1bGUodCxlKSx0aGlzLmxlbmd0aCsrLCEwfWNhdGNoKGUpe3JldHVybiExfX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMuc2hlZXQuZGVsZXRlUnVsZShlKSx0aGlzLmxlbmd0aC0tfSx0LmdldFJ1bGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5zaGVldC5jc3NSdWxlc1tlXTtyZXR1cm4gdm9pZCAwIT09dCYmXCJzdHJpbmdcIj09dHlwZW9mIHQuY3NzVGV4dD90LmNzc1RleHQ6XCJcIn0sZX0oKSxXPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgdD10aGlzLmVsZW1lbnQ9SChlKTt0aGlzLm5vZGVzPXQuY2hpbGROb2Rlcyx0aGlzLmxlbmd0aD0wfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0Lmluc2VydFJ1bGU9ZnVuY3Rpb24oZSx0KXtpZihlPD10aGlzLmxlbmd0aCYmZT49MCl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodCkscj10aGlzLm5vZGVzW2VdO3JldHVybiB0aGlzLmVsZW1lbnQuaW5zZXJ0QmVmb3JlKG4scnx8bnVsbCksdGhpcy5sZW5ndGgrKywhMH1yZXR1cm4hMX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMuZWxlbWVudC5yZW1vdmVDaGlsZCh0aGlzLm5vZGVzW2VdKSx0aGlzLmxlbmd0aC0tfSx0LmdldFJ1bGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU8dGhpcy5sZW5ndGg/dGhpcy5ub2Rlc1tlXS50ZXh0Q29udGVudDpcIlwifSxlfSgpLFU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMucnVsZXM9W10sdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU8PXRoaXMubGVuZ3RoJiYodGhpcy5ydWxlcy5zcGxpY2UoZSwwLHQpLHRoaXMubGVuZ3RoKyssITApfSx0LmRlbGV0ZVJ1bGU9ZnVuY3Rpb24oZSl7dGhpcy5ydWxlcy5zcGxpY2UoZSwxKSx0aGlzLmxlbmd0aC0tfSx0LmdldFJ1bGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU8dGhpcy5sZW5ndGg/dGhpcy5ydWxlc1tlXTpcIlwifSxlfSgpLEo9SSxYPXtpc1NlcnZlcjohSSx1c2VDU1NPTUluamVjdGlvbjohUH0sWj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4pe3ZvaWQgMD09PWUmJihlPUUpLHZvaWQgMD09PXQmJih0PXt9KSx0aGlzLm9wdGlvbnM9dih7fSxYLHt9LGUpLHRoaXMuZ3M9dCx0aGlzLm5hbWVzPW5ldyBNYXAobiksIXRoaXMub3B0aW9ucy5pc1NlcnZlciYmSSYmSiYmKEo9ITEsZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoTCksbj0wLHI9dC5sZW5ndGg7bjxyO24rKyl7dmFyIG89dFtuXTtvJiZcImFjdGl2ZVwiIT09by5nZXRBdHRyaWJ1dGUoQSkmJihZKGUsbyksby5wYXJlbnROb2RlJiZvLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobykpfX0odGhpcykpfWUucmVnaXN0ZXJJZD1mdW5jdGlvbihlKXtyZXR1cm4gQihlKX07dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQucmVjb25zdHJ1Y3RXaXRoT3B0aW9ucz1mdW5jdGlvbih0LG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj0hMCksbmV3IGUodih7fSx0aGlzLm9wdGlvbnMse30sdCksdGhpcy5ncyxuJiZ0aGlzLm5hbWVzfHx2b2lkIDApfSx0LmFsbG9jYXRlR1NJbnN0YW5jZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5nc1tlXT0odGhpcy5nc1tlXXx8MCkrMX0sdC5nZXRUYWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50YWd8fCh0aGlzLnRhZz0obj0odD10aGlzLm9wdGlvbnMpLmlzU2VydmVyLHI9dC51c2VDU1NPTUluamVjdGlvbixvPXQudGFyZ2V0LGU9bj9uZXcgVShvKTpyP25ldyAkKG8pOm5ldyBXKG8pLG5ldyBUKGUpKSk7dmFyIGUsdCxuLHIsb30sdC5oYXNOYW1lRm9ySWQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5uYW1lcy5oYXMoZSkmJnRoaXMubmFtZXMuZ2V0KGUpLmhhcyh0KX0sdC5yZWdpc3Rlck5hbWU9ZnVuY3Rpb24oZSx0KXtpZihCKGUpLHRoaXMubmFtZXMuaGFzKGUpKXRoaXMubmFtZXMuZ2V0KGUpLmFkZCh0KTtlbHNle3ZhciBuPW5ldyBTZXQ7bi5hZGQodCksdGhpcy5uYW1lcy5zZXQoZSxuKX19LHQuaW5zZXJ0UnVsZXM9ZnVuY3Rpb24oZSx0LG4pe3RoaXMucmVnaXN0ZXJOYW1lKGUsdCksdGhpcy5nZXRUYWcoKS5pbnNlcnRSdWxlcyhCKGUpLG4pfSx0LmNsZWFyTmFtZXM9ZnVuY3Rpb24oZSl7dGhpcy5uYW1lcy5oYXMoZSkmJnRoaXMubmFtZXMuZ2V0KGUpLmNsZWFyKCl9LHQuY2xlYXJSdWxlcz1mdW5jdGlvbihlKXt0aGlzLmdldFRhZygpLmNsZWFyR3JvdXAoQihlKSksdGhpcy5jbGVhck5hbWVzKGUpfSx0LmNsZWFyVGFnPWZ1bmN0aW9uKCl7dGhpcy50YWc9dm9pZCAwfSx0LnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmdldFRhZygpLG49dC5sZW5ndGgscj1cIlwiLG89MDtvPG47bysrKXt2YXIgaT1NKG8pO2lmKHZvaWQgMCE9PWkpe3ZhciBzPWUubmFtZXMuZ2V0KGkpLGE9dC5nZXRHcm91cChvKTtpZih2b2lkIDAhPT1zJiYwIT09YS5sZW5ndGgpe3ZhciBjPUErXCIuZ1wiK28rJ1tpZD1cIicraSsnXCJdJyx1PVwiXCI7dm9pZCAwIT09cyYmcy5mb3JFYWNoKChmdW5jdGlvbihlKXtlLmxlbmd0aD4wJiYodSs9ZStcIixcIil9KSkscis9XCJcIithK2MrJ3tjb250ZW50OlwiJyt1KydcIn0vKiFzYyovXFxuJ319fXJldHVybiByfSh0aGlzKX0sZX0oKSxLPS8oYSkoZCkvZ2ksUT1mdW5jdGlvbihlKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlKyhlPjI1PzM5Ojk3KSl9O2Z1bmN0aW9uIGVlKGUpe3ZhciB0LG49XCJcIjtmb3IodD1NYXRoLmFicyhlKTt0PjUyO3Q9dC81MnwwKW49USh0JTUyKStuO3JldHVybihRKHQlNTIpK24pLnJlcGxhY2UoSyxcIiQxLSQyXCIpfXZhciB0ZT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj10Lmxlbmd0aDtuOyllPTMzKmVedC5jaGFyQ29kZUF0KC0tbik7cmV0dXJuIGV9LG5lPWZ1bmN0aW9uKGUpe3JldHVybiB0ZSg1MzgxLGUpfTtmdW5jdGlvbiByZShlKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrPTEpe3ZhciBuPWVbdF07aWYoYihuKSYmIU4obikpcmV0dXJuITF9cmV0dXJuITB9dmFyIG9lPW5lKFwiNS4yLjNcIiksaWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXt0aGlzLnJ1bGVzPWUsdGhpcy5zdGF0aWNSdWxlc0lkPVwiXCIsdGhpcy5pc1N0YXRpYz1cInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYodm9pZCAwPT09bnx8bi5pc1N0YXRpYykmJnJlKGUpLHRoaXMuY29tcG9uZW50SWQ9dCx0aGlzLmJhc2VIYXNoPXRlKG9lLHQpLHRoaXMuYmFzZVN0eWxlPW4sWi5yZWdpc3RlcklkKHQpfXJldHVybiBlLnByb3RvdHlwZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcz1mdW5jdGlvbihlLHQsbil7dmFyIHI9dGhpcy5jb21wb25lbnRJZCxvPVtdO2lmKHRoaXMuYmFzZVN0eWxlJiZvLnB1c2godGhpcy5iYXNlU3R5bGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoZSx0LG4pKSx0aGlzLmlzU3RhdGljJiYhbi5oYXNoKWlmKHRoaXMuc3RhdGljUnVsZXNJZCYmdC5oYXNOYW1lRm9ySWQocix0aGlzLnN0YXRpY1J1bGVzSWQpKW8ucHVzaCh0aGlzLnN0YXRpY1J1bGVzSWQpO2Vsc2V7dmFyIGk9TmUodGhpcy5ydWxlcyxlLHQsbikuam9pbihcIlwiKSxzPWVlKHRlKHRoaXMuYmFzZUhhc2gsaS5sZW5ndGgpPj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIscykpe3ZhciBhPW4oaSxcIi5cIitzLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIscyxhKX1vLnB1c2gocyksdGhpcy5zdGF0aWNSdWxlc0lkPXN9ZWxzZXtmb3IodmFyIGM9dGhpcy5ydWxlcy5sZW5ndGgsdT10ZSh0aGlzLmJhc2VIYXNoLG4uaGFzaCksbD1cIlwiLGQ9MDtkPGM7ZCsrKXt2YXIgaD10aGlzLnJ1bGVzW2RdO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBoKWwrPWgsXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHU9dGUodSxoK2QpKTtlbHNlIGlmKGgpe3ZhciBwPU5lKGgsZSx0LG4pLGY9QXJyYXkuaXNBcnJheShwKT9wLmpvaW4oXCJcIik6cDt1PXRlKHUsZitkKSxsKz1mfX1pZihsKXt2YXIgbT1lZSh1Pj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIsbSkpe3ZhciB5PW4obCxcIi5cIittLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIsbSx5KX1vLnB1c2gobSl9fXJldHVybiBvLmpvaW4oXCIgXCIpfSxlfSgpLHNlPS9eXFxzKlxcL1xcLy4qJC9nbSxhZT1bXCI6XCIsXCJbXCIsXCIuXCIsXCIjXCJdO2Z1bmN0aW9uIGNlKGUpe3ZhciB0LG4scixvLGk9dm9pZCAwPT09ZT9FOmUscz1pLm9wdGlvbnMsYT12b2lkIDA9PT1zP0U6cyxjPWkucGx1Z2lucyx1PXZvaWQgMD09PWM/dzpjLGw9bmV3IHAoYSksZD1bXSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7aWYodCl0cnl7ZSh0K1wifVwiKX1jYXRjaChlKXt9fXJldHVybiBmdW5jdGlvbihuLHIsbyxpLHMsYSxjLHUsbCxkKXtzd2l0Y2gobil7Y2FzZSAxOmlmKDA9PT1sJiY2ND09PXIuY2hhckNvZGVBdCgwKSlyZXR1cm4gZShyK1wiO1wiKSxcIlwiO2JyZWFrO2Nhc2UgMjppZigwPT09dSlyZXR1cm4gcitcIi8qfCovXCI7YnJlYWs7Y2FzZSAzOnN3aXRjaCh1KXtjYXNlIDEwMjpjYXNlIDExMjpyZXR1cm4gZShvWzBdK3IpLFwiXCI7ZGVmYXVsdDpyZXR1cm4gcisoMD09PWQ/XCIvKnwqL1wiOlwiXCIpfWNhc2UtMjpyLnNwbGl0KFwiLyp8Ki99XCIpLmZvckVhY2godCl9fX0oKGZ1bmN0aW9uKGUpe2QucHVzaChlKX0pKSxmPWZ1bmN0aW9uKGUscixpKXtyZXR1cm4gMD09PXImJi0xIT09YWUuaW5kZXhPZihpW24ubGVuZ3RoXSl8fGkubWF0Y2gobyk/ZTpcIi5cIit0fTtmdW5jdGlvbiBtKGUsaSxzLGEpe3ZvaWQgMD09PWEmJihhPVwiJlwiKTt2YXIgYz1lLnJlcGxhY2Uoc2UsXCJcIiksdT1pJiZzP3MrXCIgXCIraStcIiB7IFwiK2MrXCIgfVwiOmM7cmV0dXJuIHQ9YSxuPWkscj1uZXcgUmVnRXhwKFwiXFxcXFwiK24rXCJcXFxcYlwiLFwiZ1wiKSxvPW5ldyBSZWdFeHAoXCIoXFxcXFwiK24rXCJcXFxcYil7Mix9XCIpLGwoc3x8IWk/XCJcIjppLHUpfXJldHVybiBsLnVzZShbXS5jb25jYXQodSxbZnVuY3Rpb24oZSx0LG8pezI9PT1lJiZvLmxlbmd0aCYmb1swXS5sYXN0SW5kZXhPZihuKT4wJiYob1swXT1vWzBdLnJlcGxhY2UocixmKSl9LGgsZnVuY3Rpb24oZSl7aWYoLTI9PT1lKXt2YXIgdD1kO3JldHVybiBkPVtdLHR9fV0pKSxtLmhhc2g9dS5sZW5ndGg/dS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQubmFtZXx8aigxNSksdGUoZSx0Lm5hbWUpfSksNTM4MSkudG9TdHJpbmcoKTpcIlwiLG19dmFyIHVlPXIuY3JlYXRlQ29udGV4dCgpLGxlPXVlLkNvbnN1bWVyLGRlPXIuY3JlYXRlQ29udGV4dCgpLGhlPShkZS5Db25zdW1lcixuZXcgWikscGU9Y2UoKTtmdW5jdGlvbiBmZSgpe3JldHVybiBpKHVlKXx8aGV9ZnVuY3Rpb24gbWUoKXtyZXR1cm4gaShkZSl8fHBlfWZ1bmN0aW9uIHllKGUpe3ZhciB0PW8oZS5zdHlsaXNQbHVnaW5zKSxuPXRbMF0saT10WzFdLGM9ZmUoKSx1PXMoKGZ1bmN0aW9uKCl7dmFyIHQ9YztyZXR1cm4gZS5zaGVldD90PWUuc2hlZXQ6ZS50YXJnZXQmJih0PXQucmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyh7dGFyZ2V0OmUudGFyZ2V0fSwhMSkpLGUuZGlzYWJsZUNTU09NSW5qZWN0aW9uJiYodD10LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe3VzZUNTU09NSW5qZWN0aW9uOiExfSkpLHR9KSxbZS5kaXNhYmxlQ1NTT01JbmplY3Rpb24sZS5zaGVldCxlLnRhcmdldF0pLGw9cygoZnVuY3Rpb24oKXtyZXR1cm4gY2Uoe29wdGlvbnM6e3ByZWZpeDohZS5kaXNhYmxlVmVuZG9yUHJlZml4ZXN9LHBsdWdpbnM6bn0pfSksW2UuZGlzYWJsZVZlbmRvclByZWZpeGVzLG5dKTtyZXR1cm4gYSgoZnVuY3Rpb24oKXtoKG4sZS5zdHlsaXNQbHVnaW5zKXx8aShlLnN0eWxpc1BsdWdpbnMpfSksW2Uuc3R5bGlzUGx1Z2luc10pLHIuY3JlYXRlRWxlbWVudCh1ZS5Qcm92aWRlcix7dmFsdWU6dX0sci5jcmVhdGVFbGVtZW50KGRlLlByb3ZpZGVyLHt2YWx1ZTpsfSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP3IuQ2hpbGRyZW4ub25seShlLmNoaWxkcmVuKTplLmNoaWxkcmVuKSl9dmFyIHZlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3ZhciBuPXRoaXM7dGhpcy5pbmplY3Q9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD1wZSk7dmFyIHI9bi5uYW1lK3QuaGFzaDtlLmhhc05hbWVGb3JJZChuLmlkLHIpfHxlLmluc2VydFJ1bGVzKG4uaWQscix0KG4ucnVsZXMscixcIkBrZXlmcmFtZXNcIikpfSx0aGlzLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGooMTIsU3RyaW5nKG4ubmFtZSkpfSx0aGlzLm5hbWU9ZSx0aGlzLmlkPVwic2Mta2V5ZnJhbWVzLVwiK2UsdGhpcy5ydWxlcz10fXJldHVybiBlLnByb3RvdHlwZS5nZXROYW1lPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1wZSksdGhpcy5uYW1lK2UuaGFzaH0sZX0oKSxnZT0vKFtBLVpdKS8sU2U9LyhbQS1aXSkvZyx3ZT0vXm1zLS8sRWU9ZnVuY3Rpb24oZSl7cmV0dXJuXCItXCIrZS50b0xvd2VyQ2FzZSgpfTtmdW5jdGlvbiBiZShlKXtyZXR1cm4gZ2UudGVzdChlKT9lLnJlcGxhY2UoU2UsRWUpLnJlcGxhY2Uod2UsXCItbXMtXCIpOmV9dmFyIF9lPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lfHwhMT09PWV8fFwiXCI9PT1lfTtmdW5jdGlvbiBOZShlLG4scixvKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIGkscz1bXSxhPTAsYz1lLmxlbmd0aDthPGM7YSs9MSlcIlwiIT09KGk9TmUoZVthXSxuLHIsbykpJiYoQXJyYXkuaXNBcnJheShpKT9zLnB1c2guYXBwbHkocyxpKTpzLnB1c2goaSkpO3JldHVybiBzfWlmKF9lKGUpKXJldHVyblwiXCI7aWYoTihlKSlyZXR1cm5cIi5cIitlLnN0eWxlZENvbXBvbmVudElkO2lmKGIoZSkpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGw9ZSl8fGwucHJvdG90eXBlJiZsLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50fHwhbilyZXR1cm4gZTt2YXIgdT1lKG4pO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnQodSkmJmNvbnNvbGUud2FybihfKGUpK1wiIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cIiksTmUodSxuLHIsbyl9dmFyIGw7cmV0dXJuIGUgaW5zdGFuY2VvZiB2ZT9yPyhlLmluamVjdChyLG8pLGUuZ2V0TmFtZShvKSk6ZTpTKGUpP2Z1bmN0aW9uIGUodCxuKXt2YXIgcixvLGk9W107Zm9yKHZhciBzIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShzKSYmIV9lKHRbc10pJiYoUyh0W3NdKT9pLnB1c2guYXBwbHkoaSxlKHRbc10scykpOmIodFtzXSk/aS5wdXNoKGJlKHMpK1wiOlwiLHRbc10sXCI7XCIpOmkucHVzaChiZShzKStcIjogXCIrKHI9cyxudWxsPT0obz10W3NdKXx8XCJib29sZWFuXCI9PXR5cGVvZiBvfHxcIlwiPT09bz9cIlwiOlwibnVtYmVyXCIhPXR5cGVvZiBvfHwwPT09b3x8ciBpbiBmP1N0cmluZyhvKS50cmltKCk6bytcInB4XCIpK1wiO1wiKSk7cmV0dXJuIG4/W24rXCIge1wiXS5jb25jYXQoaSxbXCJ9XCJdKTppfShlKTplLnRvU3RyaW5nKCl9ZnVuY3Rpb24gQWUoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3JldHVybiBiKGUpfHxTKGUpP05lKGcodyxbZV0uY29uY2F0KG4pKSk6MD09PW4ubGVuZ3RoJiYxPT09ZS5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBlWzBdP2U6TmUoZyhlLG4pKX12YXIgQ2U9L2ludmFsaWQgaG9vayBjYWxsL2ksSWU9bmV3IFNldCxQZT1mdW5jdGlvbihlLHQpe2lmKFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYpe3ZhciBuPVwiVGhlIGNvbXBvbmVudCBcIitlKyh0Pycgd2l0aCB0aGUgaWQgb2YgXCInK3QrJ1wiJzpcIlwiKStcIiBoYXMgYmVlbiBjcmVhdGVkIGR5bmFtaWNhbGx5LlxcbllvdSBtYXkgc2VlIHRoaXMgd2FybmluZyBiZWNhdXNlIHlvdSd2ZSBjYWxsZWQgc3R5bGVkIGluc2lkZSBhbm90aGVyIGNvbXBvbmVudC5cXG5UbyByZXNvbHZlIHRoaXMgb25seSBjcmVhdGUgbmV3IFN0eWxlZENvbXBvbmVudHMgb3V0c2lkZSBvZiBhbnkgcmVuZGVyIG1ldGhvZCBhbmQgZnVuY3Rpb24gY29tcG9uZW50LlwiO3RyeXtjKCksSWUuaGFzKG4pfHwoY29uc29sZS53YXJuKG4pLEllLmFkZChuKSl9Y2F0Y2goZSl7Q2UudGVzdChlLm1lc3NhZ2UpJiZJZS5kZWxldGUobil9fX0sT2U9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj1FKSxlLnRoZW1lIT09bi50aGVtZSYmZS50aGVtZXx8dHx8bi50aGVtZX0sUmU9L1shXCIjJCUmJygpKissLi86Ozw9Pj9AW1xcXFxcXF1eYHt8fX4tXSsvZyxEZT0vKF4tfC0kKS9nO2Z1bmN0aW9uIGplKGUpe3JldHVybiBlLnJlcGxhY2UoUmUsXCItXCIpLnJlcGxhY2UoRGUsXCJcIil9dmFyIFRlPWZ1bmN0aW9uKGUpe3JldHVybiBlZShuZShlKT4+PjApfTtmdW5jdGlvbiBrZShlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmKFwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlZ8fGUuY2hhckF0KDApPT09ZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSl9dmFyIHhlPWZ1bmN0aW9uKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV8fFwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT09ZSYmIUFycmF5LmlzQXJyYXkoZSl9LFZlPWZ1bmN0aW9uKGUpe3JldHVyblwiX19wcm90b19fXCIhPT1lJiZcImNvbnN0cnVjdG9yXCIhPT1lJiZcInByb3RvdHlwZVwiIT09ZX07ZnVuY3Rpb24gQmUoZSx0LG4pe3ZhciByPWVbbl07eGUodCkmJnhlKHIpP01lKHIsdCk6ZVtuXT10fWZ1bmN0aW9uIE1lKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTtmb3IodmFyIG89MCxpPW47bzxpLmxlbmd0aDtvKyspe3ZhciBzPWlbb107aWYoeGUocykpZm9yKHZhciBhIGluIHMpVmUoYSkmJkJlKGUsc1thXSxhKX1yZXR1cm4gZX12YXIgemU9ci5jcmVhdGVDb250ZXh0KCksTGU9emUuQ29uc3VtZXI7ZnVuY3Rpb24gR2UoZSl7dmFyIHQ9aSh6ZSksbj1zKChmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybiBqKDE0KTtpZihiKGUpKXt2YXIgbj1lKHQpO3JldHVyblwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlZ8fG51bGwhPT1uJiYhQXJyYXkuaXNBcnJheShuKSYmXCJvYmplY3RcIj09dHlwZW9mIG4/bjpqKDcpfXJldHVybiBBcnJheS5pc0FycmF5KGUpfHxcIm9iamVjdFwiIT10eXBlb2YgZT9qKDgpOnQ/dih7fSx0LHt9LGUpOmV9KGUudGhlbWUsdCl9KSxbZS50aGVtZSx0XSk7cmV0dXJuIGUuY2hpbGRyZW4/ci5jcmVhdGVFbGVtZW50KHplLlByb3ZpZGVyLHt2YWx1ZTpufSxlLmNoaWxkcmVuKTpudWxsfXZhciBGZT17fTtmdW5jdGlvbiBZZShlLHQsbil7dmFyIG89TihlKSxzPSFrZShlKSxhPXQuYXR0cnMsYz12b2lkIDA9PT1hP3c6YSxkPXQuY29tcG9uZW50SWQsaD12b2lkIDA9PT1kP2Z1bmN0aW9uKGUsdCl7dmFyIG49XCJzdHJpbmdcIiE9dHlwZW9mIGU/XCJzY1wiOmplKGUpO0ZlW25dPShGZVtuXXx8MCkrMTt2YXIgcj1uK1wiLVwiK1RlKFwiNS4yLjNcIituK0ZlW25dKTtyZXR1cm4gdD90K1wiLVwiK3I6cn0odC5kaXNwbGF5TmFtZSx0LnBhcmVudENvbXBvbmVudElkKTpkLHA9dC5kaXNwbGF5TmFtZSxmPXZvaWQgMD09PXA/ZnVuY3Rpb24oZSl7cmV0dXJuIGtlKGUpP1wic3R5bGVkLlwiK2U6XCJTdHlsZWQoXCIrXyhlKStcIilcIn0oZSk6cCxnPXQuZGlzcGxheU5hbWUmJnQuY29tcG9uZW50SWQ/amUodC5kaXNwbGF5TmFtZSkrXCItXCIrdC5jb21wb25lbnRJZDp0LmNvbXBvbmVudElkfHxoLFM9byYmZS5hdHRycz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuYXR0cnMsYykuZmlsdGVyKEJvb2xlYW4pOmMsQT10LnNob3VsZEZvcndhcmRQcm9wO28mJmUuc2hvdWxkRm9yd2FyZFByb3AmJihBPXQuc2hvdWxkRm9yd2FyZFByb3A/ZnVuY3Rpb24obixyKXtyZXR1cm4gZS5zaG91bGRGb3J3YXJkUHJvcChuLHIpJiZ0LnNob3VsZEZvcndhcmRQcm9wKG4scil9OmUuc2hvdWxkRm9yd2FyZFByb3ApO3ZhciBDLEk9bmV3IGllKG4sZyxvP2UuY29tcG9uZW50U3R5bGU6dm9pZCAwKSxQPUkuaXNTdGF0aWMmJjA9PT1jLmxlbmd0aCxPPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPWUuYXR0cnMscz1lLmNvbXBvbmVudFN0eWxlLGE9ZS5kZWZhdWx0UHJvcHMsYz1lLmZvbGRlZENvbXBvbmVudElkcyxkPWUuc2hvdWxkRm9yd2FyZFByb3AsaD1lLnN0eWxlZENvbXBvbmVudElkLHA9ZS50YXJnZXQ7XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmbChoKTt2YXIgZj1mdW5jdGlvbihlLHQsbil7dm9pZCAwPT09ZSYmKGU9RSk7dmFyIHI9dih7fSx0LHt0aGVtZTplfSksbz17fTtyZXR1cm4gbi5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgdCxuLGkscz1lO2Zvcih0IGluIGIocykmJihzPXMocikpLHMpclt0XT1vW3RdPVwiY2xhc3NOYW1lXCI9PT10PyhuPW9bdF0saT1zW3RdLG4mJmk/bitcIiBcIitpOm58fGkpOnNbdF19KSksW3Isb119KE9lKHQsaSh6ZSksYSl8fEUsdCxvKSx5PWZbMF0sZz1mWzFdLFM9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG89ZmUoKSxpPW1lKCkscz10P2UuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRSxvLGkpOmUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMobixvLGkpO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmwocyksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmIXQmJnImJnIocyksc30ocyxyLHksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj9lLndhcm5Ub29NYW55Q2xhc3Nlczp2b2lkIDApLHc9bixfPWcuJGFzfHx0LiRhc3x8Zy5hc3x8dC5hc3x8cCxOPWtlKF8pLEE9ZyE9PXQ/dih7fSx0LHt9LGcpOnQsQz17fTtmb3IodmFyIEkgaW4gQSlcIiRcIiE9PUlbMF0mJlwiYXNcIiE9PUkmJihcImZvcndhcmRlZEFzXCI9PT1JP0MuYXM9QVtJXTooZD9kKEksbSk6IU58fG0oSSkpJiYoQ1tJXT1BW0ldKSk7cmV0dXJuIHQuc3R5bGUmJmcuc3R5bGUhPT10LnN0eWxlJiYoQy5zdHlsZT12KHt9LHQuc3R5bGUse30sZy5zdHlsZSkpLEMuY2xhc3NOYW1lPUFycmF5LnByb3RvdHlwZS5jb25jYXQoYyxoLFMhPT1oP1M6bnVsbCx0LmNsYXNzTmFtZSxnLmNsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpLEMucmVmPXcsdShfLEMpfShDLGUsdCxQKX07cmV0dXJuIE8uZGlzcGxheU5hbWU9ZiwoQz1yLmZvcndhcmRSZWYoTykpLmF0dHJzPVMsQy5jb21wb25lbnRTdHlsZT1JLEMuZGlzcGxheU5hbWU9ZixDLnNob3VsZEZvcndhcmRQcm9wPUEsQy5mb2xkZWRDb21wb25lbnRJZHM9bz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuZm9sZGVkQ29tcG9uZW50SWRzLGUuc3R5bGVkQ29tcG9uZW50SWQpOncsQy5zdHlsZWRDb21wb25lbnRJZD1nLEMudGFyZ2V0PW8/ZS50YXJnZXQ6ZSxDLndpdGhDb21wb25lbnQ9ZnVuY3Rpb24oZSl7dmFyIHI9dC5jb21wb25lbnRJZCxvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89e30saT1PYmplY3Qua2V5cyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluZGV4T2Yobik+PTB8fChvW25dPWVbbl0pO3JldHVybiBvfSh0LFtcImNvbXBvbmVudElkXCJdKSxpPXImJnIrXCItXCIrKGtlKGUpP2U6amUoXyhlKSkpO3JldHVybiBZZShlLHYoe30sbyx7YXR0cnM6Uyxjb21wb25lbnRJZDppfSksbil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLFwiZGVmYXVsdFByb3BzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHN9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHM9bz9NZSh7fSxlLmRlZmF1bHRQcm9wcyx0KTp0fX0pLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJihQZShmLGcpLEMud2FyblRvb01hbnlDbGFzc2VzPWZ1bmN0aW9uKGUsdCl7dmFyIG49e30scj0hMTtyZXR1cm4gZnVuY3Rpb24obyl7aWYoIXImJihuW29dPSEwLE9iamVjdC5rZXlzKG4pLmxlbmd0aD49MjAwKSl7dmFyIGk9dD8nIHdpdGggdGhlIGlkIG9mIFwiJyt0KydcIic6XCJcIjtjb25zb2xlLndhcm4oXCJPdmVyIDIwMCBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgXCIrZStpK1wiLlxcbkNvbnNpZGVyIHVzaW5nIHRoZSBhdHRycyBtZXRob2QsIHRvZ2V0aGVyIHdpdGggYSBzdHlsZSBvYmplY3QgZm9yIGZyZXF1ZW50bHkgY2hhbmdlZCBzdHlsZXMuXFxuRXhhbXBsZTpcXG4gIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMocHJvcHMgPT4gKHtcXG4gICAgc3R5bGU6IHtcXG4gICAgICBiYWNrZ3JvdW5kOiBwcm9wcy5iYWNrZ3JvdW5kLFxcbiAgICB9LFxcbiAgfSkpYHdpZHRoOiAxMDAlO2BcXG5cXG4gIDxDb21wb25lbnQgLz5cIikscj0hMCxuPXt9fX19KGYsZykpLEMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIi5cIitDLnN0eWxlZENvbXBvbmVudElkfSxzJiZ5KEMsZSx7YXR0cnM6ITAsY29tcG9uZW50U3R5bGU6ITAsZGlzcGxheU5hbWU6ITAsZm9sZGVkQ29tcG9uZW50SWRzOiEwLHNob3VsZEZvcndhcmRQcm9wOiEwLHN0eWxlZENvbXBvbmVudElkOiEwLHRhcmdldDohMCx3aXRoQ29tcG9uZW50OiEwfSksQ312YXIgcWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG8pe2lmKHZvaWQgMD09PW8mJihvPUUpLCFuKHIpKXJldHVybiBqKDEsU3RyaW5nKHIpKTt2YXIgaT1mdW5jdGlvbigpe3JldHVybiB0KHIsbyxBZS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKSl9O3JldHVybiBpLndpdGhDb25maWc9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7fSxuKSl9LGkuYXR0cnM9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7YXR0cnM6QXJyYXkucHJvdG90eXBlLmNvbmNhdChvLmF0dHJzLG4pLmZpbHRlcihCb29sZWFuKX0pKX0saX0oWWUsZSl9O1tcImFcIixcImFiYnJcIixcImFkZHJlc3NcIixcImFyZWFcIixcImFydGljbGVcIixcImFzaWRlXCIsXCJhdWRpb1wiLFwiYlwiLFwiYmFzZVwiLFwiYmRpXCIsXCJiZG9cIixcImJpZ1wiLFwiYmxvY2txdW90ZVwiLFwiYm9keVwiLFwiYnJcIixcImJ1dHRvblwiLFwiY2FudmFzXCIsXCJjYXB0aW9uXCIsXCJjaXRlXCIsXCJjb2RlXCIsXCJjb2xcIixcImNvbGdyb3VwXCIsXCJkYXRhXCIsXCJkYXRhbGlzdFwiLFwiZGRcIixcImRlbFwiLFwiZGV0YWlsc1wiLFwiZGZuXCIsXCJkaWFsb2dcIixcImRpdlwiLFwiZGxcIixcImR0XCIsXCJlbVwiLFwiZW1iZWRcIixcImZpZWxkc2V0XCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvb3RlclwiLFwiZm9ybVwiLFwiaDFcIixcImgyXCIsXCJoM1wiLFwiaDRcIixcImg1XCIsXCJoNlwiLFwiaGVhZFwiLFwiaGVhZGVyXCIsXCJoZ3JvdXBcIixcImhyXCIsXCJodG1sXCIsXCJpXCIsXCJpZnJhbWVcIixcImltZ1wiLFwiaW5wdXRcIixcImluc1wiLFwia2JkXCIsXCJrZXlnZW5cIixcImxhYmVsXCIsXCJsZWdlbmRcIixcImxpXCIsXCJsaW5rXCIsXCJtYWluXCIsXCJtYXBcIixcIm1hcmtcIixcIm1hcnF1ZWVcIixcIm1lbnVcIixcIm1lbnVpdGVtXCIsXCJtZXRhXCIsXCJtZXRlclwiLFwibmF2XCIsXCJub3NjcmlwdFwiLFwib2JqZWN0XCIsXCJvbFwiLFwib3B0Z3JvdXBcIixcIm9wdGlvblwiLFwib3V0cHV0XCIsXCJwXCIsXCJwYXJhbVwiLFwicGljdHVyZVwiLFwicHJlXCIsXCJwcm9ncmVzc1wiLFwicVwiLFwicnBcIixcInJ0XCIsXCJydWJ5XCIsXCJzXCIsXCJzYW1wXCIsXCJzY3JpcHRcIixcInNlY3Rpb25cIixcInNlbGVjdFwiLFwic21hbGxcIixcInNvdXJjZVwiLFwic3BhblwiLFwic3Ryb25nXCIsXCJzdHlsZVwiLFwic3ViXCIsXCJzdW1tYXJ5XCIsXCJzdXBcIixcInRhYmxlXCIsXCJ0Ym9keVwiLFwidGRcIixcInRleHRhcmVhXCIsXCJ0Zm9vdFwiLFwidGhcIixcInRoZWFkXCIsXCJ0aW1lXCIsXCJ0aXRsZVwiLFwidHJcIixcInRyYWNrXCIsXCJ1XCIsXCJ1bFwiLFwidmFyXCIsXCJ2aWRlb1wiLFwid2JyXCIsXCJjaXJjbGVcIixcImNsaXBQYXRoXCIsXCJkZWZzXCIsXCJlbGxpcHNlXCIsXCJmb3JlaWduT2JqZWN0XCIsXCJnXCIsXCJpbWFnZVwiLFwibGluZVwiLFwibGluZWFyR3JhZGllbnRcIixcIm1hcmtlclwiLFwibWFza1wiLFwicGF0aFwiLFwicGF0dGVyblwiLFwicG9seWdvblwiLFwicG9seWxpbmVcIixcInJhZGlhbEdyYWRpZW50XCIsXCJyZWN0XCIsXCJzdG9wXCIsXCJzdmdcIixcInRleHRcIixcInRzcGFuXCJdLmZvckVhY2goKGZ1bmN0aW9uKGUpe3FlW2VdPXFlKGUpfSkpO3ZhciBIZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt0aGlzLnJ1bGVzPWUsdGhpcy5jb21wb25lbnRJZD10LHRoaXMuaXNTdGF0aWM9cmUoZSksWi5yZWdpc3RlcklkKHRoaXMuY29tcG9uZW50SWQrMSl9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuY3JlYXRlU3R5bGVzPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPXIoTmUodGhpcy5ydWxlcyx0LG4scikuam9pbihcIlwiKSxcIlwiKSxpPXRoaXMuY29tcG9uZW50SWQrZTtuLmluc2VydFJ1bGVzKGksaSxvKX0sdC5yZW1vdmVTdHlsZXM9ZnVuY3Rpb24oZSx0KXt0LmNsZWFyUnVsZXModGhpcy5jb21wb25lbnRJZCtlKX0sdC5yZW5kZXJTdHlsZXM9ZnVuY3Rpb24oZSx0LG4scil7ZT4yJiZaLnJlZ2lzdGVySWQodGhpcy5jb21wb25lbnRJZCtlKSx0aGlzLnJlbW92ZVN0eWxlcyhlLG4pLHRoaXMuY3JlYXRlU3R5bGVzKGUsdCxuLHIpfSxlfSgpO2Z1bmN0aW9uICRlKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCksbz0xO288dDtvKyspbltvLTFdPWFyZ3VtZW50c1tvXTt2YXIgcz1BZS5hcHBseSh2b2lkIDAsW2VdLmNvbmNhdChuKSksYT1cInNjLWdsb2JhbC1cIitUZShKU09OLnN0cmluZ2lmeShzKSksdT1uZXcgSGUocyxhKTtmdW5jdGlvbiBsKGUpe3ZhciB0PWZlKCksbj1tZSgpLG89aSh6ZSksbD1jKHQuYWxsb2NhdGVHU0luc3RhbmNlKGEpKS5jdXJyZW50O3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnIuQ2hpbGRyZW4uY291bnQoZS5jaGlsZHJlbikmJmNvbnNvbGUud2FybihcIlRoZSBnbG9iYWwgc3R5bGUgY29tcG9uZW50IFwiK2ErXCIgd2FzIGdpdmVuIGNoaWxkIEpTWC4gY3JlYXRlR2xvYmFsU3R5bGUgZG9lcyBub3QgcmVuZGVyIGNoaWxkcmVuLlwiKSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZzLnNvbWUoKGZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYtMSE9PWUuaW5kZXhPZihcIkBpbXBvcnRcIil9KSkmJmNvbnNvbGUud2FybihcIlBsZWFzZSBkbyBub3QgdXNlIEBpbXBvcnQgQ1NTIHN5bnRheCBpbiBjcmVhdGVHbG9iYWxTdHlsZSBhdCB0aGlzIHRpbWUsIGFzIHRoZSBDU1NPTSBBUElzIHdlIHVzZSBpbiBwcm9kdWN0aW9uIGRvIG5vdCBoYW5kbGUgaXQgd2VsbC4gSW5zdGVhZCwgd2UgcmVjb21tZW5kIHVzaW5nIGEgbGlicmFyeSBzdWNoIGFzIHJlYWN0LWhlbG1ldCB0byBpbmplY3QgYSB0eXBpY2FsIDxsaW5rPiBtZXRhIHRhZyB0byB0aGUgc3R5bGVzaGVldCwgb3Igc2ltcGx5IGVtYmVkZGluZyBpdCBtYW51YWxseSBpbiB5b3VyIGluZGV4Lmh0bWwgPGhlYWQ+IHNlY3Rpb24gZm9yIGEgc2ltcGxlciBhcHAuXCIpLGQoKGZ1bmN0aW9uKCl7cmV0dXJuIGgobCxlLHQsbyxuKSxmdW5jdGlvbigpe3JldHVybiB1LnJlbW92ZVN0eWxlcyhsLHQpfX0pLFtsLGUsdCxvLG5dKSxudWxsfWZ1bmN0aW9uIGgoZSx0LG4scixvKXtpZih1LmlzU3RhdGljKXUucmVuZGVyU3R5bGVzKGUsTyxuLG8pO2Vsc2V7dmFyIGk9dih7fSx0LHt0aGVtZTpPZSh0LHIsbC5kZWZhdWx0UHJvcHMpfSk7dS5yZW5kZXJTdHlsZXMoZSxpLG4sbyl9fXJldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlBlKGEpLHIubWVtbyhsKX1mdW5jdGlvbiBXZShlKXtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZcIlJlYWN0TmF0aXZlXCI9PT1uYXZpZ2F0b3IucHJvZHVjdCYmY29uc29sZS53YXJuKFwiYGtleWZyYW1lc2AgY2Fubm90IGJlIHVzZWQgb24gUmVhY3ROYXRpdmUsIG9ubHkgb24gdGhlIHdlYi4gVG8gZG8gYW5pbWF0aW9uIGluIFJlYWN0TmF0aXZlIHBsZWFzZSB1c2UgQW5pbWF0ZWQuXCIpO2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTt2YXIgbz1BZS5hcHBseSh2b2lkIDAsW2VdLmNvbmNhdChuKSkuam9pbihcIlwiKSxpPVRlKG8pO3JldHVybiBuZXcgdmUoaSxvKX12YXIgVWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dmFyIGU9dGhpczt0aGlzLl9lbWl0U2hlZXRDU1M9ZnVuY3Rpb24oKXt2YXIgdD1lLmluc3RhbmNlLnRvU3RyaW5nKCksbj1xKCk7cmV0dXJuXCI8c3R5bGUgXCIrW24mJidub25jZT1cIicrbisnXCInLEErJz1cInRydWVcIicsJ2RhdGEtc3R5bGVkLXZlcnNpb249XCI1LjIuM1wiJ10uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpK1wiPlwiK3QrXCI8L3N0eWxlPlwifSx0aGlzLmdldFN0eWxlVGFncz1mdW5jdGlvbigpe3JldHVybiBlLnNlYWxlZD9qKDIpOmUuX2VtaXRTaGVldENTUygpfSx0aGlzLmdldFN0eWxlRWxlbWVudD1mdW5jdGlvbigpe3ZhciB0O2lmKGUuc2VhbGVkKXJldHVybiBqKDIpO3ZhciBuPSgodD17fSlbQV09XCJcIix0W1wiZGF0YS1zdHlsZWQtdmVyc2lvblwiXT1cIjUuMi4zXCIsdC5kYW5nZXJvdXNseVNldElubmVySFRNTD17X19odG1sOmUuaW5zdGFuY2UudG9TdHJpbmcoKX0sdCksbz1xKCk7cmV0dXJuIG8mJihuLm5vbmNlPW8pLFtyLmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiLHYoe30sbix7a2V5Olwic2MtMC0wXCJ9KSldfSx0aGlzLnNlYWw9ZnVuY3Rpb24oKXtlLnNlYWxlZD0hMH0sdGhpcy5pbnN0YW5jZT1uZXcgWih7aXNTZXJ2ZXI6ITB9KSx0aGlzLnNlYWxlZD0hMX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5jb2xsZWN0U3R5bGVzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNlYWxlZD9qKDIpOnIuY3JlYXRlRWxlbWVudCh5ZSx7c2hlZXQ6dGhpcy5pbnN0YW5jZX0sZSl9LHQuaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtPWZ1bmN0aW9uKGUpe3JldHVybiBqKDMpfSxlfSgpLEplPWZ1bmN0aW9uKGUpe3ZhciB0PXIuZm9yd2FyZFJlZigoZnVuY3Rpb24odCxuKXt2YXIgbz1pKHplKSxzPWUuZGVmYXVsdFByb3BzLGE9T2UodCxvLHMpO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnZvaWQgMD09PWEmJmNvbnNvbGUud2FybignW3dpdGhUaGVtZV0gWW91IGFyZSBub3QgdXNpbmcgYSBUaGVtZVByb3ZpZGVyIG5vciBwYXNzaW5nIGEgdGhlbWUgcHJvcCBvciBhIHRoZW1lIGluIGRlZmF1bHRQcm9wcyBpbiBjb21wb25lbnQgY2xhc3MgXCInK18oZSkrJ1wiJyksci5jcmVhdGVFbGVtZW50KGUsdih7fSx0LHt0aGVtZTphLHJlZjpufSkpfSkpO3JldHVybiB5KHQsZSksdC5kaXNwbGF5TmFtZT1cIldpdGhUaGVtZShcIitfKGUpK1wiKVwiLHR9LFhlPWZ1bmN0aW9uKCl7cmV0dXJuIGkoemUpfSxaZT17U3R5bGVTaGVldDpaLG1hc3RlclNoZWV0OmhlfTtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZcIlJlYWN0TmF0aXZlXCI9PT1uYXZpZ2F0b3IucHJvZHVjdCYmY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB5b3UndmUgaW1wb3J0ZWQgJ3N0eWxlZC1jb21wb25lbnRzJyBvbiBSZWFjdCBOYXRpdmUuXFxuUGVyaGFwcyB5b3UncmUgbG9va2luZyB0byBpbXBvcnQgJ3N0eWxlZC1jb21wb25lbnRzL25hdGl2ZSc/XFxuUmVhZCBtb3JlIGFib3V0IHRoaXMgYXQgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYmFzaWNzI3JlYWN0LW5hdGl2ZVwiKSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInRlc3RcIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYod2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl09d2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl18fDAsMT09PXdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdJiZjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHRoZXJlIGFyZSBzZXZlcmFsIGluc3RhbmNlcyBvZiAnc3R5bGVkLWNvbXBvbmVudHMnIGluaXRpYWxpemVkIGluIHRoaXMgYXBwbGljYXRpb24uIFRoaXMgbWF5IGNhdXNlIGR5bmFtaWMgc3R5bGVzIHRvIG5vdCByZW5kZXIgcHJvcGVybHksIGVycm9ycyBkdXJpbmcgdGhlIHJlaHlkcmF0aW9uIHByb2Nlc3MsIGEgbWlzc2luZyB0aGVtZSBwcm9wLCBhbmQgbWFrZXMgeW91ciBhcHBsaWNhdGlvbiBiaWdnZXIgd2l0aG91dCBnb29kIHJlYXNvbi5cXG5cXG5TZWUgaHR0cHM6Ly9zLWMuc2gvMkJBWHplZCBmb3IgbW9yZSBpbmZvLlwiKSx3aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXSs9MSk7ZXhwb3J0IGRlZmF1bHQgcWU7ZXhwb3J0e1VlIGFzIFNlcnZlclN0eWxlU2hlZXQsbGUgYXMgU3R5bGVTaGVldENvbnN1bWVyLHVlIGFzIFN0eWxlU2hlZXRDb250ZXh0LHllIGFzIFN0eWxlU2hlZXRNYW5hZ2VyLExlIGFzIFRoZW1lQ29uc3VtZXIsemUgYXMgVGhlbWVDb250ZXh0LEdlIGFzIFRoZW1lUHJvdmlkZXIsWmUgYXMgX19QUklWQVRFX18sJGUgYXMgY3JlYXRlR2xvYmFsU3R5bGUsQWUgYXMgY3NzLE4gYXMgaXNTdHlsZWRDb21wb25lbnQsV2UgYXMga2V5ZnJhbWVzLFhlIGFzIHVzZVRoZW1lLEMgYXMgdmVyc2lvbixKZSBhcyB3aXRoVGhlbWV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMubWFwXG4iLCJleHBvcnQgdmFyIHRoZW1lID0ge1xyXG4gICAgY29sb3JzOiB7XHJcbiAgICAgICAgZ3JleURhcms6IFwicmdiKDYwLCA2MCwgNTkpXCIsXHJcbiAgICAgICAgcmVkRGFyazogXCJyZ2IoMjI4LCAzLCA0NilcIixcclxuICAgICAgICByZWRMaWdodDogXCJyZ2IoMjU1LCA3NywgNzMpXCIsXHJcbiAgICAgICAgb2NoZXI6IFwicmdiKDI1NSwgMjIyLCAxNDgpXCIsXHJcbiAgICAgICAgd2hpdGU6IFwicmdiKDI1NSwyNTUsMjU1KVwiLFxyXG4gICAgfSxcclxuICAgIGZvbnRTaXplOiB7XHJcbiAgICAgICAgaGVhZGVyOiBcIjIuNXJlbVwiLFxyXG4gICAgICAgIG5vcm1hbDogXCIxLjNyZW1cIixcclxuICAgICAgICBzbWFsbDogXCIxLjByZW1cIixcclxuICAgIH0sXHJcbn07XHJcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhYTNiMWYzZDMyMWE4M2QzNWNlYzYwYjY4NzQxNGM5ZC50dGZcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYThkNmFjMDNjN2I5NmI3YWNiNjIyOGZmMjY3NjEzOWQudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjc1MzcxZjUzZjA2MTgxZGY3NWYxNmYyYTE0MDUzM2U1LnR0ZlwiOyIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbmltcG9ydCB7IGNyZWF0ZUdsb2JhbFN0eWxlIH0gZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XHJcbmltcG9ydCBiYXJsb3dDb25kZW5zZWRTZW1pQm9sZCBmcm9tIFwiLi9mb250cy9CYXJsb3dDb25kZW5zZWQtU2VtaUJvbGQudHRmXCI7XHJcbmltcG9ydCByb2JvdG8gZnJvbSBcIi4vZm9udHMvUm9ib3RvLVJlZ3VsYXIudHRmXCI7XHJcbmltcG9ydCByb2JvdG9Cb2xkIGZyb20gXCIuL2ZvbnRzL1JvYm90by1Cb2xkLnR0ZlwiO1xyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVHbG9iYWxTdHlsZSh0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICAgIEBmb250LWZhY2Uge1xcbiAgICAgICAgZm9udC1mYW1pbHk6ICdiYXJsb3cnO1xcbiAgICAgICAgc3JjOiB1cmwoXCIsIFwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIH07XFxuXFxuICAgIEBmb250LWZhY2Uge1xcbiAgICAgICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xcbiAgICAgICAgc3JjOiB1cmwoXCIsIFwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIH07XFxuXFxuICAgIEBmb250LWZhY2Uge1xcbiAgICAgICAgZm9udC1mYW1pbHk6ICdyb2JvdG9Cb2xkJztcXG4gICAgICAgIHNyYzogdXJsKFwiLCBcIikgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICB9O1xcblxcbiAgICAqIHtcXG4gICAgICAgIG1hcmdpbjogMHJlbTtcXG4gICAgICAgIHBhZGRpbmc6IDByZW07XFxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICB9XFxuXFxuICAgIGh0bWwge1xcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xcbiAgICAgICAgZm9udC1mYW1pbHk6IFxcXCJyb2JvdG9cXFwiO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICAgICBcXG4gICAgfVxcblxcbiAgICBib2R5IHtcXG4gICAgICAgIGZvbnQtc2l6ZTogXCIsIFwiO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogXCIsIFwiO1xcbiAgICAgICAgXFxuICAgIH1cXG5cXG4gICAgI3Jvb3Qge1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICB9XFxuXCJdLCBbXCJcXG4gICAgQGZvbnQtZmFjZSB7XFxuICAgICAgICBmb250LWZhbWlseTogJ2Jhcmxvdyc7XFxuICAgICAgICBzcmM6IHVybChcIiwgXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgfTtcXG5cXG4gICAgQGZvbnQtZmFjZSB7XFxuICAgICAgICBmb250LWZhbWlseTogJ3JvYm90byc7XFxuICAgICAgICBzcmM6IHVybChcIiwgXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgfTtcXG5cXG4gICAgQGZvbnQtZmFjZSB7XFxuICAgICAgICBmb250LWZhbWlseTogJ3JvYm90b0JvbGQnO1xcbiAgICAgICAgc3JjOiB1cmwoXCIsIFwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIH07XFxuXFxuICAgICoge1xcbiAgICAgICAgbWFyZ2luOiAwcmVtO1xcbiAgICAgICAgcGFkZGluZzogMHJlbTtcXG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIH1cXG5cXG4gICAgaHRtbCB7XFxuICAgICAgICBmb250LXNpemU6IDEwcHg7XFxuICAgICAgICBmb250LWZhbWlseTogXFxcInJvYm90b1xcXCI7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgIFxcbiAgICB9XFxuXFxuICAgIGJvZHkge1xcbiAgICAgICAgZm9udC1zaXplOiBcIiwgXCI7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBcIiwgXCI7XFxuICAgICAgICBcXG4gICAgfVxcblxcbiAgICAjcm9vdCB7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIH1cXG5cIl0pKSwgYmFybG93Q29uZGVuc2VkU2VtaUJvbGQsIHJvYm90bywgcm9ib3RvQm9sZCwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBwcm9wcy50aGVtZS5mb250U2l6ZS5ub3JtYWw7IH0sIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuY29sb3JzLndoaXRlOyB9KTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcblxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufSIsImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xudmFyIGNvbW1vbmpzR2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB7fTtcblxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gIHZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuICByZXR1cm4gY29tbW9uanNHbG9iYWxba2V5XSA9IChjb21tb25qc0dsb2JhbFtrZXldIHx8IDApICsgMTtcbn1cblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ2V0VW5pcXVlSWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBjcmVhdGVQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dCc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgaGlzdG9yeUNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyLUhpc3RvcnlcIik7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCQxID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dCQxKFwiUm91dGVyXCIpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICB9XG4gICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChoaXN0b3J5Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbCxcbiAgICAgIHZhbHVlOiB0aGlzLnByb3BzLmhpc3RvcnlcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIExpZmVjeWNsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTGlmZWN5Y2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxuICovXG5cbmZ1bmN0aW9uIFByb21wdChfcmVmKSB7XG4gIHZhciBtZXNzYWdlID0gX3JlZi5tZXNzYWdlLFxuICAgICAgX3JlZiR3aGVuID0gX3JlZi53aGVuLFxuICAgICAgd2hlbiA9IF9yZWYkd2hlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkd2hlbjtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dC5oaXN0b3J5LmJsb2NrO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xuICAgICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICB9LFxuICAgICAgbWVzc2FnZTogbWVzc2FnZVxuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgbWVzc2FnZVR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pO1xuICBQcm9tcHQucHJvcFR5cGVzID0ge1xuICAgIHdoZW46IFByb3BUeXBlcy5ib29sLFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VUeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoKSB7XG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRvcjtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0aCBhbmQgcGFyYW1ldGVycy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhdGggPSBcIi9cIjtcbiAgfVxuXG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywge1xuICAgIHByZXR0eTogdHJ1ZVxuICB9KTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxuZnVuY3Rpb24gUmVkaXJlY3QoX3JlZikge1xuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIF9yZWYkcHVzaCA9IF9yZWYucHVzaCxcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3RvcnksXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBjb250ZXh0LnN0YXRpY0NvbnRleHQ7XG4gICAgdmFyIG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oY29tcHV0ZWRNYXRjaCA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpIDogX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICB9KSA6IHRvKTsgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcbiAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cblxuICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XG4gICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG5cbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxuICAgICAgICB9KSkpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICBwYXRoOiBvcHRpb25zXG4gICAgfTtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICB2YXIgdmFsdWUgPSBjaGlsZHJlbihwcm9wcyk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxuXG52YXIgUm91dGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkMSkge1xuICAgICAgIWNvbnRleHQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIG1hdGNoID0gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCA/IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gICAgICA6IF90aGlzLnByb3BzLnBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF90aGlzLnByb3BzKSA6IGNvbnRleHQkMS5tYXRjaDtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkMSwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBtYXRjaFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHByb3BzXG4gICAgICB9LCBwcm9wcy5tYXRjaCA/IGNoaWxkcmVuID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IGNoaWxkcmVuIDogY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IG51bGwpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZS5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHByb3BzLCBwcm9wTmFtZSkge1xuICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGF0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbFxuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufVxuXG5mdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKSA6IGludmFyaWFudChmYWxzZSkgO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzJGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wcyRjb250ZXh0O1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICAgIH0sXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXG4gICAgICBzdGF0aWNDb250ZXh0OiBjb250ZXh0XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0Lm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG5cbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIGNvbnRleHQsIHtcbiAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxuICAgIH07XG4gIH1cblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59XG5cbnZhciB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcbmZ1bmN0aW9uIHVzZUhpc3RvcnkoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoaGlzdG9yeUNvbnRleHQpO1xufVxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmxvY2F0aW9uO1xufVxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgcGF0aCkgOiBtYXRjaDtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBnbG9iYWwgPSB3aW5kb3c7XG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xuICAgIHZhciBidWlsZE5hbWVzID0ge1xuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxuICAgICAgdW1kOiBcIlVNRFwiXG4gICAgfTtcblxuICAgIGlmIChnbG9iYWxba2V5XSAmJiBnbG9iYWxba2V5XSAhPT0gXCJlc21cIikge1xuICAgICAgdmFyIGluaXRpYWxCdWlsZE5hbWUgPSBidWlsZE5hbWVzW2dsb2JhbFtrZXldXTtcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxuICAgICAgLy8gbG9hZGluZyAyIGRpZmZlcmVudCBidWlsZHMuXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcbiAgICB9XG5cbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XG4gIH1cbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgaGlzdG9yeUNvbnRleHQgYXMgX19IaXN0b3J5Q29udGV4dCwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQsIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCB1c2VIaXN0b3J5LCB1c2VMb2NhdGlvbiwgdXNlUGFyYW1zLCB1c2VSb3V0ZU1hdGNoLCB3aXRoUm91dGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXIuanMubWFwXG4iLCJpbXBvcnQgeyBSb3V0ZXIsIF9fUm91dGVyQ29udGV4dCwgbWF0Y2hQYXRoIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCB1c2VIaXN0b3J5LCB1c2VMb2NhdGlvbiwgdXNlUGFyYW1zLCB1c2VSb3V0ZU1hdGNoLCB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQnJvd3NlclJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIYXNoSGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEhhc2hSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBIYXNoUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIHJlc29sdmVUb0xvY2F0aW9uID0gZnVuY3Rpb24gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcImZ1bmN0aW9uXCIgPyB0byhjdXJyZW50TG9jYXRpb24pIDogdG87XG59O1xudmFyIG5vcm1hbGl6ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiBub3JtYWxpemVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjdXJyZW50TG9jYXRpb24pIDogdG87XG59O1xuXG52YXIgZm9yd2FyZFJlZlNoaW0gPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYgPSBSZWFjdC5mb3J3YXJkUmVmO1xuXG5pZiAodHlwZW9mIGZvcndhcmRSZWYgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZm9yd2FyZFJlZiA9IGZvcndhcmRSZWZTaGltO1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuXG52YXIgTGlua0FuY2hvciA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIGZvcndhcmRlZFJlZikge1xuICB2YXIgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgbmF2aWdhdGUgPSBfcmVmLm5hdmlnYXRlLFxuICAgICAgX29uQ2xpY2sgPSBfcmVmLm9uQ2xpY2ssXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiaW5uZXJSZWZcIiwgXCJuYXZpZ2F0ZVwiLCBcIm9uQ2xpY2tcIl0pO1xuXG4gIHZhciB0YXJnZXQgPSByZXN0LnRhcmdldDtcblxuICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChfb25DbGljaykgX29uQ2xpY2soZXZlbnQpO1xuICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhyb3cgZXg7XG4gICAgICB9XG5cbiAgICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgICBldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAgICF0YXJnZXQgfHwgdGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICAgKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBuYXZpZ2F0ZSgpO1xuICAgICAgICB9XG4gICAgfVxuICB9KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gIH0gZWxzZSB7XG4gICAgcHJvcHMucmVmID0gaW5uZXJSZWY7XG4gIH1cbiAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzeC1hMTF5L2FuY2hvci1oYXMtY29udGVudCAqL1xuXG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHByb3BzKTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIExpbmtBbmNob3IuZGlzcGxheU5hbWUgPSBcIkxpbmtBbmNob3JcIjtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5cblxudmFyIExpbmsgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmMiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBfcmVmMiRjb21wb25lbnQgPSBfcmVmMi5jb21wb25lbnQsXG4gICAgICBjb21wb25lbnQgPSBfcmVmMiRjb21wb25lbnQgPT09IHZvaWQgMCA/IExpbmtBbmNob3IgOiBfcmVmMiRjb21wb25lbnQsXG4gICAgICByZXBsYWNlID0gX3JlZjIucmVwbGFjZSxcbiAgICAgIHRvID0gX3JlZjIudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYyLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJjb21wb25lbnRcIiwgXCJyZXBsYWNlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeTtcbiAgICB2YXIgbG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKSwgY29udGV4dC5sb2NhdGlvbik7XG4gICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xuXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhyZWY6IGhyZWYsXG4gICAgICBuYXZpZ2F0ZTogZnVuY3Rpb24gbmF2aWdhdGUoKSB7XG4gICAgICAgIHZhciBsb2NhdGlvbiA9IHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICAgICAgdmFyIG1ldGhvZCA9IHJlcGxhY2UgPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9XG4gICAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgdG9UeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmNdKTtcbiAgdmFyIHJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiBQcm9wVHlwZXMuYW55XG4gIH0pXSk7XG4gIExpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcbiAgTGluay5wcm9wVHlwZXMgPSB7XG4gICAgaW5uZXJSZWY6IHJlZlR5cGUsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgZm9yd2FyZFJlZlNoaW0kMSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiQxID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmJDEgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZm9yd2FyZFJlZiQxID0gZm9yd2FyZFJlZlNoaW0kMTtcbn1cblxuZnVuY3Rpb24gam9pbkNsYXNzbmFtZXMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc25hbWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGNsYXNzbmFtZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gaTtcbiAgfSkuam9pbihcIiBcIik7XG59XG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5cblxudmFyIE5hdkxpbmsgPSBmb3J3YXJkUmVmJDEoZnVuY3Rpb24gKF9yZWYsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZiRhcmlhQ3VycmVudCA9IF9yZWZbXCJhcmlhLWN1cnJlbnRcIl0sXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWYkYXJpYUN1cnJlbnQgPT09IHZvaWQgMCA/IFwicGFnZVwiIDogX3JlZiRhcmlhQ3VycmVudCxcbiAgICAgIF9yZWYkYWN0aXZlQ2xhc3NOYW1lID0gX3JlZi5hY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9PT0gdm9pZCAwID8gXCJhY3RpdmVcIiA6IF9yZWYkYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxuICAgICAgY2xhc3NOYW1lUHJvcCA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgaXNBY3RpdmVQcm9wID0gX3JlZi5pc0FjdGl2ZSxcbiAgICAgIGxvY2F0aW9uUHJvcCA9IF9yZWYubG9jYXRpb24sXG4gICAgICBzZW5zaXRpdmUgPSBfcmVmLnNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgc3R5bGVQcm9wID0gX3JlZi5zdHlsZSxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJhcmlhLWN1cnJlbnRcIiwgXCJhY3RpdmVDbGFzc05hbWVcIiwgXCJhY3RpdmVTdHlsZVwiLCBcImNsYXNzTmFtZVwiLCBcImV4YWN0XCIsIFwiaXNBY3RpdmVcIiwgXCJsb2NhdGlvblwiLCBcInNlbnNpdGl2ZVwiLCBcInN0cmljdFwiLCBcInN0eWxlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TmF2TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgY3VycmVudExvY2F0aW9uID0gbG9jYXRpb25Qcm9wIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgdmFyIHRvTG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pLCBjdXJyZW50TG9jYXRpb24pO1xuICAgIHZhciBwYXRoID0gdG9Mb2NhdGlvbi5wYXRobmFtZTsgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcblxuICAgIHZhciBlc2NhcGVkUGF0aCA9IHBhdGggJiYgcGF0aC5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfC9cXFxcXSkvZywgXCJcXFxcJDFcIik7XG4gICAgdmFyIG1hdGNoID0gZXNjYXBlZFBhdGggPyBtYXRjaFBhdGgoY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLCB7XG4gICAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICAgIGV4YWN0OiBleGFjdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlLFxuICAgICAgc3RyaWN0OiBzdHJpY3RcbiAgICB9KSA6IG51bGw7XG4gICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pIDogbWF0Y2gpO1xuICAgIHZhciBjbGFzc05hbWUgPSBpc0FjdGl2ZSA/IGpvaW5DbGFzc25hbWVzKGNsYXNzTmFtZVByb3AsIGFjdGl2ZUNsYXNzTmFtZSkgOiBjbGFzc05hbWVQcm9wO1xuICAgIHZhciBzdHlsZSA9IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlUHJvcCwge30sIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHtcbiAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGwsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgIHRvOiB0b0xvY2F0aW9uXG4gICAgfSwgcmVzdCk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0kMSAhPT0gZm9yd2FyZFJlZiQxKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcbiAgTmF2TGluay5wcm9wVHlwZXMgPSBfZXh0ZW5kcyh7fSwgTGluay5wcm9wVHlwZXMsIHtcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdFxuICB9KTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluayB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLWRvbS5qcy5tYXBcbiIsInZhciBfcGF0aDtcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmZ1bmN0aW9uIFN2Z0hvbWUocHJvcHMpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDEwMCAxMDBcIlxuICB9LCBwcm9wcyksIF9wYXRoIHx8IChfcGF0aCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImhvbWVfc3ZnX19jbHMtMVwiLFxuICAgIGQ6IFwiTTc3LjI4IDUxLjMyTDU0LjIzIDI4LjM3IDUwIDI0LjE0bC00LjIzIDQuMjItMjMuMDUgMjNMMjcgNTUuNTRsMi0xLjg3djIyLjE5aDE0LjU3VjYzLjI4YTYuMTIgNi4xMiAwIDAxNi4wOC02LjEzaC43MWE2LjEyIDYuMTIgMCAwMTYuMDcgNi4xM3YxMi41OGgxNC42M1Y1My42N2wyIDEuODd6XCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJWcnN0dmEgMVwiXG4gIH0pKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z0hvbWU7IiwidmFyIF9nO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZnVuY3Rpb24gU3ZnU2hvcHBpbmdDYXJ0KHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfZXh0ZW5kcyh7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxMDAgMTAwXCJcbiAgfSwgcHJvcHMpLCBfZyB8fCAoX2cgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIFwiZGF0YS1uYW1lXCI6IFwiVnJzdHZhIDFcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJzaG9wcGluZ0NhcnRfc3ZnX19jbHMtMVwiLFxuICAgIGQ6IFwiTTY5LjIzIDYyLjc3YTYuNjIgNi42MiAwIDEwNi42IDYuNjIgNi42IDYuNiAwIDAwLTYuNi02LjYyTTQyLjMzIDYyLjc3aC0uMTRsLTguMjgtMzUuMjZBNC42NCA0LjY0IDAgMDAyOS40OSAyNEgxNi4zYTEuOTEgMS45MSAwIDAwMCAzLjgxaDEzLjE5YS45LjkgMCAwMS43My41N0wzOC41NyA2NGE2LjYgNi42IDAgMTAzLjc2LTEuMThcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBjbGFzc05hbWU6IFwic2hvcHBpbmdDYXJ0X3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk04MS4wNyAzMi40SDM3LjIxbDIgOC40Mi40MiAxLjc5LjE4LjczTDQyLjA5IDUzbDEuMTggNXYuMTRsLjcgM2gyOC41OGEyLjUxIDIuNTEgMCAwMDIuMzYtMS42Nkw3Ni41MiA1NWw1LjcyLTE1LjgxIDEuMi0zLjM0YTIuNTMgMi41MyAwIDAwLTIuMzctMy40XCJcbiAgfSkpKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z1Nob3BwaW5nQ2FydDsiLCJ2YXIgX3BhdGg7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5mdW5jdGlvbiBTdmdDZWxsUGhvbmUocHJvcHMpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDEwMCAxMDBcIlxuICB9LCBwcm9wcyksIF9wYXRoIHx8IChfcGF0aCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImNlbGxQaG9uZV9zdmdfX2Nscy0xXCIsXG4gICAgZDogXCJNMjcuMzYgNDEuMjZBMTQuNTcgMTQuNTcgMCAwMTMzIDI4bC40LS4zMWEzLjY5IDMuNjkgMCAwMTQuNzMuMzFsNC4zNCA0LjM0YTMuNjQgMy42NCAwIDAxMCA1LjEzbC0yLjA3IDIuNjlhNS41NyA1LjU3IDAgMDAtLjcxIDUuNTZjMiA0Ljc0IDYuNyAxMy40IDE0LjU1IDE1LjE2YTUuNjUgNS42NSAwIDAwNC42Ni0xLjA3bDMuMzQtMi41N2EzLjY0IDMuNjQgMCAwMTUuMTMgMGw0LjM0IDQuMzRhMy43IDMuNyAwIDAxLjI5IDQuNzhsLS4yOC4zNWExNi40MiAxNi40MiAwIDAxLTE3LjEzIDUuNzVjLTQuNjQtMS4yNi0xMC4yMS00LjEtMTYuMS0xMC03LjgxLTcuOC0xMC40NC0xNS40Ni0xMS4xMy0yMS4yXCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJWcnN0dmEgMVwiXG4gIH0pKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z0NlbGxQaG9uZTsiLCJ2YXIgX3BhdGg7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5mdW5jdGlvbiBTdmdGcnVpdFByZXNzKHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfZXh0ZW5kcyh7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxMDAgMTAwXCJcbiAgfSwgcHJvcHMpLCBfcGF0aCB8fCAoX3BhdGggPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmcnVpdFByZXNzX3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk01Mi45NCAyOUg2NC43YTMuMzggMy4zOCAwIDEwMC0zLjE3SDUzYTMuMzUgMy4zNSAwIDAwLTYgMEgzNS4zNUEzLjM5IDMuMzkgMCAxMDM1LjMgMjloMTEuNzZhMy40NiAzLjQ2IDAgMDAxLjM2IDEuMzV2OS44NkgzNS40N3YzMC41SDMwQTUuMjggNS4yOCAwIDAwMzUuMjggNzZoMjkuNDRBNS4yOCA1LjI4IDAgMDA3MCA3MC43MWgtNS40N1Y0MC4yMmgtMTN2LTkuODZBMy40IDMuNCAwIDAwNTIuOTQgMjlcIixcbiAgICBcImRhdGEtbmFtZVwiOiBcIlZyc3R2YSAxXCJcbiAgfSkpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU3ZnRnJ1aXRQcmVzczsiLCJ2YXIgX2c7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5mdW5jdGlvbiBTdmdUd29Cb3R0bGVzKHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfZXh0ZW5kcyh7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxMDAgMTAwXCJcbiAgfSwgcHJvcHMpLCBfZyB8fCAoX2cgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIFwiZGF0YS1uYW1lXCI6IFwiVnJzdHZhIDFcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJ0d29Cb3R0bGVzX3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk00Ny44NyA2My40cy02LjkzLjgyLTEwIC44Mi0xMC0uODItMTAtLjgyVjUwLjEzYTkyLjMzIDkyLjMzIDAgMDA5Ljk1Ljg3IDkyLjMzIDkyLjMzIDAgMDAxMC0uODJ6bTEuODggMTAuODdzLS4xOS0yNS4yMiAwLTI3Ljg1LTEtNy4xOC0zLjgzLTExYTguMzMgOC4zMyAwIDAxLTEuNzYtNi4xNEEzLjcyIDMuNzIgMCAwMDQ1Ljg3IDI2YzAtMi0xLjM0LTMuNjEtMy0zLjYxSDMyLjc2Yy0xLjY1IDAtMyAxLjYzLTMgMy42MWEzLjczIDMuNzMgMCAwMDEuNzEgMy4yNCA4LjI2IDguMjYgMCAwMS0xLjc1IDYuMTRjLTIuNzkgMy44NS00IDguNDEtMy44MyAxMXMwIDI3Ljg1IDAgMjcuODUtLjY3IDMuMzMgMTEuOTQgMy4zMyAxMS45My0zLjMzIDExLjkzLTMuMzNNNzIuMjggNjYuNjhzLTQuODkuNTgtNy4xLjU4LTcuMDktLjU4LTcuMDktLjU4di05LjM2YTY1IDY1IDAgMDA3LjA5LjU4IDY1LjA2IDY1LjA2IDAgMDA3LjEtLjU4em0xLjg0IDguNDJzLS4xNS0xOC45MiAwLTIwLjg5YTE0LjM4IDE0LjM4IDAgMDAtMi44Ni04LjI4IDYuMzYgNi4zNiAwIDAxLTEuMzUtNC4zN0EyLjkyIDIuOTIgMCAwMDcxLjIgMzlhMi41OCAyLjU4IDAgMDAtMi4yLTIuOGgtNy42YTIuNTkgMi41OSAwIDAwLTIuMjQgMi44IDIuOTQgMi45NCAwIDAwMS4zMSAyLjU0IDYuMzkgNi4zOSAwIDAxLTEuMzQgNC4zNyAxNC4zMyAxNC4zMyAwIDAwLTIuODcgOC4yOGMuMTMgMiAwIDIwLjg5IDAgMjAuODlzLS41MSAyLjUgOC45MyAyLjUgOC45NC0yLjUgOC45NC0yLjVcIlxuICB9KSkpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU3ZnVHdvQm90dGxlczsiLCJ2YXIgX3BhdGg7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5mdW5jdGlvbiBTdmdMZWFmKHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfZXh0ZW5kcyh7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxMDAgMTAwXCJcbiAgfSwgcHJvcHMpLCBfcGF0aCB8fCAoX3BhdGggPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJsZWFmX3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk03Ni4wOSAyNC40OWExLjA2IDEuMDYgMCAwMC0uMDktLjE5di0uMDlhMSAxIDAgMDAtLjUzLS41MmgtLjA5bC0uMTktLjA1YTY4Ljg0IDY4Ljg0IDAgMDAtMTUuNDYuNDZjLTggMS4xLTE5LjEzIDQuMTEtMjcuMTQgMTIuMi00LjgyIDQuODctNy4xNCAxMC02Ljg5IDE1LjM4LjM2IDcuNzUgNiAxMy4xNyA3LjE1IDE0LjIxbC04Ljk1IDlhMSAxIDAgMDAwIDEuNDIgMSAxIDAgMDAxLjQxIDBsOS05YzEuMDYgMS4xNiA2LjU0IDYuNzMgMTQuMjggN2guNjljNS4wOSAwIDEwLTIuNCAxNC42Mi03LjA3IDgtOC4wOSAxMC45LTE5LjI5IDExLjkyLTI3LjI2YTY5LjUzIDY5LjUzIDAgMDAuMjctMTUuNDl6TTcyLjkgNDQuOTFsLTE0LjM3LTIuMTQgMTUuNzMtMTUuODlhNzAuODggNzAuODggMCAwMS0xLjM2IDE4LjAzem0tNi41NyAxNi4xNkw0NC4yNSA1Ny4ybDEyLjUzLTEyLjY2IDE1LjY3IDIuMzNhNDQuNjEgNDQuNjEgMCAwMS02LjEyIDE0LjJ6bS0yMy41LTUuMjhsLTQuMS0yMmE0NC42NyA0NC42NyAwIDAxMTQuMTMtNi4yOGwyLjQ5IDE1LjY1ek02MCAyNi4wNmE3Mi40NSA3Mi40NSAwIDAxMTIuODgtLjZMNTcuMSA0MS4zNiA1NC44MiAyN2MxLjgxLS40MSAzLjU0LS43MSA1LjE4LS45NHpNMjcuNzEgNTEuNTRjLS4yMS00Ljc0IDEuOTEtOS40MSA2LjI5LTEzLjg2YTMzLjkzIDMzLjkzIDAgMDEyLjkyLTIuNmw0LjE3IDIyLjQ1LTYuODMgNi45Yy0uNzYtLjY5LTYuMjYtNS44Mi02LjU1LTEyLjg5em0zNC43NCAxNC4yN2MtNC40IDQuNDUtOS4wNSA2LjYyLTEzLjc5IDYuNDYtNy4wNy0uMjUtMTIuMjYtNS42Ni0xMy02LjQybDYuODQtNi45MUw2NSA2Mi44N2EzMC45IDMwLjkgMCAwMS0yLjU1IDIuOTR6XCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJWcnN0dmEgMVwiXG4gIH0pKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z0xlYWY7IiwidmFyIF9wYXRoO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZnVuY3Rpb24gU3ZnQXBwbGVBbmRCb3R0bGUocHJvcHMpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDEwMCAxMDBcIlxuICB9LCBwcm9wcyksIF9wYXRoIHx8IChfcGF0aCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImFwcGxlQW5kQm90dGxlX3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk03NS40OCA0NS45MmMtMi42OS0yLTYtMi42MS05Ljg3LTEuNjlhMTcuNSAxNy41IDAgMDEtMi4zMS40M2wtMS0yLjcxYTEzLjY4IDEzLjY4IDAgMDAyLjc0LjI3IDEzLjEyIDEzLjEyIDAgMDA3LjA2LTIgMTEuNCAxMS40IDAgMDA1LjQ0LTguMTQgMSAxIDAgMDAtLjg4LTEuMDhjLS4xMiAwLTExLjQyLS45NS0xNS4yMSA4LjQ4bC0xLjYzLTQuNThhMSAxIDAgMDAtMS44OS42OGwzLjI0IDkuMDdhMTAuNTkgMTAuNTkgMCAwMS0xLjQ4LS4zNCAxNS44NSAxNS44NSAwIDAwLTMuNDktLjY4aC0uNDF2LS4zMWE2Ny4yMiA2Ny4yMiAwIDAwLTIuNjEtMTguMDkgMSAxIDAgMDAtMS0uNzFIMjNhMSAxIDAgMDAtMSAuNzEgNjYuODIgNjYuODIgMCAwMC0yLjYyIDE4LjA3YzAgMTUgNC4wNSAyNi4yNSAxMS4xMSAzMC44NWExIDEgMCAwMC41NS4xNmgxMy4xYTEgMSAwIDAwLjU0LS4xNiAxNy4yNSAxNy4yNSAwIDAwNC0zLjczIDE5LjE3IDE5LjE3IDAgMDAxMy4wNyA1LjA4YzEwLjQxIDAgMTguODctOC4xNCAxOC44Ny0xOC4xNGExNC43MiAxNC43MiAwIDAwLTUuMTQtMTEuNDR6bS0uMTMtMTNhOS44MSA5LjgxIDAgMDEtNC4yOSA1LjU1IDExLjUxIDExLjUxIDAgMDEtNy42OSAxLjU3QzY2IDMzLjcyIDcyLjY4IDMzIDc1LjM1IDMzek0yMy43IDI2LjUxaDI3Ljc4QTU4LjE5IDU4LjE5IDAgMDE1MyAzMy4zNEgyMi4yMWE1Ni4yOCA1Ni4yOCAwIDAxMS40OS02Ljgzem0yMC4xMyA0NS44SDMxLjM0Yy02LjMzLTQuMzMtMTAtMTQuODgtMTAtMjlhNjUuMTggNjUuMTggMCAwMS41NS04aDMxLjM1YTYzLjIzIDYzLjIzIDAgMDEuNTUgOHYuMjdhMTEuMzQgMTEuMzQgMCAwMC04IDQuNDEgMTQuNzkgMTQuNzkgMCAwMC0zLjEgOS4zMyAxNy42OSAxNy42OSAwIDAwNC40OSAxMS43NCAxNS43MiAxNS43MiAwIDAxLTMuMzUgMy4yNXptMTcuOTIgMS4xOGMtOS4zMSAwLTE2Ljg3LTcuMjMtMTYuODctMTYuMTNhMTIuODIgMTIuODIgMCAwMTIuNjYtOC4wN0E5LjMgOS4zIDAgMDE1NiA0NS42M2ExNC43OSAxNC43OSAwIDAxMy4xMS42MWMxLjY1LjQ3IDMuMDcuODcgNi45NC0uMDUgMy4yNC0uNzggNi0uMzMgOC4xNCAxLjI5YTEyLjc2IDEyLjc2IDAgMDE0LjQgOS44OGMuMDMgOC45LTcuNTQgMTYuMTMtMTYuODQgMTYuMTN6XCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJWcnN0dmEgMVwiXG4gIH0pKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z0FwcGxlQW5kQm90dGxlOyIsInZhciBfZztcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmZ1bmN0aW9uIFN2Z1RhcChwcm9wcykge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgdmlld0JveDogXCIwIDAgMTAwIDEwMFwiXG4gIH0sIHByb3BzKSwgX2cgfHwgKF9nID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICBcImRhdGEtbmFtZVwiOiBcIlZyc3R2YSAxXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBjbGFzc05hbWU6IFwidGFwX3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk01OC4yIDUxLjQ4djcuNzdhMSAxIDAgMDAxIDFoNy4zYTEgMSAwIDAwMS0xdi05LjkzYTkuNDQgOS40NCAwIDAwLTkuNC05LjQ1aC02LjUyYTExLjA2IDExLjA2IDAgMDAtNS40NS01LjEzdi02LjU1aDIuNDFhMy42IDMuNiAwIDEwMC03LjE5SDM2YTMuNiAzLjYgMCAxMDAgNy4xOWgyLjR2Ni4yYTExIDExIDAgMDAwIDIwLjg5djIxLjMzYTEgMSAwIDAwMSAxaDUuNzZhMSAxIDAgMDAxLTFWNTQuOTNhMTEgMTEgMCAwMDUuNzMtNS43Mkg1NmEyLjI2IDIuMjYgMCAwMTIuMiAyLjI3em0tMjQtMjYuODhBMS42OSAxLjY5IDAgMDEzNiAyM2gxMi41NGExLjYgMS42IDAgMTEwIDMuMTdIMzZhMS42OSAxLjY5IDAgMDEtMS44Mi0xLjU3em02LjE5IDQuMTRoMy43NnY1LjM2YTEwLjQ1IDEwLjQ1IDAgMDAtMy43Ni0uMTZ6bTMuNzQgNDYuODZoLTMuNzZWNTUuNzNhMTAuNDUgMTAuNDUgMCAwMDMuNzYtLjE2em0tMi4zNS0yMS43OGE5IDkgMCAxMTktOSA5IDkgMCAwMS05IDl6bTEwLjU4LTExLjk0aDUuNzRhNy40MyA3LjQzIDAgMDE3LjQgNy40NHY4LjkzaC01LjI5di02Ljc3QTQuMjYgNC4yNiAwIDAwNTYgNDcuMjFoLTMuNDlhMTAuNTkgMTAuNTkgMCAwMC0uMTUtNS4zM3pcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBjbGFzc05hbWU6IFwidGFwX3N2Z19fY2xzLTFcIixcbiAgICBkOiBcIk02My44OCA2My4xOWExIDEgMCAwMC0xLjYyIDBjLS44OSAxLjIyLTUuMzQgNy40My01LjM0IDEwLjE3YTYuMTcgNi4xNyAwIDAwMTIuMyAwYzAtMi43NC00LjQ1LTguOTUtNS4zNC0xMC4xN3pNNjMuMDcgNzdhMy45MiAzLjkyIDAgMDEtNC4xNS0zLjYzYzAtMS40IDIuMjktNS4xNyA0LjE1LTcuODRDNjUgNjguMyA2Ny4yMSA3MiA2Ny4yMSA3My4zNkEzLjkyIDMuOTIgMCAwMTYzLjA3IDc3elwiXG4gIH0pKSkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBTdmdUYXA7IiwidmFyIF9wYXRoO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZnVuY3Rpb24gU3ZnV2luZUdsYXNzKHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfZXh0ZW5kcyh7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxMDAgMTAwXCJcbiAgfSwgcHJvcHMpLCBfcGF0aCB8fCAoX3BhdGggPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJ3aW5lR2xhc3Nfc3ZnX19jbHMtMVwiLFxuICAgIGQ6IFwiTTY5LjY0IDMyLjY0di0uMWEyNCAyNCAwIDAwLTIuOTEtMTEgMSAxIDAgMDAtLjg3LS41MkgzNC4xNGExIDEgMCAwMC0uODcuNTIgMjQgMjQgMCAwMC0yLjkxIDExdi4xMkMzMC40MyA0NC4yMSAzNy44NiA1MiA0OSA1Mi40N1Y3N2gtOC42NGExIDEgMCAwMDAgMmgxOS44YTEgMSAwIDEwMC0ySDUxVjUyLjQ3QzYyLjE0IDUyIDY5LjU3IDQ0LjIgNjkuNjMgMzIuNjl6TTM0Ljc0IDIzaDMwLjUyYTIyLjUyIDIyLjUyIDAgMDEyLjM1IDguNjVIMzIuNEEyMi4zMSAyMi4zMSAwIDAxMzQuNzQgMjN6TTUwIDUwLjVjLTEwLjM0IDAtMTcuMTItNi41Ny0xNy41OS0xNi44M2gzNS4xOEM2Ny4xMiA0My45MyA2MC4zNCA1MC41IDUwIDUwLjV6XCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJWcnN0dmEgMVwiXG4gIH0pKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z1dpbmVHbGFzczsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODYyZjY1ZmU5Y2VhZTg4YjFmOWQwYWM2ZDRhMTgyMzguanBnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjgxZWJiOTU5YjU3NTE2NzYyNmJhODIzMDYzMjNiNTJjLmpwZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIxZmZlNjJiNjRlZDM1NWM1ODk2ZWY3YWI0NTYwYjI0Zi5qcGdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYmZiYTU5ZjZmNTUxZjlmYWRjNjg2MGQxZTMwYTFhZGMuanBnXCI7IiwiaW1wb3J0IHsgZGVmYXVsdCBhcyBIb21lSWNvbiB9IGZyb20gXCJAcm9vdC9hc3NldHMvaG9tZS5zdmdcIjtcclxuaW1wb3J0IHsgZGVmYXVsdCBhcyBTaG9wcGluZ0NhcnQgfSBmcm9tIFwiQHJvb3QvYXNzZXRzL3Nob3BwaW5nQ2FydC5zdmdcIjtcclxuaW1wb3J0IHsgZGVmYXVsdCBhcyBDZWxsUGhvbmUgfSBmcm9tIFwiQHJvb3QvYXNzZXRzL2NlbGxQaG9uZS5zdmdcIjtcclxuaW1wb3J0IHsgZGVmYXVsdCBhcyBGcnVpdFByZXNzIH0gZnJvbSBcIkByb290L2Fzc2V0cy9mcnVpdFByZXNzLnN2Z1wiO1xyXG5pbXBvcnQgeyBkZWZhdWx0IGFzIFR3b0JvdHRsZXMgfSBmcm9tIFwiQHJvb3QvYXNzZXRzL3R3b0JvdHRsZXMuc3ZnXCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgTGVhZiB9IGZyb20gXCJAcm9vdC9hc3NldHMvbGVhZi5zdmdcIjtcclxuaW1wb3J0IHsgZGVmYXVsdCBhcyBBcHBsZUFuZEJvdHRsZSB9IGZyb20gXCJAcm9vdC9hc3NldHMvYXBwbGVBbmRCb3R0bGUuc3ZnXCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgVGFwIH0gZnJvbSBcIkByb290L2Fzc2V0cy90YXAuc3ZnXCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgV2luZUdsYXNzIH0gZnJvbSBcIkByb290L2Fzc2V0cy93aW5lR2xhc3Muc3ZnXCI7XHJcbmltcG9ydCB3b3JrUGxhY2VXaWRlc2NyZWVuIGZyb20gXCJAcm9vdC9hc3NldHMvbW9zdGFybmFXaWRlc2NyZWVuLmpwZ1wiO1xyXG5pbXBvcnQgY3V0ZUxhZHkgZnJvbSBcIkByb290L2Fzc2V0cy9jdXRlTGFkeS5qcGdcIjtcclxuaW1wb3J0IGJvdHRsZXNXaWRlc2NyZWVuIGZyb20gXCJAcm9vdC9hc3NldHMvYm90dGxlc1dpZGVzY3JlZW4uanBnXCI7XHJcbmltcG9ydCBwdWJsaWNBcHBsZUp1aWNpbmcgZnJvbSBcIkByb290L2Fzc2V0cy9wdWJsaWNBcHBsZUp1aWNpbmcuanBnXCI7XHJcbmV4cG9ydCB2YXIgUGFnZTtcclxuKGZ1bmN0aW9uIChQYWdlKSB7XHJcbiAgICBQYWdlW1wiSG9tZVwiXSA9IFwiL1wiO1xyXG4gICAgUGFnZVtcIldhbnRUb0ZydWl0UHJlc3NcIl0gPSBcIi9jaGNpLXptb3N0b3ZhdFwiO1xyXG4gICAgUGFnZVtcIldoZXJlVG9CdXlcIl0gPSBcIi9rZGUtemFrb3VwaXRcIjtcclxuICAgIFBhZ2VbXCJPdXJQcm9kdWN0c1wiXSA9IFwiL25hc2UtcHJvZHVrdHlcIjtcclxuICAgIFBhZ2VbXCJDb250YWN0XCJdID0gXCIva29udGFrdFwiO1xyXG4gICAgUGFnZVtcIldvcmtQbGFjZVwiXSA9IFwiL21vc3Rhcm5hXCI7XHJcbiAgICBQYWdlW1wiUHJvZHVjdHNcIl0gPSBcIi9wcm9kdWt0eVwiO1xyXG4gICAgUGFnZVtcIkZydWl0T3JjaGFyZHNcIl0gPSBcIi9vdm9jbmUtc2FkeVwiO1xyXG4gICAgUGFnZVtcIlB1YmxpY0FwcGxlSnVpY2luZ1wiXSA9IFwiL21vc3RvdmFuaS1wcm8tdmVyZWpub3N0XCI7XHJcbn0pKFBhZ2UgfHwgKFBhZ2UgPSB7fSkpO1xyXG5leHBvcnQgdmFyIHBhZ2VzID0gW1xyXG4gICAgeyByb3V0ZTogUGFnZS5Ib21lLCBsYWJlbDogXCJPIG7DoXNcIiwgaWNvbjogSG9tZUljb24gfSxcclxuICAgIHtcclxuICAgICAgICByb3V0ZTogUGFnZS5XYW50VG9GcnVpdFByZXNzLFxyXG4gICAgICAgIGxhYmVsOiBcIkNoY2kgem1vxaF0b3ZhdFwiLFxyXG4gICAgICAgIGljb246IEZydWl0UHJlc3MsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHJvdXRlOiBQYWdlLk91clByb2R1Y3RzLFxyXG4gICAgICAgIGxhYmVsOiBcIk5hxaFlIHByb2R1a3R5XCIsXHJcbiAgICAgICAgaWNvbjogVHdvQm90dGxlcyxcclxuICAgIH0sXHJcbiAgICB7IHJvdXRlOiBQYWdlLldoZXJlVG9CdXksIGxhYmVsOiBcIktkZSB6YWtvdXBpdFwiLCBpY29uOiBTaG9wcGluZ0NhcnQgfSxcclxuICAgIHsgcm91dGU6IFBhZ2UuQ29udGFjdCwgbGFiZWw6IFwiS29udGFrdFwiLCBpY29uOiBDZWxsUGhvbmUgfSxcclxuXTtcclxuZXhwb3J0IHZhciBob21lUGFnZXMgPSBbXHJcbiAgICB7XHJcbiAgICAgICAgcm91dGU6IFBhZ2UuV29ya1BsYWNlLFxyXG4gICAgICAgIGxhYmVsOiBcIk1vxaF0w6FybmFcIixcclxuICAgICAgICBpY29uOiBUYXAsXHJcbiAgICAgICAgaW1hZ2VTb3VyY2U6IHdvcmtQbGFjZVdpZGVzY3JlZW4sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHJvdXRlOiBQYWdlLkZydWl0T3JjaGFyZHMsXHJcbiAgICAgICAgbGFiZWw6IFwiT3ZvY27DqSBzYWR5XCIsXHJcbiAgICAgICAgaWNvbjogTGVhZixcclxuICAgICAgICBpbWFnZVNvdXJjZTogY3V0ZUxhZHksXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHJvdXRlOiBQYWdlLlByb2R1Y3RzLFxyXG4gICAgICAgIGxhYmVsOiBcIlByb2R1a3R5XCIsXHJcbiAgICAgICAgaWNvbjogQXBwbGVBbmRCb3R0bGUsXHJcbiAgICAgICAgaW1hZ2VTb3VyY2U6IGJvdHRsZXNXaWRlc2NyZWVuLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICByb3V0ZTogUGFnZS5QdWJsaWNBcHBsZUp1aWNpbmcsXHJcbiAgICAgICAgbGFiZWw6IFwiTW/FoXRvdsOhbsOtIHBybyB2ZcWZZWpub3N0XCIsXHJcbiAgICAgICAgaWNvbjogV2luZUdsYXNzLFxyXG4gICAgICAgIGltYWdlU291cmNlOiBwdWJsaWNBcHBsZUp1aWNpbmcsXHJcbiAgICB9LFxyXG5dO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG52YXIgTm90Rm91bmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3goV3JhcHBlciwgeyBjaGlsZHJlbjogXCJcXG4gIE9tbG91dlxcdTAwRTFtZSBzZSxcXG4gIHN0clxcdTAwRTFua2EgbmVieWxhIG5hbGV6ZW5hIDotKFxcbiAgXCIgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IE5vdEZvdW5kO1xyXG52YXIgV3JhcHBlciA9IHN0eWxlZC5kaXYodGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgaGVpZ2h0OiA1MCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiYmFybG93XFxcIjtcXG4gIGNvbG9yOiBcIiwgXCI7XFxuICBmb250LXNpemU6IDNyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblwiXSwgW1wiXFxuICBoZWlnaHQ6IDUwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJiYXJsb3dcXFwiO1xcbiAgY29sb3I6IFwiLCBcIjtcXG4gIGZvbnQtc2l6ZTogM3JlbTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuY29sb3JzLnJlZExpZ2h0OyB9KTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmZmU4YTJlZGI4ODlmMzEwN2NhZjIwMzY5ODZhNGJjNC5qcGdcIjsiLCJ2YXIgX3BhdGg7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5mdW5jdGlvbiBTdmdJbnN0YWdyYW0ocHJvcHMpIHtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDEwMCAxMDBcIlxuICB9LCBwcm9wcyksIF9wYXRoIHx8IChfcGF0aCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImluc3RhZ3JhbV9zdmdfX2Nscy0xXCIsXG4gICAgZDogXCJNNTAgMjRjLTcuMDYgMC03Ljk0IDAtMTAuNzEuMTVBMTkuMTkgMTkuMTkgMCAwMDMzIDI1LjM5YTEyLjY3IDEyLjY3IDAgMDAtNC42IDMgMTIuODYgMTIuODYgMCAwMC0zIDQuNiAxOS4yNiAxOS4yNiAwIDAwLTEuMjEgNi4zMUMyNC4wNiA0Mi4wNiAyNCA0MyAyNCA1MHMwIDcuOTQuMTYgMTAuNzFBMTkuMTQgMTkuMTQgMCAwMDI1LjM5IDY3YTEyLjgxIDEyLjgxIDAgMDAzIDQuNjEgMTIuNjcgMTIuNjcgMCAwMDQuNiAzIDE5LjE5IDE5LjE5IDAgMDA2LjMgMS4yMUM0Mi4wNiA3NiA0Mi45NCA3NiA1MCA3NnM3Ljk0IDAgMTAuNzEtLjE1QTE5LjE5IDE5LjE5IDAgMDA2NyA3NC42MWExMy4yNSAxMy4yNSAwIDAwNy42LTcuNiAxOS4xNCAxOS4xNCAwIDAwMS4yMS02LjNjLjEyLTIuNzcuMTYtMy42Ni4xNi0xMC43MXMwLTcuOTQtLjE2LTEwLjcxYTE5LjI2IDE5LjI2IDAgMDAtMS4yLTYuMjlBMTMuMjcgMTMuMjcgMCAwMDY3IDI1LjM5YTE5LjE5IDE5LjE5IDAgMDAtNi4zLTEuMjFDNTcuOTQgMjQuMDYgNTcuMDYgMjQgNTAgMjRtMCA0LjY4YzYuOTQgMCA3Ljc2IDAgMTAuNDkuMTVhMTQuNDQgMTQuNDQgMCAwMTQuODMuODkgOC4yNiA4LjI2IDAgMDEzIDEuOTQgOC4xOCA4LjE4IDAgMDExLjk0IDMgMTQuNDQgMTQuNDQgMCAwMS44OSA0LjgzYy4xMyAyLjc0LjE2IDMuNTYuMTYgMTAuNDlzMCA3Ljc2LS4xNiAxMC41YTE0LjQzIDE0LjQzIDAgMDEtLjg5IDQuODIgOC41NiA4LjU2IDAgMDEtNC45MyA0LjkzIDE0LjE5IDE0LjE5IDAgMDEtNC44My44OWMtMi43My4xMy0zLjU1LjE1LTEwLjQ5LjE1cy03Ljc2IDAtMTAuNDktLjE1YTE0LjI0IDE0LjI0IDAgMDEtNC44My0uODkgOC41NiA4LjU2IDAgMDEtNC45My00LjkzIDE0LjQzIDE0LjQzIDAgMDEtLjg5LTQuODJjLS4xMy0yLjc0LS4xNS0zLjU3LS4xNS0xMC41czAtNy43NS4xNS0xMC40OWExNC40NCAxNC40NCAwIDAxLjg5LTQuODMgOC4xOCA4LjE4IDAgMDExLjk0LTMgOC4yNiA4LjI2IDAgMDEzLTEuOTQgMTQuNSAxNC41IDAgMDE0LjgzLS44OWMyLjczLS4xMyAzLjU2LS4xNSAxMC40OS0uMTVtMCA3Ljk1QTEzLjM0IDEzLjM0IDAgMTA2My4zNCA1MCAxMy4zNCAxMy4zNCAwIDAwNTAgMzYuNjZtMCAyMkE4LjY2IDguNjYgMCAxMTU4LjY2IDUwIDguNjYgOC42NiAwIDAxNTAgNTguNjZtMTctMjIuNTNBMy4xMiAzLjEyIDAgMTE2My44NiAzMyAzLjEyIDMuMTIgMCAwMTY3IDM2LjEzXCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJWcnN0dmEgMVwiXG4gIH0pKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z0luc3RhZ3JhbTsiLCJ2YXIgX2c7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5mdW5jdGlvbiBTdmdGYWNlYm9vayhwcm9wcykge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgdmlld0JveDogXCIwIDAgMTAwIDEwMFwiXG4gIH0sIHByb3BzKSwgX2cgfHwgKF9nID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICBcImRhdGEtbmFtZVwiOiBcIlZyc3R2YSAxXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZmFjZWJvb2tfc3ZnX19jbHMtMVwiLFxuICAgIGQ6IFwiTTUwLjkgMjNoLTIuMTFsLTEuOTMuMjNhMjYuNTggMjYuNTggMCAwMC0xNi44IDguNjFBMjUuODggMjUuODggMCAwMDIzLjMyIDQ2YTI2LjM0IDI2LjM0IDAgMDA2LjM5IDIxLjggMjUuODggMjUuODggMCAwMDE2LjE1IDguODcgMjkuMTcgMjkuMTcgMCAwMDQuNTIuMzMgMjYuMTEgMjYuMTEgMCAwMDE2LjczLTYuMTcgMjYuMzggMjYuMzggMCAwMDkuNTMtMTYuNzZjLjEzLS43Ny4xNi0xLjU3LjI1LTIuMzUgMC0uMjMuMDctLjQ1LjExLS42N3YtMi4zMmMtLjExLS45MS0uMi0xLjgxLS4zNC0yLjcxQTI3IDI3IDAgMDA1NCAyMy4zNmMtLjc5LS4xMy0xLjYtLjE2LTIuNC0uMjUtLjI0IDAtLjQ4LS4wOC0uNzItLjExbS0uNDIgNWMuMTcgMCAuMzguMDYuNjEuMDhsMSAuMDljLjQzIDAgLjg1LjA3IDEuMTguMTJhMjIgMjIgMCAwMTE4LjQyIDE4LjVjLjA4LjUzLjE1IDEuMDguMjIgMS42NyAwIC4xOSAwIC4zOS4wNy41OXYxLjU3YzAgLjE2LS4wNi4zNS0uMDguNTdzLS4wNi42NC0uMDkuOTQtLjA3LjgyLS4xMiAxLjEzYTIxLjI0IDIxLjI0IDAgMDEtNy43NSAxMy42NyAyMi44NCAyMi44NCAwIDAxLTYuNSAzLjc5QTIwLjY3IDIwLjY3IDAgMDE1MC4zNiA3MmEyNC4wOSAyNC4wOSAwIDAxLTMuNzUtLjI3IDIxLjk0IDIxLjk0IDAgMDEtMTguMzEtMjUgMjEgMjEgMCAwMTUuNDYtMTEuNDIgMjEuNTEgMjEuNTEgMCAwMTEzLjcyLTdsMS4yOS0uMTZoLjM0elwiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmYWNlYm9va19zdmdfX2Nscy0xXCIsXG4gICAgZDogXCJNNDYuNjMgNTAuNDlWNjMuMDVjMCAuNDcuMTEuNjUuNjIuNjNoNC4zMmMuNTMgMCAuNjMtLjE3LjYzLS42NiAwLTQgMC04LS4wNy0xMiAwLS40My4wOS0uNTkuNTQtLjU4aDIuNTljLjM4IDAgLjU1LS4wNy41OC0uNTIuMDgtMS4xNi4yMy0yLjMzLjM3LTMuNDkuMDctLjYxIDAtLjY4LS41OS0uNjhoLTNjLS4zNCAwLS40OC0uMS0uNDctLjQ1LjA1LS44MSAwLTEuNjIuMS0yLjQyYTEgMSAwIDAxMS0xYy42OC0uMDYgMS4zNy0uMDggMi4wNS0uMTFoLjk1di00LjMxYS41LjUgMCAwMC0uMzYtLjNjLTEuNjUgMC0zLjMxIDAtNC45NS4xNGE0LjU2IDQuNTYgMCAwMC00LjIzIDQuNTNjMCAxLjE1LS4wNyAyLjMxLS4wOCAzLjQ3IDAgLjM3LS4xMi41LS40OC40OWgtMS43NGMtLjM1IDAtLjUyLjExLS41MS40OXYzLjc0YzAgLjM0LjEzLjQ3LjQ3LjQ2aDIuMjZcIlxuICB9KSkpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU3ZnRmFjZWJvb2s7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjk4ZWRlYjczMzk3ZjY0ZjU2ZGM2NTc5MmMzMjU5OTYzLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIxYzY1MjJiOTg3YTk0NmZkN2M4Nzc4Mjk0YzczNjM3Yi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZTM3NDMzNTE5MWFmZTlkMGYwNTk3N2I3ZjBiNGY2ODEucGRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjFmZDk2YWZjYWUyNDc2NTk5ZTcxZjc2NjY1ODNiZmEzLmpwZ1wiOyIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgZGVmYXVsdCBhcyBJbnN0YWdyYW1TdmdJY29uIH0gZnJvbSBcIkByb290L2Fzc2V0cy9pbnN0YWdyYW0uc3ZnXCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgRmFjZWJvb2tTdmdJY29uIH0gZnJvbSBcIkByb290L2Fzc2V0cy9mYWNlYm9vay5zdmdcIjtcclxuaW1wb3J0IHBvbGFiaSBmcm9tIFwiQHJvb3QvYXNzZXRzL3BvbGFiaS5wbmdcIjtcclxuaW1wb3J0IGV1IGZyb20gXCJAcm9vdC9hc3NldHMvZXUucG5nXCI7XHJcbmltcG9ydCBjZXJ0IGZyb20gXCJAcm9vdC9hc3NldHMvcGRmL2NlcnQucGRmXCI7XHJcbmltcG9ydCBldU1vc3Rhcm5hIGZyb20gXCJAcm9vdC9hc3NldHMvZXVfbW9zdGFybmEuanBnXCI7XHJcbnZhciBQYWdlVG9wUGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBoYW5kbGVFVUNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHdpbmRvdy5vcGVuKGV1TW9zdGFybmEsIFwiX2JsYW5rXCIpO1xyXG4gICAgfTtcclxuICAgIHZhciBoYW5kbGVQb2xhYmlDbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB3aW5kb3cub3BlbihjZXJ0LCBcIl9ibGFua1wiKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gKF9qc3hzKFdyYXBwZXIsIHsgY2hpbGRyZW46IFtfanN4cyhcImRpdlwiLCB7IGNoaWxkcmVuOiBbX2pzeChGYWNlYm9va1N2Z0ljb24sIHsgYWx0OiBcImZhY2Vib29rXCIsIGNsYXNzTmFtZTogXCJmYWNlYm9va1wiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChJbnN0YWdyYW1TdmdJY29uLCB7IGFsdDogXCJpbnN0YWdyYW1cIiwgY2xhc3NOYW1lOiBcImluc3RhZ3JhbVwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJwaG9uZU51bWJlclwiIH0sIHsgY2hpbGRyZW46IFwiKzQyMCA2MDQgNDAyIDc2M1wiIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4cyhcImRpdlwiLCB7IGNoaWxkcmVuOiBbX2pzeChcImltZ1wiLCB7IHNyYzogcG9sYWJpLCBhbHQ6IFwicG9sYWJpXCIsIGNsYXNzTmFtZTogXCJwb2xhYmlcIiwgb25DbGljazogaGFuZGxlUG9sYWJpQ2xpY2sgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICBfanN4KFwiaW1nXCIsIHsgc3JjOiBldSwgYWx0OiBcIkVVXCIsIGNsYXNzTmFtZTogXCJldVwiLCBvbkNsaWNrOiBoYW5kbGVFVUNsaWNrIH0sIHZvaWQgMCldIH0sIHZvaWQgMCldIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBQYWdlVG9wUGFydDtcclxudmFyIFdyYXBwZXIgPSBzdHlsZWQuZGl2KHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gIGhlaWdodDogMTByZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gID4gZGl2IHtcXG4gICAgY29sb3I6IFwiLCBcIjtcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gIH1cXG5cXG4gID4gaW1nIHtcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgfVxcblxcbiAgLmZhY2Vib29rIHtcXG4gICAgbWFyZ2luLWxlZnQ6IC0xLjVyZW07IC8vIGNvbXBlbnNhdGlvbiBmb3Igc3ZnIHBhZGRpbmdcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgICBmaWxsOiBcIiwgXCI7XFxuICB9XFxuXFxuICAuaW5zdGFncmFtIHtcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgICBmaWxsOiBcIiwgXCI7XFxuICB9XFxuXFxuICAucGhvbmVOdW1iZXIge1xcbiAgICBtYXJnaW4tbGVmdDogMS41cmVtO1xcbiAgICBmb250LXNpemU6IDE1cHg7XFxuICB9XFxuXFxuICAucG9sYWJpIHtcXG4gICAgaGVpZ2h0OiA0cmVtO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gIH1cXG5cXG4gIC5ldSB7XFxuICAgIGhlaWdodDogMy41cmVtO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICB9XFxuXCJdLCBbXCJcXG4gIGhlaWdodDogMTByZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gID4gZGl2IHtcXG4gICAgY29sb3I6IFwiLCBcIjtcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gIH1cXG5cXG4gID4gaW1nIHtcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgfVxcblxcbiAgLmZhY2Vib29rIHtcXG4gICAgbWFyZ2luLWxlZnQ6IC0xLjVyZW07IC8vIGNvbXBlbnNhdGlvbiBmb3Igc3ZnIHBhZGRpbmdcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgICBmaWxsOiBcIiwgXCI7XFxuICB9XFxuXFxuICAuaW5zdGFncmFtIHtcXG4gICAgaGVpZ2h0OiA2cmVtO1xcbiAgICBmaWxsOiBcIiwgXCI7XFxuICB9XFxuXFxuICAucGhvbmVOdW1iZXIge1xcbiAgICBtYXJnaW4tbGVmdDogMS41cmVtO1xcbiAgICBmb250LXNpemU6IDE1cHg7XFxuICB9XFxuXFxuICAucG9sYWJpIHtcXG4gICAgaGVpZ2h0OiA0cmVtO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gIH1cXG5cXG4gIC5ldSB7XFxuICAgIGhlaWdodDogMy41cmVtO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICB9XFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuY29sb3JzLnJlZExpZ2h0OyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWREYXJrOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWREYXJrOyB9KTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgTmF2TGluayBhcyBOYXZMaW5rRGVmYXVsdCB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbnZhciBOYXZMaW5rID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICByZXR1cm4gX2pzeChOYXZMaW5rRGVmYXVsdCwgX19hc3NpZ24oe30sIHByb3BzLCB7IGFjdGl2ZUNsYXNzTmFtZTogXCJhY3RpdmVcIiwgZXhhY3Q6IHRydWUgfSksIHZvaWQgMCk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IE5hdkxpbms7XHJcbiIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuaW1wb3J0IE5hdkxpbmsgZnJvbSBcIi4vTmF2TGlua1wiO1xyXG52YXIgTmF2SXRlbSA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIHJvdXRlID0gX2Eucm91dGUsIGxhYmVsID0gX2EubGFiZWwsIFN2Z0ljb24gPSBfYS5pY29uLCBzaG93TGFiZWwgPSBfYS5zaG93TGFiZWwsIF9iID0gX2EuaG9yaXpvbnRhbFNwYWNpbmcsIGhvcml6b250YWxTcGFjaW5nID0gX2IgPT09IHZvaWQgMCA/IHRydWUgOiBfYjtcclxuICAgIHJldHVybiAoX2pzeChXcmFwcGVyLCBfX2Fzc2lnbih7IGhvcml6b250YWxTcGFjaW5nOiBob3Jpem9udGFsU3BhY2luZyB9LCB7IGNoaWxkcmVuOiBfanN4cyhOYXZMaW5rLCBfX2Fzc2lnbih7IHRvOiByb3V0ZSB9LCB7IGNoaWxkcmVuOiBbX2pzeChTdmdJY29uLCB7IGNsYXNzTmFtZTogXCJpY29uXCIgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgIHNob3dMYWJlbCAmJiBfanN4KFwiZGl2XCIsIHsgY2hpbGRyZW46IGxhYmVsIH0sIHZvaWQgMCldIH0pLCB2b2lkIDApIH0pLCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgTmF2SXRlbTtcclxudmFyIFdyYXBwZXIgPSBzdHlsZWQubGkodGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgZmxleDogMTtcXG4gIG1pbi13aWR0aDogXCIsIFwiO1xcbiAgbWF4LXdpZHRoOiBcIiwgXCI7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XFxuXFxuICBhIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAgID4gc3ZnIHtcXG4gICAgICBoZWlnaHQ6IDZyZW07XFxuICAgICAgZmlsbDogXCIsIFwiO1xcbiAgICAgIHRyYW5zaXRpb246IDAuMXMgZWFzZS1pbjtcXG4gICAgfVxcblxcbiAgICA+IGRpdiB7XFxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gICAgICBjb2xvcjogXCIsIFwiO1xcbiAgICAgIGZvbnQtc2l6ZTogXCIsIFwiO1xcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlLWluO1xcbiAgICB9XFxuXFxuICAgICY6aG92ZXIge1xcbiAgICAgID4gc3ZnIHtcXG4gICAgICAgIGZpbGw6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgICAgPiBkaXYge1xcbiAgICAgICAgY29sb3I6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cXG4gIC5hY3RpdmUge1xcbiAgICBvcGFjaXR5OiAwLjU7XFxuXFxuICAgICY6aG92ZXIge1xcbiAgICAgID4gc3ZnIHtcXG4gICAgICAgIGZpbGw6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgICAgPiBkaXYge1xcbiAgICAgICAgY29sb3I6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cIl0sIFtcIlxcbiAgZmxleDogMTtcXG4gIG1pbi13aWR0aDogXCIsIFwiO1xcbiAgbWF4LXdpZHRoOiBcIiwgXCI7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XFxuXFxuICBhIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAgID4gc3ZnIHtcXG4gICAgICBoZWlnaHQ6IDZyZW07XFxuICAgICAgZmlsbDogXCIsIFwiO1xcbiAgICAgIHRyYW5zaXRpb246IDAuMXMgZWFzZS1pbjtcXG4gICAgfVxcblxcbiAgICA+IGRpdiB7XFxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gICAgICBjb2xvcjogXCIsIFwiO1xcbiAgICAgIGZvbnQtc2l6ZTogXCIsIFwiO1xcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlLWluO1xcbiAgICB9XFxuXFxuICAgICY6aG92ZXIge1xcbiAgICAgID4gc3ZnIHtcXG4gICAgICAgIGZpbGw6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgICAgPiBkaXYge1xcbiAgICAgICAgY29sb3I6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cXG4gIC5hY3RpdmUge1xcbiAgICBvcGFjaXR5OiAwLjU7XFxuXFxuICAgICY6aG92ZXIge1xcbiAgICAgID4gc3ZnIHtcXG4gICAgICAgIGZpbGw6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgICAgPiBkaXYge1xcbiAgICAgICAgY29sb3I6IFwiLCBcIjtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cIl0pKSwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiAocHJvcHMuaG9yaXpvbnRhbFNwYWNpbmcgPyBcIjEyMHB4XCIgOiBcIjMwcHhcIik7IH0sIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKHByb3BzLmhvcml6b250YWxTcGFjaW5nID8gXCIxNzBweFwiIDogXCI4MHB4XCIpOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWRMaWdodDsgfSwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBwcm9wcy50aGVtZS5jb2xvcnMucmVkTGlnaHQ7IH0sIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuZm9udFNpemUubm9ybWFsOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWREYXJrOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWREYXJrOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWRMaWdodDsgfSwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBwcm9wcy50aGVtZS5jb2xvcnMucmVkTGlnaHQ7IH0pO1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuIiwidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgcGFnZXMgfSBmcm9tIFwiQHNyYy9wYWdlcy9pbmRleFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5pbXBvcnQgTmF2SXRlbSBmcm9tIFwiLi9jb21wb25lbnRzL05hdkl0ZW1cIjtcclxudmFyIE5hdmlnYXRpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3goTmF2LCB7IGNoaWxkcmVuOiBfanN4KFwidWxcIiwgeyBjaGlsZHJlbjogcGFnZXMubWFwKGZ1bmN0aW9uIChwYWdlKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcm91dGUgPSBwYWdlLnJvdXRlLCBpY29uID0gcGFnZS5pY29uLCBsYWJlbCA9IHBhZ2UubGFiZWw7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goTmF2SXRlbSwgeyByb3V0ZTogcm91dGUsIGxhYmVsOiBsYWJlbCwgaWNvbjogaWNvbiwgc2hvd0xhYmVsOiB0cnVlIH0sIGxhYmVsKSk7XHJcbiAgICAgICAgICAgIH0pIH0sIHZvaWQgMCkgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IE5hdmlnYXRpb247XHJcbnZhciBOYXYgPSBzdHlsZWQubmF2KHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gID4gdWwge1xcbiAgICBtYXJnaW4tdG9wOiAxOHJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIHBhZGRpbmc6IDNyZW07XFxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcXG4gIH1cXG5cIl0sIFtcIlxcbiAgPiB1bCB7XFxuICAgIG1hcmdpbi10b3A6IDE4cmVtO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogM3JlbTtcXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xcbiAgfVxcblwiXSkpKTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuaW1wb3J0IGhvbWVCYWNrZ3JvdW5kSW1hZ2UgZnJvbSBcIkByb290L2Fzc2V0cy93ZWJCYWNrZ3JvdW5kLmpwZ1wiO1xyXG5pbXBvcnQgUGFnZVRvcFBhcnQgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvVG9wUGFydC9QYWdlVG9wUGFydFwiO1xyXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tIFwiQHNyYy9jb21wb25lbnRzL05hdmlnYXRpb24vTWFpbk5hdmlnYXRpb25cIjtcclxuaW1wb3J0IHsgcGFnZU1pbkhlaWdodCB9IGZyb20gXCJAc3JjL3N0eWxlcy9wYWdlXCI7XHJcbnZhciBQYWdlV3JhcHBlciA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW47XHJcbiAgICByZXR1cm4gKF9qc3goV3JhcHBlciwgeyBjaGlsZHJlbjogX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicGFnZUNvbnRhaW5lclwiIH0sIHsgY2hpbGRyZW46IFtfanN4KFBhZ2VUb3BQYXJ0LCB7fSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgIF9qc3goTmF2aWdhdGlvbiwge30sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFwibWFpblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjb250ZW50Q29udGFpbmVyXCIgfSwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4cyhcImZvb3RlclwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJmb290ZXJcIiB9LCB7IGNoaWxkcmVuOiBbXCJcXHUwMEE5XCIsIFwiMjAyMSBjcmVhdGVkIGJ5IFRvbUUsIGRlc2lnbmVkIGJ5IEthbWthXCIgKyAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcIjsgdlwiICsgcHJvY2Vzcy5lbnYuVkVSU0lPTlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiKV0gfSksIHZvaWQgMCldIH0pLCB2b2lkIDApIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBQYWdlV3JhcHBlcjtcclxuZXhwb3J0IHZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBoZWlnaHQ6IFwiLCBcInB4O1xcbiAgbWF4LXdpZHRoOiAyNTYwcHg7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIsIFwiKTtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG5cXG4gIC5wYWdlQ29udGFpbmVyIHtcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIG1heC13aWR0aDogODAwcHg7XFxuXFxuICAgIC5mb290ZXIge1xcbiAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgICBtYXJnaW4tdG9wOiA0cmVtO1xcbiAgICAgID4gaW1nIHtcXG4gICAgICAgIHdpZHRoOiAyMHJlbTtcXG4gICAgICAgIGhlaWdodDogMjByZW07XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCJdLCBbXCJcXG4gIGhlaWdodDogXCIsIFwicHg7XFxuICBtYXgtd2lkdGg6IDI1NjBweDtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiwgXCIpO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcbiAgLnBhZ2VDb250YWluZXIge1xcbiAgICBtYXJnaW46IDAgYXV0bztcXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcXG5cXG4gICAgLmZvb3RlciB7XFxuICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICAgIG1hcmdpbi10b3A6IDRyZW07XFxuICAgICAgPiBpbWcge1xcbiAgICAgICAgd2lkdGg6IDIwcmVtO1xcbiAgICAgICAgaGVpZ2h0OiAyMHJlbTtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cIl0pKSwgcGFnZU1pbkhlaWdodCwgaG9tZUJhY2tncm91bmRJbWFnZSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJleHBvcnQgdmFyIHBhZ2VNaW5IZWlnaHQgPSAxNTIwO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMTliY2YwMTU0NTUxZjliZmFiMmM1MmUyZDBmZTg0NzIuanBnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjk5YmFlMzdhMGRhOGRiMjAxODgwYjE3YWZkZmI3MzNlLmpwZ1wiOyIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5pbXBvcnQgbGFuZGluZ0ltYWdlIGZyb20gXCJAcm9vdC9hc3NldHMvbGFuZGluZ19iYWNrZ3JvdW5kLmpwZ1wiO1xyXG5pbXBvcnQgd2hpdGVMb2dvIGZyb20gXCJAcm9vdC9hc3NldHMvbG9nb193aGl0ZS5qcGdcIjtcclxudmFyIExhbmRpbmcgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBzZXRTaG93TGFuZGluZ1BhZ2UgPSBfYS5zZXRTaG93TGFuZGluZ1BhZ2U7XHJcbiAgICB2YXIgX2IgPSB1c2VTdGF0ZShmYWxzZSksIGJhY2tHcm91bmRJbWFnZUxvYWRlZCA9IF9iWzBdLCBzZXRCYWNrZ3JvdW5kSW1hZ2VMb2FkZWQgPSBfYlsxXTtcclxuICAgIHZhciBfYyA9IHVzZVN0YXRlKGZhbHNlKSwgbG9nb0xvYWRlZCA9IF9jWzBdLCBzZXRMb2dvTG9hZGVkID0gX2NbMV07XHJcbiAgICB2YXIgX2QgPSB1c2VTdGF0ZShmYWxzZSksIGhpZGVMYW5kaW5nID0gX2RbMF0sIHNldEhpZGVMYW5kaW5nID0gX2RbMV07XHJcbiAgICB2YXIgX2UgPSB1c2VTdGF0ZSh0cnVlKSwgcmVuZGVyID0gX2VbMF0sIHNldFJlbmRlciA9IF9lWzFdO1xyXG4gICAgdmFyIHN0YXJ0QW5pbWF0aW9uID0gbG9nb0xvYWRlZCAmJiBiYWNrR3JvdW5kSW1hZ2VMb2FkZWQ7XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciByb290ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyb290XCIpO1xyXG4gICAgICAgIGlmICghaGlkZUxhbmRpbmcpIHtcclxuICAgICAgICAgICAgcm9vdC5zdHlsZS5vdmVyZmxvd1kgPSBcImhpZGRlblwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcm9vdC5zdHlsZS5vdmVyZmxvd1kgPSBcInNjcm9sbFwiO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtoaWRlTGFuZGluZ10pO1xyXG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdGltZXJJZCA9IHVuZGVmaW5lZDtcclxuICAgICAgICBpZiAoYmFja0dyb3VuZEltYWdlTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRpbWVySWQgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRIaWRlTGFuZGluZyh0cnVlKTtcclxuICAgICAgICAgICAgfSwgMzUwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRpbWVySWQgJiYgY2xlYXJUaW1lb3V0KHRpbWVySWQpO1xyXG4gICAgICAgIH07XHJcbiAgICB9LCBbYmFja0dyb3VuZEltYWdlTG9hZGVkXSk7XHJcbiAgICB2YXIgbGFuZGluZ1BhZ2VGYWRpbmdPdXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGhpZGVMYW5kaW5nKSB7XHJcbiAgICAgICAgICAgIHNldFJlbmRlcihmYWxzZSk7XHJcbiAgICAgICAgICAgIHNldFNob3dMYW5kaW5nUGFnZShmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiByZW5kZXIgPyAoX2pzeHMoV3JhcHBlciwgX19hc3NpZ24oeyBvblRyYW5zaXRpb25FbmQ6IGxhbmRpbmdQYWdlRmFkaW5nT3V0LCBcIiRzdGFydEFuaW1hdGlvblwiOiBzdGFydEFuaW1hdGlvbiwgXCIkaGlkZVwiOiBoaWRlTGFuZGluZyB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJpbWFnZVdyYXBwZXJcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFwiaW1nXCIsIHsgc3JjOiBsYW5kaW5nSW1hZ2UsIG9uTG9hZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCYWNrZ3JvdW5kSW1hZ2VMb2FkZWQodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSB9LCB2b2lkIDApIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImxvZ29XcmFwcGVyXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZXRIaWRlTGFuZGluZyh0cnVlKTtcclxuICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogX2pzeChcImltZ1wiLCB7IHNyYzogd2hpdGVMb2dvLCBvbkxvYWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0TG9nb0xvYWRlZCh0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB9IH0sIHZvaWQgMCkgfSksIHZvaWQgMCldIH0pLCB2b2lkIDApKSA6IG51bGw7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IExhbmRpbmc7XHJcbnZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBvcGFjaXR5OiBcIiwgXCI7XFxuICB0cmFuc2l0aW9uOiAxcyBlYXNlLWluO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwcHg7XFxuICBsZWZ0OiAwcHg7XFxuICByaWdodDogMHB4O1xcbiAgYm90dG9tOiAwcHg7XFxuICB6LWluZGV4OiAxMDA7XFxuXFxuICAuaW1hZ2VXcmFwcGVyIHtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IDBweDtcXG4gICAgbGVmdDogMHB4O1xcbiAgICByaWdodDogMHB4O1xcbiAgICBib3R0b206IDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogXCIsIFwiO1xcbiAgICB6LWluZGV4OiAxMDE7XFxuXFxuICAgID4gaW1nIHtcXG4gICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XFxuICAgICAgb3BhY2l0eTogXCIsIFwiO1xcbiAgICB9XFxuICB9XFxuXFxuICAubG9nb1dyYXBwZXIge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHRvcDogMHB4O1xcbiAgICBsZWZ0OiAwcHg7XFxuICAgIHJpZ2h0OiAwcHg7XFxuICAgIGJvdHRvbTogMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgei1pbmRleDogMTAyO1xcblxcbiAgICA+IGltZyB7XFxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgIGhlaWdodDogMzgwcHg7XFxuICAgICAgd2lkdGg6IDM4MHB4O1xcbiAgICAgIG9wYWNpdHk6IFwiLCBcIjtcXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIH1cXG4gIH1cXG5cIl0sIFtcIlxcbiAgb3BhY2l0eTogXCIsIFwiO1xcbiAgdHJhbnNpdGlvbjogMXMgZWFzZS1pbjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMHB4O1xcbiAgbGVmdDogMHB4O1xcbiAgcmlnaHQ6IDBweDtcXG4gIGJvdHRvbTogMHB4O1xcbiAgei1pbmRleDogMTAwO1xcblxcbiAgLmltYWdlV3JhcHBlciB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiAwcHg7XFxuICAgIGxlZnQ6IDBweDtcXG4gICAgcmlnaHQ6IDBweDtcXG4gICAgYm90dG9tOiAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IFwiLCBcIjtcXG4gICAgei1pbmRleDogMTAxO1xcblxcbiAgICA+IGltZyB7XFxuICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICAgIG9wYWNpdHk6IFwiLCBcIjtcXG4gICAgfVxcbiAgfVxcblxcbiAgLmxvZ29XcmFwcGVyIHtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IDBweDtcXG4gICAgbGVmdDogMHB4O1xcbiAgICByaWdodDogMHB4O1xcbiAgICBib3R0b206IDBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHotaW5kZXg6IDEwMjtcXG5cXG4gICAgPiBpbWcge1xcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICBoZWlnaHQ6IDM4MHB4O1xcbiAgICAgIHdpZHRoOiAzODBweDtcXG4gICAgICBvcGFjaXR5OiBcIiwgXCI7XFxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB9XFxuICB9XFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKHByb3BzLiRoaWRlID8gMCA6IDEpOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5ncmV5RGFyazsgfSwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiAocHJvcHMuJHN0YXJ0QW5pbWF0aW9uID8gMSA6IDApOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChwcm9wcy4kc3RhcnRBbmltYXRpb24gPyAxIDogMCk7IH0pO1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuIiwidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBOYXZMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxudmFyIEltYWdlTGluayA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIHRvID0gX2EudG8sIGltYWdlU291cmNlID0gX2EuaW1hZ2VTb3VyY2UsIFN2Z0ljb24gPSBfYS5pY29uLCBsYWJlbCA9IF9hLmxhYmVsO1xyXG4gICAgdmFyIF9iID0gdXNlU3RhdGUoZmFsc2UpLCBob3ZlcmVkID0gX2JbMF0sIHNldEhvdmVyZWQgPSBfYlsxXTtcclxuICAgIHJldHVybiAoX2pzeHMoV3JhcHBlciwgX19hc3NpZ24oeyB0bzogdG8sIFwiJGhvdmVyXCI6IGhvdmVyZWQsIG9uTW91c2VFbnRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2V0SG92ZXJlZCh0cnVlKTsgfSwgb25Nb3VzZUxlYXZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZXRIb3ZlcmVkKGZhbHNlKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImRpdlwiLCB7IGNoaWxkcmVuOiBfanN4KFwiaW1nXCIsIHsgc3JjOiBpbWFnZVNvdXJjZSwgYWx0OiBsYWJlbCB9LCB2b2lkIDApIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwidGV4dFwiIH0sIHsgY2hpbGRyZW46IGxhYmVsIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInN2Z0NvbnRhaW5lclwiIH0sIHsgY2hpbGRyZW46IF9qc3goU3ZnSWNvbiwge30sIHZvaWQgMCkgfSksIHZvaWQgMCldIH0pLCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgSW1hZ2VMaW5rO1xyXG52YXIgV3JhcHBlciA9IHN0eWxlZChOYXZMaW5rKSh0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBmbGV4OiAxO1xcbiAgbWluLXdpZHRoOiAzODBweDtcXG4gIG1pbi1oZWlnaHQ6IDI1MHB4O1xcbiAgbWFyZ2luOiAxcHg7XFxuXFxuICA+IGRpdiB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwcHg7XFxuICAgIGxlZnQ6IDBweDtcXG4gICAgcmlnaHQ6IDBweDtcXG4gICAgYm90dG9tOiAwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgICA+IGltZyB7XFxuICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgaGVpZ2h0OiAyNTBweDtcXG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcXG4gICAgfVxcbiAgfVxcblxcbiAgLnRleHQge1xcbiAgICBjb2xvcjogXCIsIFwiO1xcbiAgICBmb250LXNpemU6IDMwcHg7XFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiYmFybG93XFxcIjtcXG4gICAgb3BhY2l0eTogXCIsIFwiO1xcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgfVxcblxcbiAgLnN2Z0NvbnRhaW5lciB7XFxuICAgIG9wYWNpdHk6IFwiLCBcIjtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlLWluLW91dDtcXG4gICAgei1pbmRleDogMjtcXG5cXG4gICAgPiBzdmcge1xcbiAgICAgIGZpbGw6IFwiLCBcIjtcXG4gICAgICBoZWlnaHQ6IDhyZW07XFxuICAgIH1cXG4gIH1cXG5cXG4gIC8qIC5iYWNrZ3JvdW5kIHtcXG4gICAgb3BhY2l0eTogXCIsIFwiO1xcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2UtaW47XFxuICAgIGJhY2tncm91bmQtY29sb3I6IFwiLCBcIjtcXG4gICAgei1pbmRleDogMTtcXG4gIH0gKi9cXG5cIl0sIFtcIlxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZmxleDogMTtcXG4gIG1pbi13aWR0aDogMzgwcHg7XFxuICBtaW4taGVpZ2h0OiAyNTBweDtcXG4gIG1hcmdpbjogMXB4O1xcblxcbiAgPiBkaXYge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMHB4O1xcbiAgICBsZWZ0OiAwcHg7XFxuICAgIHJpZ2h0OiAwcHg7XFxuICAgIGJvdHRvbTogMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gICAgPiBpbWcge1xcbiAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgIGhlaWdodDogMjUwcHg7XFxuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XFxuICAgIH1cXG4gIH1cXG5cXG4gIC50ZXh0IHtcXG4gICAgY29sb3I6IFwiLCBcIjtcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICBmb250LWZhbWlseTogXFxcImJhcmxvd1xcXCI7XFxuICAgIG9wYWNpdHk6IFwiLCBcIjtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlLWluLW91dDtcXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIH1cXG5cXG4gIC5zdmdDb250YWluZXIge1xcbiAgICBvcGFjaXR5OiBcIiwgXCI7XFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICAgIHotaW5kZXg6IDI7XFxuXFxuICAgID4gc3ZnIHtcXG4gICAgICBmaWxsOiBcIiwgXCI7XFxuICAgICAgaGVpZ2h0OiA4cmVtO1xcbiAgICB9XFxuICB9XFxuXFxuICAvKiAuYmFja2dyb3VuZCB7XFxuICAgIG9wYWNpdHk6IFwiLCBcIjtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlLWluO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBcIiwgXCI7XFxuICAgIHotaW5kZXg6IDE7XFxuICB9ICovXFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuY29sb3JzLndoaXRlOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChwcm9wcy4kaG92ZXIgPyAxIDogMCk7IH0sIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKHByb3BzLiRob3ZlciA/IDAgOiAxKTsgfSwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBwcm9wcy50aGVtZS5jb2xvcnMud2hpdGU7IH0sIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKHByb3BzLiRob3ZlciA/IDAgOiAwLjgpOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5vY2hlcjsgfSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgSW1hZ2VMaW5rIGZyb20gXCIuL0ltYWdlTGlua1wiO1xyXG5pbXBvcnQgeyBQYWdlLCBob21lUGFnZXMgfSBmcm9tIFwiQHNyYy9wYWdlcy9pbmRleFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG52YXIgQ29udGVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoX2pzeChXcmFwcGVyLCB7IGNoaWxkcmVuOiBob21lUGFnZXNcclxuICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAocm91dGUpIHsgcmV0dXJuIHJvdXRlLnJvdXRlICE9PSBQYWdlLkhvbWU7IH0pXHJcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHIpIHtcclxuICAgICAgICAgICAgdmFyIHJvdXRlID0gci5yb3V0ZSwgaW1hZ2VTb3VyY2UgPSByLmltYWdlU291cmNlLCBsYWJlbCA9IHIubGFiZWwsIGljb24gPSByLmljb247XHJcbiAgICAgICAgICAgIHJldHVybiAoX2pzeChJbWFnZUxpbmssIHsgdG86IHJvdXRlLCBpbWFnZVNvdXJjZTogaW1hZ2VTb3VyY2UsIGljb246IGljb24sIGxhYmVsOiBsYWJlbCB9LCBsYWJlbCkpO1xyXG4gICAgICAgIH0pIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb250ZW50O1xyXG52YXIgV3JhcHBlciA9IHN0eWxlZC5kaXYodGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIGZsZXg6IDE7XFxuXCJdLCBbXCJcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBmbGV4OiAxO1xcblwiXSkpKTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcclxuZXhwb3J0IHZhciBDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh7XHJcbiAgICBzaG93TGFuZGluZ1BhZ2U6IHRydWUsXHJcbiAgICBzZXRTaG93TGFuZGluZ1BhZ2U6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb250ZXh0IGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcIik7XHJcbiAgICB9LFxyXG59KTtcclxuZXhwb3J0IHZhciB1c2VBcHBDb250ZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdXNlQ29udGV4dChDb250ZXh0KTsgfTtcclxuIiwiaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IFBhZ2VXcmFwcGVyIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9QYWdlXCI7XHJcbmltcG9ydCBMYW5kaW5nIGZyb20gXCIuL2NvbXBvbmVudHMvTGFuZGluZ1wiO1xyXG5pbXBvcnQgQ29udGVudCBmcm9tIFwiLi9jb21wb25lbnRzL0NvbnRlbnRcIjtcclxuaW1wb3J0IHsgdXNlQXBwQ29udGV4dCB9IGZyb20gXCJAc3JjL2NvbnRleHQvY29udGV4dFwiO1xyXG52YXIgSG9tZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBfYSA9IHVzZUFwcENvbnRleHQoKSwgc2hvd0xhbmRpbmdQYWdlID0gX2Euc2hvd0xhbmRpbmdQYWdlLCBzZXRTaG93TGFuZGluZ1BhZ2UgPSBfYS5zZXRTaG93TGFuZGluZ1BhZ2U7XHJcbiAgICByZXR1cm4gKF9qc3hzKFBhZ2VXcmFwcGVyLCB7IGNoaWxkcmVuOiBbc2hvd0xhbmRpbmdQYWdlICYmIF9qc3goTGFuZGluZywgeyBzZXRTaG93TGFuZGluZ1BhZ2U6IHNldFNob3dMYW5kaW5nUGFnZSB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KENvbnRlbnQsIHt9LCB2b2lkIDApXSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgSG9tZTtcclxuIiwidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG52YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XHJcbiAgICB2YXIgdCA9IHt9O1xyXG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXHJcbiAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXHJcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcclxuICAgICAgICB9XHJcbiAgICByZXR1cm4gdDtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuZXhwb3J0IHZhciBIZWFkZXIgPSBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIHZhciB0aXRsZSA9IHByb3BzLnRpdGxlLCBzdHlsZVByb3BzID0gX19yZXN0KHByb3BzLCBbXCJ0aXRsZVwiXSk7XHJcbiAgICByZXR1cm4gX2pzeChXcmFwcGVyLCBfX2Fzc2lnbih7fSwgc3R5bGVQcm9wcywgeyBjaGlsZHJlbjogdGl0bGUgfSksIHZvaWQgMCk7XHJcbn07XHJcbnZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBmb250LWZhbWlseTogXFxcImJhcmxvd1xcXCI7XFxuICBmb250LXNpemU6IFwiLCBcIjtcXG4gIGNvbG9yOiBcIiwgXCI7XFxuICBtYXJnaW4tdG9wOiBcIiwgXCI7XFxuICBoZWlnaHQ6IDVyZW07XFxuXCJdLCBbXCJcXG4gIGZvbnQtZmFtaWx5OiBcXFwiYmFybG93XFxcIjtcXG4gIGZvbnQtc2l6ZTogXCIsIFwiO1xcbiAgY29sb3I6IFwiLFxyXG4gICAgXCI7XFxuICBtYXJnaW4tdG9wOiBcIiwgXCI7XFxuICBoZWlnaHQ6IDVyZW07XFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuZm9udFNpemUuaGVhZGVyOyB9LCBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIHJldHVybiBwcm9wcy5wcmltYXJ5ID8gcHJvcHMudGhlbWUuY29sb3JzLnJlZExpZ2h0IDogdW5kZWZpbmVkO1xyXG59LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLm1hcmdpblRvcCB8fCBcIjFyZW1cIjsgfSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcclxuICAgIHZhciB0ID0ge307XHJcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcclxuICAgICAgICB0W3BdID0gc1twXTtcclxuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcclxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiB0O1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5leHBvcnQgdmFyIFBhcmFncmFwaCA9IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sIHJlc3QgPSBfX3Jlc3QocHJvcHMsIFtcImNoaWxkcmVuXCJdKTtcclxuICAgIHJldHVybiBfanN4KFdyYXBwZXIsIF9fYXNzaWduKHt9LCByZXN0LCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KSwgdm9pZCAwKTtcclxufTtcclxudmFyIFdyYXBwZXIgPSBzdHlsZWQuZGl2KHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gIGZvbnQtZmFtaWx5OiBcIiwgXCI7XFxuICBmb250LXNpemU6IFwiLCBcIjtcXG4gIGNvbG9yOiBcIiwgXCI7XFxuICBwYWRkaW5nLXRvcDogXCIsIFwiO1xcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcXG5cIl0sIFtcIlxcbiAgZm9udC1mYW1pbHk6IFwiLCBcIjtcXG4gIGZvbnQtc2l6ZTogXCIsXHJcbiAgICBcIjtcXG4gIGNvbG9yOiBcIixcclxuICAgIFwiO1xcbiAgcGFkZGluZy10b3A6IFwiLCBcIjtcXG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKHByb3BzLmJvbGQgPyBcInJvYm90b0JvbGRcIiA6IFwicm9ib3RvXCIpOyB9LCBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIHJldHVybiBwcm9wcy5zbWFsbEZvbnRTaXplXHJcbiAgICAgICAgPyBwcm9wcy50aGVtZS5mb250U2l6ZS5zbWFsbFxyXG4gICAgICAgIDogcHJvcHMudGhlbWUuZm9udFNpemUubm9ybWFsO1xyXG59LCBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIHJldHVybiBwcm9wcy5wcmltYXJ5Q29sb3IgPyBwcm9wcy50aGVtZS5jb2xvcnMucmVkTGlnaHQgOiB1bmRlZmluZWQ7XHJcbn0sIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKHByb3BzLnBhZGRpbmdUb3AgPyBwcm9wcy5wYWRkaW5nVG9wIDogXCIxcmVtXCIpOyB9KTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IFBhcmFncmFwaCB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnRcIjtcclxudmFyIFRleHRDb250ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4KFBhcmFncmFwaCwgeyBjaGlsZHJlbjogXCJWIHJvY2UgMjAxNyBqc21lIHpyZWtvbnN0cnVvdmFsaSBhIHRlY2hub2xvZ2lja3kgdnliYXZpbGkgb2JqZWt0IHYgYlxcdTAwRkR2YWxcXHUwMEU5bSBhcmVcXHUwMEUxbHUgSlpEIHYgXFx1MDEwQ2VydmVuXFx1MDBGRGNoIFBlXFx1MDEwRGtcXHUwMEUxY2ggemEgXFx1MDBGQVxcdTAxMERlbGVtIHpidWRvdlxcdTAwRTFuXFx1MDBFRCBtb1xcdTAxNjF0XFx1MDBFMXJueSBrZSB6cHJhY292XFx1MDBFMW5cXHUwMEVEIG92b2NlIHogbmFcXHUwMTYxZWhvIHJvZGlublxcdTAwRTlobyBvdm9jblxcdTAwRTFcXHUwMTU5c3R2XFx1MDBFRC4gWnByYWNvdlxcdTAwRTFuXFx1MDBFRCBvdm9jZSB6YWppXFx1MDE2MVxcdTAxNjV1amUgXFx1MDEwRFxcdTAwRTFzdGVcXHUwMTBEblxcdTAxMUIgYXV0b21hdGl6b3ZhblxcdTAwRTEgbW9kZXJuXFx1MDBFRCB2XFx1MDBGRHJvYm5cXHUwMEVEIGxpbmthLCBrdGVyXFx1MDBFMSBieWxhIHNwb2x1ZmluYW5jb3ZcXHUwMEUxbmEgeiBkb3RhXFx1MDEwRG5cXHUwMEVEaG8gdGl0dWx1IFxcdTIwMUVQcm9ncmFtIHJvenZvamUgdmVua292YSAyMDE0LTIwMjBcXHUyMDFDLiBTdHJvamUgemFqaVxcdTAxNjFcXHUwMTY1dWpcXHUwMEVEIGtvbnRpbnVcXHUwMEUxbG5cXHUwMEVEIHByb2NlcyB0XFx1MDE1OVxcdTAwRURkXFx1MDExQm5cXHUwMEVEIG92b2NlLCBqZWhvIG9teXRcXHUwMEVELCBkcmNlblxcdTAwRUQsIGxpc292XFx1MDBFMW5cXHUwMEVEIGEgblxcdTAwRTFzbGVkbm91IHBhc3Rlcml6YWNpIGEgcGxuXFx1MDExQm5cXHUwMEVEIGRvIG9iYWxcXHUwMTZGLiBWIHJvY2UgMjAyMSBqc21lIG9iamVrdCByb3pcXHUwMTYxXFx1MDBFRFxcdTAxNTlpbGkgbyBjaGxhemVuXFx1MDBGRCBza2xhZCwgYWJ5Y2hvbSBieWxpIHNjaG9wbmkgc2tsYWRvdmF0IGphYmxrYSB2IG9wdGltXFx1MDBFMWxuXFx1MDBFRGNoIHBvZG1cXHUwMEVEbmtcXHUwMEUxY2ggYVxcdTAxN0UgZG8ga29uY2UgamFyYSBhIHpcXHUwMEUxcm92ZVxcdTAxNDggbmEgcG9kemltIHRcXHUwMEU5aG9cXHUwMTdFIHJva3UganNtZSB2IHByb3Zvem92blxcdTAxMUIgb3RldlxcdTAxNTllbGkgcHJvZGVqbnUuIFZcXHUwMEZEcm9iYSBwcm9iXFx1MDBFRGhcXHUwMEUxIHZcXHUwMTdFZHkgamVkZW4gZGVuIHYgdFxcdTAwRkRkbnUgbmEgcG9kemltIGkgbmEgamFcXHUwMTU5ZSwgYSBwclxcdTAwRTF2XFx1MDExQiBiXFx1MDExQmhlbSB2XFx1MDBGRHJvYnkgamUgcHJvZGVqbmEgb3RldlxcdTAxNTllbmEuIFpcXHUwMEUxa2F6blxcdTAwRURrIHNpIHpkZSBtXFx1MDE2RlxcdTAxN0VlIHpha291cGl0IG5hXFx1MDE2MWUgcHJvZHVrdHksIGt0ZXJcXHUwMEZEbWkganNvdSByXFx1MDE2RnpuXFx1MDBFOSBvZHJcXHUwMTZGZHkgamFibGVrIGEgXFx1MjAxRVxcdTAxMENlcnZlbm9wZVxcdTAxMERlY2tcXHUwMEZEIG1vXFx1MDE2MXRcXHUyMDFDLCBrdGVyXFx1MDBGRCBqZSBidVxcdTAxMEYgcGFzdGVyaXpvdmFuXFx1MDBGRCBuZWJvIFxcdTAxMERlcnN0dlxcdTAwRkQuIFpcXHUwMEUxcm92ZVxcdTAxNDggbmFiXFx1MDBFRHpcXHUwMEVEbWUgbW9cXHUwMTYxdG92XFx1MDBFMW5cXHUwMEVEIHBybyB2ZVxcdTAxNTllam5vc3QsIGtkeSBWXFx1MDBFMW0gcG8gZG9tbHV2XFx1MDExQiB2eXJvYlxcdTAwRURtZSBtb1xcdTAxNjF0IHogVmFcXHUwMTYxZWhvIG92b2NlLiBLcm9tXFx1MDExQiBzZXpcXHUwMEYzbm5cXHUwMEVEaG8gcHJvZGVqZSB2IG1vXFx1MDE2MXRcXHUwMEUxcm5cXHUwMTFCIGplIHVtb1xcdTAxN0VuXFx1MDExQm4gaSBjZWxvcm9cXHUwMTBEblxcdTAwRUQgcHJvZGVqLCBhIHRvIHByb3N0XFx1MDE1OWVkbmljdHZcXHUwMEVEbSBuYVxcdTAxNjFlaG8gZS1zaG9wdSBuZWJvIHBvIGRvbWx1dlxcdTAxMUIuXCIgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IFRleHRDb250ZW50O1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG52YXIgUGFnZUltYWdlID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgc3JjID0gX2Euc3JjO1xyXG4gICAgcmV0dXJuIF9qc3goSW1hZ2UsIHsgc3JjOiBzcmMgfSwgdm9pZCAwKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgUGFnZUltYWdlO1xyXG52YXIgSW1hZ2UgPSBzdHlsZWQuaW1nKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgbWFyZ2luLXRvcDogNi41cmVtO1xcblwiXSwgW1wiXFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogYXV0bztcXG4gIG1hcmdpbi10b3A6IDYuNXJlbTtcXG5cIl0pKSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XHJcbnZhciBQYWdlQ29sdW1uID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbiwgaXNPbkxlZnQgPSBfYS5pc09uTGVmdCwgaXNPblJpZ2h0ID0gX2EuaXNPblJpZ2h0O1xyXG4gICAgcmV0dXJuIChfanN4KFdyYXBwZXIsIF9fYXNzaWduKHsgaXNPbkxlZnQ6IGlzT25MZWZ0LCBpc09uUmlnaHQ6IGlzT25SaWdodCB9LCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IFBhZ2VDb2x1bW47XHJcbnZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBmbGV4OiAxO1xcbiAgbWFyZ2luLWxlZnQ6IFwiLCBcIjtcXG4gIG1hcmdpbi1yaWdodDogXCIsIFwiO1xcblwiXSwgW1wiXFxuICBmbGV4OiAxO1xcbiAgbWFyZ2luLWxlZnQ6IFwiLCBcIjtcXG4gIG1hcmdpbi1yaWdodDogXCIsIFwiO1xcblwiXSkpLCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChwcm9wcy5pc09uUmlnaHQgPyBcIjJyZW1cIiA6IDApOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChwcm9wcy5pc09uTGVmdCA/IFwiMnJlbVwiIDogMCk7IH0pO1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuIiwidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxudmFyIENvbnRlbnRXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBmbGV4OiAxO1xcbiAgaGVpZ2h0OiAxMDAlO1xcblwiXSwgW1wiXFxuICBmbGV4OiAxO1xcbiAgaGVpZ2h0OiAxMDAlO1xcblwiXSkpKTtcclxuZXhwb3J0IGRlZmF1bHQgQ29udGVudFdyYXBwZXI7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgeyBob21lUGFnZXMgfSBmcm9tIFwiQHNyYy9wYWdlcy9pbmRleFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5pbXBvcnQgTmF2SXRlbSBmcm9tIFwiLi9jb21wb25lbnRzL05hdkl0ZW1cIjtcclxudmFyIEhvbWVOYXZpZ2F0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4KE5hdiwgeyBjaGlsZHJlbjogX2pzeChcInVsXCIsIHsgY2hpbGRyZW46IGhvbWVQYWdlcy5tYXAoZnVuY3Rpb24gKHBhZ2UpIHtcclxuICAgICAgICAgICAgICAgIHZhciByb3V0ZSA9IHBhZ2Uucm91dGUsIGljb24gPSBwYWdlLmljb24sIGxhYmVsID0gcGFnZS5sYWJlbDtcclxuICAgICAgICAgICAgICAgIHJldHVybiAoX2pzeChOYXZJdGVtLCB7IHJvdXRlOiByb3V0ZSwgbGFiZWw6IGxhYmVsLCBpY29uOiBpY29uLCBob3Jpem9udGFsU3BhY2luZzogZmFsc2UgfSwgbGFiZWwpKTtcclxuICAgICAgICAgICAgfSkgfSwgdm9pZCAwKSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgSG9tZU5hdmlnYXRpb247XHJcbnZhciBOYXYgPSBzdHlsZWQubmF2KHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gID4gdWwge1xcbiAgICBtYXJnaW4tdG9wOiA0cmVtO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xcbiAgfVxcblwiXSwgW1wiXFxuICA+IHVsIHtcXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcXG4gIH1cXG5cIl0pKSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgSG9tZU5hdmlnYXRpb24gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9OYXZpZ2F0aW9uL0hvbWVOYXZpZ2F0aW9uXCI7XHJcbmltcG9ydCB7IFBhZ2VXcmFwcGVyIH0gZnJvbSBcIi5cIjtcclxudmFyIEhvbWVTdWJQYWdlV3JhcHBlciA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW47XHJcbiAgICByZXR1cm4gKF9qc3hzKFBhZ2VXcmFwcGVyLCB7IGNoaWxkcmVuOiBbY2hpbGRyZW4sIF9qc3goXCJkaXZcIiwgeyBjaGlsZHJlbjogX2pzeChIb21lTmF2aWdhdGlvbiwge30sIHZvaWQgMCkgfSwgdm9pZCAwKV0gfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IEhvbWVTdWJQYWdlV3JhcHBlcjtcclxuIiwidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxudmFyIENvbHVtbnNXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBkaXNwbGF5OiBmbGV4O1xcblwiXSwgW1wiXFxuICBkaXNwbGF5OiBmbGV4O1xcblwiXSkpKTtcclxuZXhwb3J0IGRlZmF1bHQgQ29sdW1uc1dyYXBwZXI7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1RleHRDb250ZW50XCI7XHJcbmltcG9ydCB7IGhvbWVQYWdlcywgcGFnZXMgfSBmcm9tIFwiQHNyYy9wYWdlc1wiO1xyXG5pbXBvcnQgeyB1c2VMb2NhdGlvbiB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcclxudmFyIENvbnRlbnRIZWFkZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgX2EsIF9iO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcclxuICAgIHZhciBoZWFkZXIgPSAoKF9hID0gcGFnZXMuZmluZChmdW5jdGlvbiAocGFnZSkgeyByZXR1cm4gcGFnZS5yb3V0ZSA9PT0gbG9jYXRpb24ucGF0aG5hbWU7IH0pKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGFiZWwpIHx8XHJcbiAgICAgICAgKChfYiA9IGhvbWVQYWdlcy5maW5kKGZ1bmN0aW9uIChob21lUGFnZSkgeyByZXR1cm4gaG9tZVBhZ2Uucm91dGUgPT09IGxvY2F0aW9uLnBhdGhuYW1lOyB9KSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxhYmVsKSB8fFxyXG4gICAgICAgIFwiTmFkcGlzIHN0csOhbmt5XCI7XHJcbiAgICByZXR1cm4gX2pzeChIZWFkZXIsIHsgdGl0bGU6IGhlYWRlciB9LCB2b2lkIDApO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb250ZW50SGVhZGVyO1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCBUZXh0Q29udGVudCBmcm9tIFwiLi9jb21wb25lbnRzL1RleHRDb250ZW50XCI7XHJcbmltcG9ydCB3b3JrcGxhY2UgZnJvbSBcIkByb290L2Fzc2V0cy9tb3N0YXJuYVdpZGVzY3JlZW4uanBnXCI7XHJcbmltcG9ydCBQYWdlSW1hZ2UgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvUG9ydHJhaXRJbWFnZS9QYWdlSW1hZ2VcIjtcclxuaW1wb3J0IHsgSG9tZVN1YlBhZ2VXcmFwcGVyLCBDb250ZW50V3JhcHBlciwgQ29sdW1uc1dyYXBwZXIsIENvbHVtbiwgfSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1BhZ2VzQ29udGVudC9MYXlvdXRcIjtcclxuaW1wb3J0IENvbnRlbnRIZWFkZXIgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvTGF5b3V0L0NvbnRlbnRIZWFkZXJcIjtcclxudmFyIFdvcmtQbGFjZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoX2pzeChIb21lU3ViUGFnZVdyYXBwZXIsIHsgY2hpbGRyZW46IF9qc3goQ29udGVudFdyYXBwZXIsIHsgY2hpbGRyZW46IF9qc3hzKENvbHVtbnNXcmFwcGVyLCB7IGNoaWxkcmVuOiBbX2pzeHMoQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25MZWZ0OiB0cnVlIH0sIHsgY2hpbGRyZW46IFtfanN4KENvbnRlbnRIZWFkZXIsIHt9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2pzeChUZXh0Q29udGVudCwge30sIHZvaWQgMCldIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25SaWdodDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBfanN4KFBhZ2VJbWFnZSwgeyBzcmM6IHdvcmtwbGFjZSB9LCB2b2lkIDApIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApIH0sIHZvaWQgMCkgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IFdvcmtQbGFjZTtcclxuIiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgUGFyYWdyYXBoIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9UZXh0Q29udGVudFwiO1xyXG52YXIgVGV4dENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3goUGFyYWdyYXBoLCB7IGNoaWxkcmVuOiBcIlYgb3ZvY25cXHUwMEZEY2ggc2FkZWNoIHBcXHUwMTFCc3R1amVtZSB2IHNvdVxcdTAxMERhc25cXHUwMEU5IGRvYlxcdTAxMUIgamFibG9uXFx1MDExQiwgYWxlIHBsXFx1MDBFMW51amVtZSBpIHZcXHUwMEZEc2FkYnUgaHJ1XFx1MDE2MWtvdlxcdTAwRTlobyBzYWR1LiBWIG5hXFx1MDE2MVxcdTAwRUQgbmFiXFx1MDBFRGRjZSBzdFxcdTAwRTF2YWpcXHUwMEVEY1xcdTAwRURjaCBzYWRcXHUwMTZGIG5hbGV6bmV0ZSBwb2R6aW1uXFx1MDBFRCBvZHJcXHUwMTZGZHkgZ2xvc3RlciwgcnViXFx1MDBFRG4gYSBnb2xkZW4gZGVsaWNpb3VzLiBNZXppIHppbW5cXHUwMEVEbWkgb2RyXFx1MDE2RmRhbWkgbVxcdTAwRTFtZSBpZGFyZWQgYSBzZWtvcmUuIFYgbm92XFx1MDExQiB2eXNcXHUwMEUxemVuXFx1MDBGRGNoIHNhZGVjaCwgamVqaWNoXFx1MDE3RSBuXFx1MDBFMXN0dXAgcGxvZG5vc3RpIG9cXHUwMTBEZWtcXHUwMEUxdlxcdTAwRTFtZSB2IHJvY2UgMjAyMywgcGFrIG1cXHUwMEUxbWUgb2RyXFx1MDE2RmR5IHRvcGF6IHJlZCwgam9uYWdvbGQsIGdvbGRzdGFyIGEgYm9oZW1pYS4gSmFibGthIGpzb3Ugb1xcdTAxNjFldFxcdTAxNTlvdlxcdTAwRTFuYSBkbGUgcHJhdmlkZWwgU0lTUE8sIHJ1XFx1MDEwRG5cXHUwMTFCIHNrbFxcdTAwRUR6ZW5hIGEgcG8gcFxcdTAxNTlldFxcdTAxNTlcXHUwMEVEZFxcdTAxMUJuXFx1MDBFRCBza2xhZG92XFx1MDBFMW5hIHYgY2hsYWRpY1xcdTAwRURtIGJveHUsIHZlIGt0ZXJcXHUwMEU5bSBqZSB6YWppXFx1MDE2MXRcXHUwMTFCbm8gb3B0aW1cXHUwMEUxbG5cXHUwMEVEIHByb3N0XFx1MDE1OWVkXFx1MDBFRCBwcm8gemFjaG92XFx1MDBFMW5cXHUwMEVEIGplamljaCBcXHUwMTBEZXJzdHZvc3RpLCBcXHUwMTBEXFx1MDBFRG1cXHUwMTdFIGpzbWUgc2Nob3BuaSBuYWJcXHUwMEVEemV0IGt2YWxpdG5cXHUwMEVEIGphYmxrYSBhXFx1MDE3RSBkbyBrb25jZSBqYXJhLiBcXHUwMTBDXFx1MDBFMXN0IFxcdTAwRkFyb2R5IHBhayB6cHJhY292XFx1MDBFMXZcXHUwMEUxbWUgbmEgamFibGVcXHUwMTBEblxcdTAwRkQgbW9cXHUwMTYxdCwga3RlclxcdTAwRTltdSBqc21lIGRhbGkgblxcdTAwRTF6ZXYgZGxlIGxva2FsaXR5IHBcXHUwMTZGdm9kdSwgYSB0byBcXHUwMTBDZXJ2ZW5vcGVcXHUwMTBEZWNrXFx1MDBGRC4gVlxcdTAwRkRyb2JhIHByb2JcXHUwMEVEaFxcdTAwRTEgdiBuYVxcdTAxNjFcXHUwMEVEIG1vXFx1MDE2MXRcXHUwMEUxcm5cXHUwMTFCLCBrZGUgamUgc2tsaXplblxcdTAwRTkgb3ZvY2UgbmVqcHJ2ZSBwXFx1MDE1OWV0XFx1MDE1OVxcdTAwRURkXFx1MDExQm5vIGEgblxcdTAwRTFzbGVkblxcdTAxMUIgb215dG8uIE9teXRcXHUwMEU5IG92b2NlIHZzdHVwdWplIGRvIGRydGlcXHUwMTBEZSwga2RlIGplIHJvemVtbGV0byBuYSBkcm9iblxcdTAwRTkga291c1xcdTAwRURcXHUwMTBEa3ksIGt0ZXJcXHUwMEU5IGpzb3Ugc3RsYVxcdTAxMERlbnkgdiBwbGFjaGV0a292XFx1MDBFOW0gbGlzdSB6YSBzb3VcXHUwMTBEYXNuXFx1MDBFOSBwcm9kdWtjZSBqYWJsZVxcdTAxMERuXFx1MDBFOSBcXHUwMTYxXFx1MDE2NVxcdTAwRTF2eS4gTW9cXHUwMTYxdCBuYWJcXHUwMEVEelxcdTAwRURtZSBidVxcdTAxMEYgamFrbyBcXHUwMTBEZXJzdHZcXHUwMEZEIG5lYm8gamUgenBhc3Rlcml6b3ZcXHUwMEUxbiBhIHBsblxcdTAxMUJuIGRvIG9iYWxcXHUwMTZGLiBLcm9tXFx1MDExQiBqYWJsZWsgenByYWNvdlxcdTAwRTF2XFx1MDBFMW1lIG5hIG1vXFx1MDE2MXQgaSBocnVcXHUwMTYxa3ksIGt0ZXJcXHUwMEU5IHBvY2hcXHUwMEUxelxcdTAwRUQgb2Qgb2tvbG5cXHUwMEVEY2ggb3ZvY25cXHUwMEUxXFx1MDE1OVxcdTAxNkYuIE9kIHJva3UgMjAxOSBqc21lIGRyXFx1MDE3RWl0ZWxlbSBjZXJ0aWZpa1xcdTAwRTF0dSByZWdpb25cXHUwMEUxbG5cXHUwMEVEaG8gcHJvZHVrdHUuXCIgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IFRleHRDb250ZW50O1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IEhvbWVTdWJQYWdlV3JhcHBlciwgQ29udGVudFdyYXBwZXIsIENvbHVtbnNXcmFwcGVyLCBDb2x1bW4sIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvTGF5b3V0XCI7XHJcbmltcG9ydCBQYWdlSW1hZ2UgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvUG9ydHJhaXRJbWFnZS9QYWdlSW1hZ2VcIjtcclxuaW1wb3J0IFRleHRDb250ZW50IGZyb20gXCIuL2NvbXBvbmVudHMvVGV4dENvbnRlbnRcIjtcclxuaW1wb3J0IHByb2R1Y3RzIGZyb20gXCJAcm9vdC9hc3NldHMvYm90dGxlc1dpZGVzY3JlZW4uanBnXCI7XHJcbmltcG9ydCBDb250ZW50SGVhZGVyIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9Db250ZW50SGVhZGVyXCI7XHJcbnZhciBQcm9kdWN0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoX2pzeChIb21lU3ViUGFnZVdyYXBwZXIsIHsgY2hpbGRyZW46IF9qc3goQ29udGVudFdyYXBwZXIsIHsgY2hpbGRyZW46IF9qc3hzKENvbHVtbnNXcmFwcGVyLCB7IGNoaWxkcmVuOiBbX2pzeHMoQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25MZWZ0OiB0cnVlIH0sIHsgY2hpbGRyZW46IFtfanN4KENvbnRlbnRIZWFkZXIsIHt9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2pzeChUZXh0Q29udGVudCwge30sIHZvaWQgMCldIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25SaWdodDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBfanN4KFBhZ2VJbWFnZSwgeyBzcmM6IHByb2R1Y3RzIH0sIHZvaWQgMCkgfSksIHZvaWQgMCldIH0sIHZvaWQgMCkgfSwgdm9pZCAwKSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgUHJvZHVjdHM7XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgeyBQYXJhZ3JhcGggfSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1RleHRDb250ZW50XCI7XHJcbnZhciBDb250ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4cyhfRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiTW9cXHUwMTYxdG92XFx1MDBFMW5cXHUwMEVEIHBybyB2ZVxcdTAxNTllam5vc3QgcHJvYlxcdTAwRURoXFx1MDBFMSBiXFx1MDExQmhlbSBwb2R6aW11LCBhIHRvIG5hIHpcXHUwMEUxa2xhZFxcdTAxMUIgdGVsZWZvbmlja1xcdTAwRTkgZG9ob2R5LlwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiTmFiXFx1MDBFRHpcXHUwMEVEbWUgdlxcdTAwRkRyb2J1IGphayBcXHUwMTBEZXJzdHZcXHUwMEU5aG8gbW9cXHUwMTYxdHUsIHRhayBWXFx1MDBFMW0gbW9cXHUwMTYxdCBtXFx1MDE2RlxcdTAxN0VlbWUgenBhc3Rlcml6b3ZhdC4gXFx1MDEwQ2Vyc3R2XFx1MDBGRCBtb1xcdTAxNjF0IGx6ZSBzdG9cXHUwMTBEaXQgZG8gVlxcdTAwRTFtaSBwXFx1MDE1OWl2ZXplblxcdTAwRkRjaCBuXFx1MDBFMWRvYiBuZWJvIHBvc2t5dG5lbWUgbmFcXHUwMTYxZSBuXFx1MDBFMWRvYnkuIFBhc3Rlcml6b3ZhblxcdTAwRkQgbW9cXHUwMTYxdCBzdFxcdTAwRTFcXHUwMTBEXFx1MDBFRG1lIHBvdXplIGRvIG5hXFx1MDE2MWljaCBiYWcgaW4gYm94IHNcXHUwMEUxXFx1MDEwRGtcXHUwMTZGLlwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlLCBwYWRkaW5nVG9wOiBcIjNyZW1cIiB9LCB7IGNoaWxkcmVuOiBcIkphayBwb3N0dXBvdmF0LCBrZHlcXHUwMTdFIGNoY2kgem1vXFx1MDE2MXRvdmF0IHN2XFx1MDBFOSBvdm9jZT9cIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIHsgY2hpbGRyZW46IFwiMS4gWlxcdTAwRTFrYXpuXFx1MDBFRGsgemF2b2xcXHUwMEUxIGEgZG9tbHV2XFx1MDBFRCBzZSB0ZXJtXFx1MDBFRG4gcFxcdTAxNTllZFxcdTAwRTFuXFx1MDBFRCBvdm9jZSAodlxcdTAxMUJ0XFx1MDE2MWlub3UgcFxcdTAwRTF0ZWsgcFxcdTAxNTllZCBtb1xcdTAxNjF0b3ZhY1xcdTAwRURtIHZcXHUwMEVEa2VuZGVtKS5cIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgeyBjaGlsZHJlbjogXCIyLiBaXFx1MDBFMWthem5cXHUwMEVEayB6a29udHJvbHVqZSBvdm9jZSwgemRhIHNlIHpkZSBuZXZ5c2t5dHVqXFx1MDBFRCBuYWhuaWxcXHUwMEU5IGEgemFibFxcdTAwRTFjZW5cXHUwMEU5IGt1c3kgKHBcXHUwMTU5XFx1MDBFRHBhZG5cXHUwMTFCIHBcXHUwMTU5ZXRcXHUwMTU5XFx1MDBFRGRcXHUwMEVEIGEgb215amUpLlwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCB7IGNoaWxkcmVuOiBcIjMuIFpcXHUwMEUxa2F6blxcdTAwRURrIHYgZG9tbHV2ZW5cXHUwMEZEIHRlcm1cXHUwMEVEbiBwXFx1MDE1OWl2ZXplIHprb250cm9sb3ZhblxcdTAwRTkgb3ZvY2UgZG8gbW9cXHUwMTYxdFxcdTAwRTFybnkuXCIgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIHsgY2hpbGRyZW46IFwiNC4gQVxcdTAxN0UgYnVkZSBvdm9jZSB6cHJhY292XFx1MDBFMW5vLCB0YWsgelxcdTAwRTFrYXpuXFx1MDBFRGthIGtvbnRha3R1amVtZSwgXFx1MDE3RWUgc2kgbVxcdTAxNkZcXHUwMTdFZSBtb1xcdTAxNjF0IHZ5enZlZG5vdXQgKHpwcmF2aWRsYSBqZSBtb1xcdTAxNjF0IHZ5cm9iZW4gYSBwXFx1MDE1OWlwcmF2ZW4gayB2eXp2ZWRudXRcXHUwMEVEIGJcXHUwMTFCaGVtIHZcXHUwMEVEa2VuZHUsIHpcXHUwMEUxbGVcXHUwMTdFXFx1MDBFRCBuYSByb3pzYWh1IG9iamVkblxcdTAwRTF2a3kpLlwiIH0sIHZvaWQgMCldIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb250ZW50O1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcclxuICAgIHZhciB0ID0ge307XHJcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcclxuICAgICAgICB0W3BdID0gc1twXTtcclxuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcclxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiB0O1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG52YXIgV2lkZ2V0ID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbiwgc3R5bGVQcm9wcyA9IF9fcmVzdChwcm9wcywgW1wiY2hpbGRyZW5cIl0pO1xyXG4gICAgcmV0dXJuIF9qc3goV3JhcHBlciwgX19hc3NpZ24oe30sIHN0eWxlUHJvcHMsIHsgY2hpbGRyZW46IGNoaWxkcmVuIH0pLCB2b2lkIDApO1xyXG59O1xyXG52YXIgV3JhcHBlciA9IHN0eWxlZC5kaXYodGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgcGFkZGluZzogM3JlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6IFwiLCBcIjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGhlaWdodDogXCIsIFwiO1xcbiAgbWFyZ2luLXRvcDogXCIsIFwiO1xcbiAgbWFyZ2luLWJvdHRvbTogXCIsIFwiO1xcblwiXSwgW1wiXFxuICBwYWRkaW5nOiAzcmVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogXCIsIFwiO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgaGVpZ2h0OiBcIiwgXCI7XFxuICBtYXJnaW4tdG9wOiBcIiwgXCI7XFxuICBtYXJnaW4tYm90dG9tOiBcIiwgXCI7XFxuXCJdKSksIGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gcHJvcHMudGhlbWUuY29sb3JzLndoaXRlOyB9LCBmdW5jdGlvbiAocHJvcHMpIHsgdmFyIF9hOyByZXR1cm4gKF9hID0gcHJvcHMuaGVpZ2h0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB1bmRlZmluZWQ7IH0sIGZ1bmN0aW9uIChwcm9wcykgeyB2YXIgX2E7IHJldHVybiAoX2EgPSBwcm9wcy5tYXJnaW5Ub3ApICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHVuZGVmaW5lZDsgfSwgZnVuY3Rpb24gKHByb3BzKSB7IHZhciBfYTsgcmV0dXJuIChfYSA9IHByb3BzLm1hcmdpbkJvdHRvbSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdW5kZWZpbmVkOyB9KTtcclxuZXhwb3J0IGRlZmF1bHQgV2lkZ2V0O1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IEhlYWRlciwgUGFyYWdyYXBoIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9UZXh0Q29udGVudFwiO1xyXG5pbXBvcnQgV2lkZ2V0IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnQvV2lkZ2V0XCI7XHJcbnZhciBDb250ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4cyhfRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4cyhXaWRnZXQsIHsgY2hpbGRyZW46IFtfanN4KEhlYWRlciwgeyBwcmltYXJ5OiB0cnVlLCB0aXRsZTogXCJcXHUwMTBDRVJTVFZcXHUwMEREIE1PXFx1MDE2MFRcIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUsIHByaW1hcnlDb2xvcjogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIk1vXFx1MDE2MXQgMSBsIFxcdTAwQTA1IEtcXHUwMTBEXCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgYm9sZDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIi8gKyA1IEtcXHUwMTBEIG5cXHUwMEUxZG9iYSAxLDUgbCAvXCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgc21hbGxGb250U2l6ZTogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIkNlbGtvdlxcdTAwRTEgY2VuYSB6YSBsaXRyIFxcdTAxNjFcXHUwMTY1XFx1MDBFMXZ5IHpcXHUwMEVEc2thblxcdTAwRTkgeiBWYVxcdTAxNjFlaG8gb3ZvY2UsIGt0ZXJcXHUwMEU5IGJ5bG8gcFxcdTAxNTlldFxcdTAxNTlcXHUwMEVEZFxcdTAxMUJubywgb215dG8sIGRyY2VubyBhIGxpc292XFx1MDBFMW5vLiBQb2t1ZCBtXFx1MDBFMXRlIHZsYXN0blxcdTAwRUQgblxcdTAwRTFkb2J1LCBkbyBrdGVyXFx1MDBFOSBjaGNldGUgbW9cXHUwMTYxdCBzdG9cXHUwMTBEaXQsIHBhayB6YSBuXFx1MDBFMWRvYnUgc2Ftb3pcXHUwMTU5ZWptXFx1MDExQiBuaWMgbmVwbGF0XFx1MDBFRHRlLlwiIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4cyhXaWRnZXQsIHsgY2hpbGRyZW46IFtfanN4KEhlYWRlciwgeyBwcmltYXJ5OiB0cnVlLCB0aXRsZTogXCJQQVNURVJJWk9WQU5cXHUwMEREIE1PXFx1MDE2MFRcIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUsIHByaW1hcnlDb2xvcjogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIk1vXFx1MDE2MXQgMyBsIFxcdTAwQTAzMCBLXFx1MDEwRFwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCIvICsgMTUgS1xcdTAxMEQgc1xcdTAwRTFcXHUwMTBEZWsgMyBsIC9cIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiLyArIDUgS1xcdTAxMEQga2FydG9ub3ZcXHUwMEUxIGtyYWJpY2UgMyBsIC9cIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBzbWFsbEZvbnRTaXplOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiQ2Vsa292XFx1MDBFMSBjZW5hIHphIDMgbCBzXFx1MDBFMVxcdTAxMERlayBuYXBsblxcdTAxMUJuXFx1MDBGRCBcXHUwMTYxXFx1MDE2NVxcdTAwRTF2b3UgelxcdTAwRURza2Fub3UgeiBWYVxcdTAxNjFlaG8gb3ZvY2UsIGt0ZXJcXHUwMEU5IGJ5bG8gcFxcdTAxNTlldFxcdTAxNTlcXHUwMEVEZFxcdTAxMUJubywgb215dG8sIGRyY2VubywgbGlzb3ZcXHUwMEUxbm8gYSB6XFx1MDBFRHNrYW5cXHUwMEUxIFxcdTAxNjFcXHUwMTY1XFx1MDBFMXZhIHpwYXN0ZXJpem92XFx1MDBFMW5hIGEgcGxuXFx1MDExQm5hIGRvIHNcXHUwMEUxXFx1MDEwRGt1LiBEb3BvcnVcXHUwMTBEdWplbWUgayBzXFx1MDBFMVxcdTAxMERrdSB6YWtvdXBpdCBpIGthcnRvbm92b3Uga3JhYmljaSwga3Rlcm91IG1cXHUwMTZGXFx1MDE3RWV0ZSBwb3VcXHUwMTdFXFx1MDBFRHZhdCBpIG9wYWtvdmFuXFx1MDExQi5cIiB9KSwgdm9pZCAwKV0gfSwgdm9pZCAwKV0gfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IENvbnRlbnQ7XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IExlZnRDb2x1bW4gZnJvbSBcIi4vY29tcG9uZW50cy9MZWZ0Q29sdW1uXCI7XHJcbmltcG9ydCBSaWdodENvbHVtbiBmcm9tIFwiLi9jb21wb25lbnRzL1JpZ2h0Q29sdW1uXCI7XHJcbmltcG9ydCB7IEhvbWVTdWJQYWdlV3JhcHBlciwgQ29udGVudFdyYXBwZXIsIENvbHVtbnNXcmFwcGVyLCBDb2x1bW4sIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvTGF5b3V0XCI7XHJcbmltcG9ydCBDb250ZW50SGVhZGVyIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9Db250ZW50SGVhZGVyXCI7XHJcbnZhciBQdWJsaWNBcHBsZUp1aWNpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3goSG9tZVN1YlBhZ2VXcmFwcGVyLCB7IGNoaWxkcmVuOiBfanN4KENvbnRlbnRXcmFwcGVyLCB7IGNoaWxkcmVuOiBfanN4cyhDb2x1bW5zV3JhcHBlciwgeyBjaGlsZHJlbjogW19qc3hzKENvbHVtbiwgX19hc3NpZ24oeyBpc09uTGVmdDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBbX2pzeChDb250ZW50SGVhZGVyLCB7fSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9qc3goTGVmdENvbHVtbiwge30sIHZvaWQgMCldIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25SaWdodDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBfanN4KFJpZ2h0Q29sdW1uLCB7fSwgdm9pZCAwKSB9KSwgdm9pZCAwKV0gfSwgdm9pZCAwKSB9LCB2b2lkIDApIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBQdWJsaWNBcHBsZUp1aWNpbmc7XHJcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IFBhcmFncmFwaCB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnRcIjtcclxudmFyIFRleHRDb250ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4KFBhcmFncmFwaCwgeyBjaGlsZHJlbjogXCJTYWRhXFx1MDE1OXN0dlxcdTAwRUQgdiBcXHUwMTBDZXJ2ZW5cXHUwMEZEY2ggUGVcXHUwMTBEa1xcdTAwRTFjaCBtXFx1MDBFMSBkbG91aG9sZXRvdSB0cmFkaWNpLCB2ZSBrdGVyXFx1MDBFOSBzZSBuYVxcdTAxNjFlIHJvZGluYSBzbmFcXHUwMTdFXFx1MDBFRCBwb2tyYVxcdTAxMERvdmF0LiBIb3Nwb2RhXFx1MDE1OVxcdTAwRURtZSBuYSBjZWxrb3ZcXHUwMEU5IHBsb1xcdTAxNjFlIDcgaGVrdGFyXFx1MDE2RiBhIHZcXHUwMTFCbnVqZW1lIHNlIGplZG5hayBwXFx1MDBFOVxcdTAxMERpIG8gc3RcXHUwMEUxdmFqXFx1MDBFRGNcXHUwMEVEIHN0YXJcXHUwMEU5IG92b2NuXFx1MDBFOSBzdHJvbXkgdHZhcnUgelxcdTAwRTFrcnNrdSBuZWJvIFxcdTAxMER0dnJrbWVudSwgYWxlIHpcXHUwMEUxcm92ZVxcdTAxNDggcG9zdHVwblxcdTAxMUIgemFrbFxcdTAwRTFkXFx1MDBFMW1lIHNhZHkgbm92XFx1MDBFOS4gViBub3ZcXHUwMEZEY2ggc2FkZWNoIHZ5dVxcdTAxN0VcXHUwMEVEdlxcdTAwRTFtZSBtb2Rlcm5cXHUwMEVEIHBcXHUwMTFCc3RlYm5cXHUwMEVEIHN5c3RcXHUwMEU5bSB0dmFydSBcXHUwMTYxdFxcdTAwRURobFxcdTAwRkRjaCB2XFx1MDE1OWV0ZW5lY2gsIHBybyBrdGVyXFx1MDBFOSBqZSB6YnVkb3ZcXHUwMEUxbmEgc2Ftb25vc25cXHUwMEUxIG9wXFx1MDExQnJuXFx1MDBFMSBrb25zdHJ1a2NlIHZcXHUwMTBEZXRuXFx1MDExQiBvY2hyYW55IHByb3RpIGtyb3VwXFx1MDBFMW0uIFBybyB6XFx1MDBFMWxpdmt1IHBhayBzbG91XFx1MDE3RVxcdTAwRUQgc3lzdFxcdTAwRTltIGthcGtvdlxcdTAwRTkgelxcdTAwRTF2bGFoeS4gViBva29sXFx1MDBFRCBzYWR1IHBhayB1ZHJcXHUwMTdFdWplbWUgc3RhclxcdTAwRTkgXFx1MDEwRGVza1xcdTAwRTkgb2RyXFx1MDE2RmR5IG5hIHZ5c29rb2ttZW5lY2guIFNuYVxcdTAxN0VcXHUwMEVEbWUgc2UgenVcXHUwMTdFaXRrb3ZhdCB6a3VcXHUwMTYxZW5vc3RpIG5hXFx1MDE2MWljaCBwXFx1MDE1OWVka1xcdTAxNkYgYSB6XFx1MDBFMXJvdmVcXHUwMTQ4IHZvbFxcdTAwRURtZSBub3ZcXHUwMEU5IHBcXHUwMTU5XFx1MDBFRHN0dXB5IHRhaywgYWJ5Y2hvbSB2IG1heGltXFx1MDBFMWxuXFx1MDBFRCBtb1xcdTAxN0VuXFx1MDBFOSBtXFx1MDBFRFxcdTAxNTllIFxcdTAxN0VpbGkgdiBzb3VsYWR1IHMgcFxcdTAxNTlcXHUwMEVEcm9kb3UuIFYgbmFcXHUwMTYxaWNoIHNhZGVjaCBuYWxlem5ldGUgaG5cXHUwMEVEemRpXFx1MDE2MXRcXHUwMTFCIHBybyBwdFxcdTAwRTFreSwgcHRhXFx1MDEwRFxcdTAwRUQgYnVka3ksIGJpZFxcdTAwRkRsa2EgcHJvIGRyYXZjZSBuZWJvIFxcdTAwRkFrcnl0eSBwcm8gaG15eiBhIGRyb2JuXFx1MDBFOSBcXHUwMTdFaXZvXFx1MDEwRGljaHkuIFNhZCBwcm9jaFxcdTAwRTF6XFx1MDBFRCBrYVxcdTAxN0Vkb3JvXFx1MDEwRG5cXHUwMTFCIHppbW5cXHUwMEVEbSBhIGxldG5cXHUwMEVEbSBcXHUwMTU5ZXplbSwgaSBuZXpieXRub3UgXFx1MDBGQWRyXFx1MDE3RWJvdSB6ZWxlblxcdTAxMUIuIE1vbml0b3J1amVtZSB2XFx1MDBGRHNreXQgXFx1MDE2MWtcXHUwMTZGZGNcXHUwMTZGIGEgY2hvcm9iLCBwcm90aSBrdGVyXFx1MDBGRG0gc2Ugc25hXFx1MDE3RVxcdTAwRURtZSBhcGxpa292YXQgcFxcdTAxNTlpcm96ZW5cXHUwMEU5IHpwXFx1MDE2RnNvYnkgb2NocmFueSBkbGUgcHJhdmlkZWwgc3ZhenUgcHJvIGludGVncm92YW5cXHUwMEU5IHN5c3RcXHUwMEU5bXkgcFxcdTAxMUJzdG92XFx1MDBFMW5cXHUwMEVEIG92b2NlIGEgc3RcXHUwMTU5ZWRvXFx1MDEwRGVza1xcdTAwRTkgb3ZvY25cXHUwMEUxXFx1MDE1OXNrXFx1MDBFOSB1bmllLlwiIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBUZXh0Q29udGVudDtcclxuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgeyBIb21lU3ViUGFnZVdyYXBwZXIsIENvbnRlbnRXcmFwcGVyLCBDb2x1bW5zV3JhcHBlciwgQ29sdW1uLCB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dFwiO1xyXG5pbXBvcnQgUGFnZUltYWdlIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L1BvcnRyYWl0SW1hZ2UvUGFnZUltYWdlXCI7XHJcbmltcG9ydCBUZXh0Q29udGVudCBmcm9tIFwiLi9jb21wb25lbnRzL1RleHRDb250ZW50XCI7XHJcbmltcG9ydCBmcnVpdE9yY2hhcmRzIGZyb20gXCJAcm9vdC9hc3NldHMvY3V0ZUxhZHkuanBnXCI7XHJcbmltcG9ydCBDb250ZW50SGVhZGVyIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dC9Db250ZW50SGVhZGVyXCI7XHJcbnZhciBGcnVpdE9yY2hhcmRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4KEhvbWVTdWJQYWdlV3JhcHBlciwgeyBjaGlsZHJlbjogX2pzeChDb250ZW50V3JhcHBlciwgeyBjaGlsZHJlbjogX2pzeHMoQ29sdW1uc1dyYXBwZXIsIHsgY2hpbGRyZW46IFtfanN4cyhDb2x1bW4sIF9fYXNzaWduKHsgaXNPbkxlZnQ6IHRydWUgfSwgeyBjaGlsZHJlbjogW19qc3goQ29udGVudEhlYWRlciwge30sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfanN4KFRleHRDb250ZW50LCB7fSwgdm9pZCAwKV0gfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChDb2x1bW4sIF9fYXNzaWduKHsgaXNPblJpZ2h0OiB0cnVlIH0sIHsgY2hpbGRyZW46IF9qc3goUGFnZUltYWdlLCB7IHNyYzogZnJ1aXRPcmNoYXJkcyB9LCB2b2lkIDApIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApIH0sIHZvaWQgMCkgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IEZydWl0T3JjaGFyZHM7XHJcbiIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XHJcbnZhciBTdHlsZWRNYXAgPSBzdHlsZWQuaWZyYW1lKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gIGJvcmRlcjogMDtcXG4gIG1hcmdpbi10b3A6IDFyZW07XFxuXCJdLCBbXCJcXG4gIGJvcmRlcjogMDtcXG4gIG1hcmdpbi10b3A6IDFyZW07XFxuXCJdKSkpO1xyXG5leHBvcnQgZGVmYXVsdCBTdHlsZWRNYXA7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgQ29sdW1uLCBDb2x1bW5zV3JhcHBlciB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvUGFnZXNDb250ZW50L0xheW91dFwiO1xyXG5pbXBvcnQgeyBIZWFkZXIsIFBhcmFncmFwaCB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnRcIjtcclxuaW1wb3J0IFN0eWxlZE1hcCBmcm9tIFwiLi9TdHlsZWRNYXBcIjtcclxudmFyIENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3hzKF9GcmFnbWVudCwgeyBjaGlsZHJlbjogW19qc3goSGVhZGVyLCB7IHRpdGxlOiBcIlZcXHUwMEZEcm9iYSBtb1xcdTAxNjF0dVwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJUb21cXHUwMEUxXFx1MDE2MSBBZGFtZWNcIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgcGFkZGluZ1RvcDogXCIwLjVyZW1cIiB9LCB7IGNoaWxkcmVuOiBcIis0MjAgNjA0IDQwMiA3NjMgLyBpbmZvQGNlcnZlbm9wZWNlY2t5bW9zdC5jelwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KEhlYWRlciwgeyB0aXRsZTogXCJTYWRhXFx1MDE1OXN0dlxcdTAwRURcIiwgbWFyZ2luVG9wOiBcIjRyZW1cIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiSmlcXHUwMTU5XFx1MDBFRCBBZGFtZWMgc3RcIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgcGFkZGluZ1RvcDogXCIwLjVyZW1cIiB9LCB7IGNoaWxkcmVuOiBcIis0MjAgNzMxIDE3MSAyNTYgLyBpbmZvQGNlcnZlbm9wZWNlY2t5bW9zdC5jelwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KEhlYWRlciwgeyB0aXRsZTogXCJTYWRhXFx1MDE1OXN0dlxcdTAwRURcIiwgbWFyZ2luVG9wOiBcIjRyZW1cIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiQW1cXHUwMEUxbGthIDcyLCBcXHUwMTBDZXJ2ZW5cXHUwMEU5IFBlXFx1MDEwRGt5XCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHBhZGRpbmdUb3A6IFwiMC41cmVtXCIgfSwgeyBjaGlsZHJlbjogXCJOYSBwcm9kZWpuXFx1MDExQiBsemUgZG8gdnlwcm9kXFx1MDBFMW5cXHUwMEVEIHpcXHUwMEUxc29iIHpha291cGl0IGphYmxrYSwgc3VcXHUwMTYxZW5cXHUwMEU5IG92b2NlLCBcXHUwMTBEZXJzdHZcXHUwMEZEIGkgcGFzdGVyaXpvdmFuXFx1MDBGRCBtb1xcdTAxNjF0LlwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4cyhDb2x1bW5zV3JhcHBlciwgeyBjaGlsZHJlbjogW19qc3hzKENvbHVtbiwgeyBjaGlsZHJlbjogW19qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHBhZGRpbmdUb3A6IFwiNHJlbVwiLCBib2xkOiB0cnVlLCBwcmltYXJ5Q29sb3I6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJcXHUwMTU5XFx1MDBFRGplbiBcXHUyMDEzIGxpc3RvcGFkXCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBwYWRkaW5nVG9wOiBcIjAuNXJlbVwiLCBib2xkOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwic29ib3RhIDlcXHUyMDEzMTIgaG9kLlwiIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3hzKENvbHVtbiwgeyBjaGlsZHJlbjogW19qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHBhZGRpbmdUb3A6IFwiNHJlbVwiLCBib2xkOiB0cnVlLCBwcmltYXJ5Q29sb3I6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJiXFx1MDE1OWV6ZW4gXFx1MjAxMyBrdlxcdTAxMUJ0ZW5cIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHBhZGRpbmdUb3A6IFwiMC41cmVtXCIsIGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJzdFxcdTAxNTllZGEgMTZcXHUyMDEzMTggaG9kLlwiIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApXSB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFN0eWxlZE1hcCwgeyBzcmM6IFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL2VtYmVkP3BiPSExbTE4ITFtMTIhMW0zITFkNTM5LjM1MDQxMTcwNDUyMzkhMmQxNS4yMDMzODY1MzgwODA1MSEzZDQ5Ljk4MTQwODUwNTI4NzEzNSEybTMhMWYwITJmMCEzZjAhM20yITFpMTAyNCEyaTc2OCE0ZjEzLjEhM20zITFtMiExczB4NDcwYzZhOTI1NGZjNzMzNyUzQTB4YmVjOTliOTEzZThmN2U2ZSEyelFXM0RvV3hyWVNBM01pd2dNamd4SURJeElNU01aWEoyWlc3RHFTQlFaY1NOYTNrITVlMCEzbTIhMXNjcyEyc2N6ITR2MTYxODk1NDEwNTcyNCE1bTIhMXNjcyEyc2N6XCIsIHdpZHRoOiBcIjEwMCVcIiwgaGVpZ2h0OiBcIjI1MHB4XCIsIGxvYWRpbmc6IFwibGF6eVwiIH0sIHZvaWQgMCldIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb250ZW50O1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgSGVhZGVyLCBQYXJhZ3JhcGggfSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1RleHRDb250ZW50XCI7XHJcbmltcG9ydCBXaWRnZXQgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9UZXh0Q29udGVudC9XaWRnZXRcIjtcclxuaW1wb3J0IFN0eWxlZE1hcCBmcm9tIFwiLi9TdHlsZWRNYXBcIjtcclxudmFyIENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3hzKF9GcmFnbWVudCwgeyBjaGlsZHJlbjogW19qc3hzKFdpZGdldCwgX19hc3NpZ24oeyBoZWlnaHQ6IFwiMjcycHhcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChIZWFkZXIsIHsgcHJpbWFyeTogdHJ1ZSwgdGl0bGU6IFwiRkFLVFVSQVxcdTAxMENOXFx1MDBDRCBBRFJFU0FcIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJUb21cXHUwMEUxXFx1MDE2MSBBZGFtZWNcIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgeyBjaGlsZHJlbjogXCJJXFx1MDEwQ086IDA2MjE1NzE4XCIgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgeyBjaGlsZHJlbjogXCJTXFx1MDBFRGRsbzogXFx1MDE2MGtvbG5cXHUwMEVEIDE5NiwgXFx1MDEwQ2VydmVuXFx1MDBFOSBQZVxcdTAxMERreSAyODEgMjFcIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCB7IGNoaWxkcmVuOiBcIlByb3Zvem92bmE6IEFtXFx1MDBFMWxrYSA3MiwgXFx1MDEwQ2VydmVuXFx1MDBFOSBQZVxcdTAxMERreSAyODEgMjFcIiB9LCB2b2lkIDApXSB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChIZWFkZXIsIHsgdGl0bGU6IFwiQ2Vsb3JvXFx1MDEwRG5cXHUwMEVEIHByb2RlalwiLCBtYXJnaW5Ub3A6IFwiNHJlbVwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJEciAuRHZvXFx1MDE1OVxcdTAwRTFrYSAzOTQsIFxcdTAxMENlcnZlblxcdTAwRTkgUGVcXHUwMTBEa3lcIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgcGFkZGluZ1RvcDogXCIwLjVyZW1cIiB9LCB7IGNoaWxkcmVuOiBcIkRvIHZ5cHJvZFxcdTAwRTFuXFx1MDBFRCB6XFx1MDBFMXNvYiBsemUgemFrb3VwaXQgamFibGthLCBzdVxcdTAxNjFlblxcdTAwRTkgb3ZvY2UgYSBwYXN0ZXJpem92YW5cXHUwMEZEIG1vXFx1MDE2MXQuXCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUsIHByaW1hcnlDb2xvcjogdHJ1ZSwgcGFkZGluZ1RvcDogXCI0cmVtXCIgfSwgeyBjaGlsZHJlbjogXCJwb25kXFx1MDExQmxcXHUwMEVEIFxcdTIwMTMgcFxcdTAwRTF0ZWtcIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeHMoUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHBhZGRpbmdUb3A6IFwiMC41cmVtXCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJzcGFuXCIsIF9fYXNzaWduKHsgc3R5bGU6IHsgZm9udFdlaWdodDogNzAwIH0gfSwgeyBjaGlsZHJlbjogXCIxN1xcdTIwMTMyMCBob2QuXCIgfSksIHZvaWQgMCksIFwiIC8gbmVibyBkbGUgZG9tbHV2eSB2b2xlanRlICs0MjAgNzMxIDE3MSAyNTZcIl0gfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goU3R5bGVkTWFwLCB7IHNyYzogXCJodHRwczovL3d3dy5nb29nbGUuY29tL21hcHMvZW1iZWQ/cGI9ITFtMTghMW0xMiExbTMhMWQzMjAuNzQ5NzQxNzM3MzM1NSEyZDE1LjIwNDEzNTg1NDc2NTA0NSEzZDQ5Ljk3Mzg5NzI5OTA5OTk4ITJtMyExZjAhMmYwITNmMCEzbTIhMWkxMDI0ITJpNzY4ITRmMTMuMSEzbTMhMW0yITFzMHg0NzBjNmE4ZWI0NzRjODY3JTNBMHg0NWVkYTM1MjBkZWJlMDc0ITJ6UkhJdUlFUjJiOFdadzZGcllTQXpPVFFzSURJNE1TQXlNU0RFakdWeWRtVnV3NmtnVUdYRWpXdDUhNWUwITNtMiExc2NzITJzY3ohNHYxNjE4OTU1MDUxMzExITVtMiExc2NzITJzY3pcIiwgd2lkdGg6IFwiMTAwJVwiLCBoZWlnaHQ6IFwiMjUwcHhcIiwgbG9hZGluZzogXCJsYXp5XCIgfSwgdm9pZCAwKV0gfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IENvbnRlbnQ7XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IExlZnRDb2x1bW4gZnJvbSBcIi4vY29tcG9uZW50cy9MZWZ0Q29sdW1uXCI7XHJcbmltcG9ydCBSaWdodENvbHVtbiBmcm9tIFwiLi9jb21wb25lbnRzL1JpZ2h0Q29sdW1uXCI7XHJcbmltcG9ydCB7IEhvbWVTdWJQYWdlV3JhcHBlciwgQ29udGVudFdyYXBwZXIsIENvbHVtbnNXcmFwcGVyLCBDb2x1bW4sIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvTGF5b3V0XCI7XHJcbnZhciBDb250YWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4KEhvbWVTdWJQYWdlV3JhcHBlciwgeyBjaGlsZHJlbjogX2pzeChDb250ZW50V3JhcHBlciwgeyBjaGlsZHJlbjogX2pzeHMoQ29sdW1uc1dyYXBwZXIsIHsgY2hpbGRyZW46IFtfanN4KENvbHVtbiwgX19hc3NpZ24oeyBpc09uTGVmdDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBfanN4KExlZnRDb2x1bW4sIHt9LCB2b2lkIDApIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25SaWdodDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBfanN4KFJpZ2h0Q29sdW1uLCB7fSwgdm9pZCAwKSB9KSwgdm9pZCAwKV0gfSwgdm9pZCAwKSB9LCB2b2lkIDApIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb250YWN0O1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgUGFyYWdyYXBoIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9UZXh0Q29udGVudFwiO1xyXG52YXIgQ29udGVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoX2pzeHMoX0ZyYWdtZW50LCB7IGNoaWxkcmVuOiBbX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgYm9sZDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIk1vXFx1MDE2MXRvdlxcdTAwRTFuXFx1MDBFRCBwcm8gdmVcXHUwMTU5ZWpub3N0IHByb2JcXHUwMEVEaFxcdTAwRTEgYlxcdTAxMUJoZW0gcG9kemltdSwgYSB0byBuYSB6XFx1MDBFMWtsYWRcXHUwMTFCIHRlbGVmb25pY2tcXHUwMEU5IGRvaG9keS5cIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgYm9sZDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIk5hYlxcdTAwRUR6XFx1MDBFRG1lIHZcXHUwMEZEcm9idSBqYWsgXFx1MDEwRGVyc3R2XFx1MDBFOWhvIG1vXFx1MDE2MXR1LCB0YWsgVlxcdTAwRTFtIG1vXFx1MDE2MXQgbVxcdTAxNkZcXHUwMTdFZW1lIHpwYXN0ZXJpem92YXQuIFxcdTAxMENlcnN0dlxcdTAwRkQgbW9cXHUwMTYxdCBsemUgc3RvXFx1MDEwRGl0IGRvIFZcXHUwMEUxbWkgcFxcdTAxNTlpdmV6ZW5cXHUwMEZEY2ggblxcdTAwRTFkb2IgbmVibyBwb3NreXRuZW1lIG5hXFx1MDE2MWUgblxcdTAwRTFkb2J5LiBQYXN0ZXJpem92YW5cXHUwMEZEIG1vXFx1MDE2MXQgc3RcXHUwMEUxXFx1MDEwRFxcdTAwRURtZSBwb3V6ZSBkbyBuYVxcdTAxNjFpY2ggYmFnIGluIGJveCBzXFx1MDBFMVxcdTAxMERrXFx1MDE2Ri5cIiB9KSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgYm9sZDogdHJ1ZSwgcGFkZGluZ1RvcDogXCIzcmVtXCIgfSwgeyBjaGlsZHJlbjogXCJKYWsgcG9zdHVwb3ZhdCwga2R5XFx1MDE3RSBjaGNpIHptb1xcdTAxNjF0b3ZhdCBzdlxcdTAwRTkgb3ZvY2U/XCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCB7IGNoaWxkcmVuOiBcIjEuIFpcXHUwMEUxa2F6blxcdTAwRURrIHphdm9sXFx1MDBFMSBhIGRvbWx1dlxcdTAwRUQgc2UgdGVybVxcdTAwRURuIHBcXHUwMTU5ZWRcXHUwMEUxblxcdTAwRUQgb3ZvY2UgKHZcXHUwMTFCdFxcdTAxNjFpbm91IHBcXHUwMEUxdGVrIHBcXHUwMTU5ZWQgbW9cXHUwMTYxdG92YWNcXHUwMEVEbSB2XFx1MDBFRGtlbmRlbSkuXCIgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIHsgY2hpbGRyZW46IFwiMi4gWlxcdTAwRTFrYXpuXFx1MDBFRGsgemtvbnRyb2x1amUgb3ZvY2UsIHpkYSBzZSB6ZGUgbmV2eXNreXR1alxcdTAwRUQgbmFobmlsXFx1MDBFOSBhIHphYmxcXHUwMEUxY2VuXFx1MDBFOSBrdXN5IChwXFx1MDE1OVxcdTAwRURwYWRuXFx1MDExQiBwXFx1MDE1OWV0XFx1MDE1OVxcdTAwRURkXFx1MDBFRCBhIG9teWplKS5cIiB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgeyBjaGlsZHJlbjogXCIzLiBaXFx1MDBFMWthem5cXHUwMEVEayB2IGRvbWx1dmVuXFx1MDBGRCB0ZXJtXFx1MDBFRG4gcFxcdTAxNTlpdmV6ZSB6a29udHJvbG92YW5cXHUwMEU5IG92b2NlIGRvIG1vXFx1MDE2MXRcXHUwMEUxcm55LlwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCB7IGNoaWxkcmVuOiBcIjQuIEFcXHUwMTdFIGJ1ZGUgb3ZvY2UgenByYWNvdlxcdTAwRTFubywgdGFrIHpcXHUwMEUxa2F6blxcdTAwRURrYSBrb250YWt0dWplbWUsIFxcdTAxN0VlIHNpIG1cXHUwMTZGXFx1MDE3RWUgbW9cXHUwMTYxdCB2eXp2ZWRub3V0ICh6cHJhdmlkbGEgamUgbW9cXHUwMTYxdCB2eXJvYmVuIGEgcFxcdTAxNTlpcHJhdmVuIGsgdnl6dmVkbnV0XFx1MDBFRCBiXFx1MDExQmhlbSB2XFx1MDBFRGtlbmR1LCB6XFx1MDBFMWxlXFx1MDE3RVxcdTAwRUQgbmEgcm96c2FodSBvYmplZG5cXHUwMEUxdmt5KS5cIiB9LCB2b2lkIDApXSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgQ29udGVudDtcclxuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IEhlYWRlciwgUGFyYWdyYXBoIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9UZXh0Q29udGVudFwiO1xyXG5pbXBvcnQgV2lkZ2V0IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvVGV4dENvbnRlbnQvV2lkZ2V0XCI7XHJcbnZhciBDb250ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4cyhfRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4cyhXaWRnZXQsIF9fYXNzaWduKHsgbWFyZ2luQm90dG9tOiBcIjJyZW1cIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChIZWFkZXIsIHsgcHJpbWFyeTogdHJ1ZSwgdGl0bGU6IFwiXFx1MDEwQ0VSU1RWXFx1MDBERCBNT1xcdTAxNjBUXCIgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICBfanN4KFBhcmFncmFwaCwgX19hc3NpZ24oeyBib2xkOiB0cnVlLCBwcmltYXJ5Q29sb3I6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJNb1xcdTAxNjF0IDEgbCBcXHUwMEEwNSBLXFx1MDEwRFwiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCIvICsgNSBLXFx1MDEwRCBuXFx1MDBFMWRvYmEgMSw1IGwgL1wiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHNtYWxsRm9udFNpemU6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJDZWxrb3ZcXHUwMEUxIGNlbmEgemEgbGl0ciBcXHUwMTYxXFx1MDE2NVxcdTAwRTF2eSB6XFx1MDBFRHNrYW5cXHUwMEU5IHogVmFcXHUwMTYxZWhvIG92b2NlLCBrdGVyXFx1MDBFOSBieWxvIHBcXHUwMTU5ZXRcXHUwMTU5XFx1MDBFRGRcXHUwMTFCbm8sIG9teXRvLCBkcmNlbm8gYSBsaXNvdlxcdTAwRTFuby4gUG9rdWQgbVxcdTAwRTF0ZSB2bGFzdG5cXHUwMEVEIG5cXHUwMEUxZG9idSwgZG8ga3RlclxcdTAwRTkgY2hjZXRlIG1vXFx1MDE2MXQgc3RvXFx1MDEwRGl0LCBwYWsgemEgblxcdTAwRTFkb2J1IHNhbW96XFx1MDE1OWVqbVxcdTAxMUIgbmljIG5lcGxhdFxcdTAwRUR0ZS5cIiB9KSwgdm9pZCAwKV0gfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgIF9qc3hzKFdpZGdldCwgeyBjaGlsZHJlbjogW19qc3goSGVhZGVyLCB7IHByaW1hcnk6IHRydWUsIHRpdGxlOiBcIlBBU1RFUklaT1ZBTlxcdTAwREQgTU9cXHUwMTYwVFwiIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgYm9sZDogdHJ1ZSwgcHJpbWFyeUNvbG9yOiB0cnVlIH0sIHsgY2hpbGRyZW46IFwiTW9cXHUwMTYxdCAzIGwgXFx1MDBBMDMwIEtcXHUwMTBEXCIgfSksIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgYm9sZDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBcIi8gKyAxNSBLXFx1MDEwRCBzXFx1MDBFMVxcdTAxMERlayAzIGwgL1wiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IGJvbGQ6IHRydWUgfSwgeyBjaGlsZHJlbjogXCIvICsgNSBLXFx1MDEwRCBrYXJ0b25vdlxcdTAwRTEga3JhYmljZSAzIGwgL1wiIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goUGFyYWdyYXBoLCBfX2Fzc2lnbih7IHNtYWxsRm9udFNpemU6IHRydWUgfSwgeyBjaGlsZHJlbjogXCJDZWxrb3ZcXHUwMEUxIGNlbmEgemEgMyBsIHNcXHUwMEUxXFx1MDEwRGVrIG5hcGxuXFx1MDExQm5cXHUwMEZEIFxcdTAxNjFcXHUwMTY1XFx1MDBFMXZvdSB6XFx1MDBFRHNrYW5vdSB6IFZhXFx1MDE2MWVobyBvdm9jZSwga3RlclxcdTAwRTkgYnlsbyBwXFx1MDE1OWV0XFx1MDE1OVxcdTAwRURkXFx1MDExQm5vLCBvbXl0bywgZHJjZW5vLCBsaXNvdlxcdTAwRTFubyBhIHpcXHUwMEVEc2thblxcdTAwRTEgXFx1MDE2MVxcdTAxNjVcXHUwMEUxdmEgenBhc3Rlcml6b3ZcXHUwMEUxbmEgYSBwbG5cXHUwMTFCbmEgZG8gc1xcdTAwRTFcXHUwMTBEa3UuIERvcG9ydVxcdTAxMER1amVtZSBrIHNcXHUwMEUxXFx1MDEwRGt1IHpha291cGl0IGkga2FydG9ub3ZvdSBrcmFiaWNpLCBrdGVyb3UgbVxcdTAxNkZcXHUwMTdFZXRlIHBvdVxcdTAxN0VcXHUwMEVEdmF0IGkgb3Bha292YW5cXHUwMTFCLlwiIH0pLCB2b2lkIDApXSB9LCB2b2lkIDApXSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgQ29udGVudDtcclxuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgTGVmdENvbHVtbiBmcm9tIFwiLi9jb21wb25lbnRzL0xlZnRDb2x1bW5cIjtcclxuaW1wb3J0IFJpZ2h0Q29sdW1uIGZyb20gXCIuL2NvbXBvbmVudHMvUmlnaHRDb2x1bW5cIjtcclxuaW1wb3J0IHsgSG9tZVN1YlBhZ2VXcmFwcGVyLCBDb250ZW50V3JhcHBlciwgQ29sdW1uc1dyYXBwZXIsIENvbHVtbiwgfSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1BhZ2VzQ29udGVudC9MYXlvdXRcIjtcclxuaW1wb3J0IENvbnRlbnRIZWFkZXIgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9QYWdlc0NvbnRlbnQvTGF5b3V0L0NvbnRlbnRIZWFkZXJcIjtcclxudmFyIFdhbnRUb0ZydWl0UHJlc3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3goSG9tZVN1YlBhZ2VXcmFwcGVyLCB7IGNoaWxkcmVuOiBfanN4KENvbnRlbnRXcmFwcGVyLCB7IGNoaWxkcmVuOiBfanN4cyhDb2x1bW5zV3JhcHBlciwgeyBjaGlsZHJlbjogW19qc3hzKENvbHVtbiwgX19hc3NpZ24oeyBpc09uTGVmdDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBbX2pzeChDb250ZW50SGVhZGVyLCB7fSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9qc3goTGVmdENvbHVtbiwge30sIHZvaWQgMCldIH0pLCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goQ29sdW1uLCBfX2Fzc2lnbih7IGlzT25SaWdodDogdHJ1ZSB9LCB7IGNoaWxkcmVuOiBfanN4KFJpZ2h0Q29sdW1uLCB7fSwgdm9pZCAwKSB9KSwgdm9pZCAwKV0gfSwgdm9pZCAwKSB9LCB2b2lkIDApIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBXYW50VG9GcnVpdFByZXNzO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG52YXIgQ29udGVudFdyYXBwZXIgPSBzdHlsZWQuZGl2KHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gIGZsZXg6IDE7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgZmxleC13cmFwOiB3cmFwO1xcblwiXSwgW1wiXFxuICBmbGV4OiAxO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG5cIl0pKSk7XHJcbmV4cG9ydCBkZWZhdWx0IENvbnRlbnRXcmFwcGVyO1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuIiwiaW1wb3J0IGFwcGxlcyBmcm9tIFwiQHJvb3QvYXNzZXRzL2N1dGVMYWR5LmpwZ1wiO1xyXG5leHBvcnQgdmFyIGRhdGEgPSBbXHJcbiAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiTU/FoFQgSkFCTEtPXCIsXHJcbiAgICAgICAgcHJpY2VzOiBbXCI3MCBLxI0gLyAyIGxcIiwgXCI5MCBLxI0gLyAzIGxcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb25zOiBbXCIxMDAgJSBqYWJsa28sIHBhc3Rlcml6b3bDoW5vLlwiLCBcIkJhbGVubyB2IGtyYWJpY2kuXCJdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB0aXRsZTogXCJNT8WgVCBIUlXFoEtBXCIsXHJcbiAgICAgICAgcHJpY2VzOiBbXCI3MCBLxI0gLyAyIGxcIiwgXCI5MCBLxI0gLyAzIGxcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb25zOiBbXCIxMDAgJSBocnXFoWthLCBwYXN0ZXJpem92w6Fuby5cIiwgXCJCYWxlbm8gdiBrcmFiaWNpLlwiXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiTU/FoFQgSkFCTEtPIEEgSFJVxaBLQVwiLFxyXG4gICAgICAgIHByaWNlczogW1wiNzAgS8SNIC8gMiBsXCIsIFwiOTAgS8SNIC8gMyBsXCJdLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uczogW1xyXG4gICAgICAgICAgICBcIjUwICUgamFibGtvLCA1MCAlIGhydcWha2FcIixcclxuICAgICAgICAgICAgXCJwYXN0ZXJpem92w6Fuby4gQmFsZW5vIHYga3JhYmljaS5cIixcclxuICAgICAgICBdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB0aXRsZTogXCLEjEVSU1RWw50gTU/FoFRcIixcclxuICAgICAgICBwcmljZXM6IFtcIjIwIEvEjSAvIDEgbFwiXSxcclxuICAgICAgICBkZXNjcmlwdGlvbnM6IFtcIkphYmxrbyAvIGhydcWha2FcIiwgXCJkbGUgZGVubsOtIG5hYsOtZGt5LlwiXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiU1XFoEVOw4kgSkFCTEtPXCIsXHJcbiAgICAgICAgcHJpY2VzOiBbXCI0MCBLxI0gLyAxMDAgZ1wiXSxcclxuICAgICAgICBkZXNjcmlwdGlvbnM6IFtcIjEwMCAlIGphYmxlxI1uw6kgcGzDoXRreVwiLCBcIkJhbGVubyB2IHPDocSNa3UuXCJdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB0aXRsZTogXCJTVcWgRU7DgSBIUlXFoEtBXCIsXHJcbiAgICAgICAgcHJpY2VzOiBbXCI0MCBLxI0gLyAxMDAgZ1wiXSxcclxuICAgICAgICBkZXNjcmlwdGlvbnM6IFtcIjEwMCAlIGhydcWha292w6kgcGzDoXRreS5cIiwgXCJCYWxlbm8gdiBzw6HEjWt1LlwiXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiU1XFoEVOw4kgSkFCTEtPIEEgSFJVxaBLQVwiLFxyXG4gICAgICAgIHByaWNlczogW1wiNDAgS8SNIC8gMTAwIGdcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb25zOiBbXCI1MCAlIGphYmxlxI1uw6kgYSA1MCAlIGhydcWha292w6lcIiwgXCJwbMOhdGt5LiBCYWxlbm8gdiBzw6HEjWt1LlwiXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiSkFCTEtBXCIsXHJcbiAgICAgICAgcHJpY2VzOiBbXCJvZCAyMCBLxI0gLyAxIGtnXCJdLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uczogW1wiT2Ryxa9keSBkbGUgc2tsaXpuxJsuXCJdLFxyXG4gICAgICAgIHNyYzogYXBwbGVzLFxyXG4gICAgfSxcclxuXTtcclxuIiwidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG52YXIgUHJvZHVjdEltYWdlID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgc3JjID0gX2Euc3JjLCB0aXRsZSA9IF9hLnRpdGxlO1xyXG4gICAgcmV0dXJuIChfanN4KFdyYXBwZXIsIHsgY2hpbGRyZW46IHNyYyA/IChfanN4KFwiaW1nXCIsIHsgc3JjOiBzcmMsIGFsdDogdGl0bGUgfSwgdm9pZCAwKSkgOiAoX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJpbWFnZVBsYWNlaG9sZGVyXCIgfSwgeyBjaGlsZHJlbjogXCJmb3RvXCIgfSksIHZvaWQgMCkpIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0SW1hZ2U7XHJcbnZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBoZWlnaHQ6IDIwMHB4O1xcbiAgbWF4LWhlaWdodDogMjAwcHg7XFxuICBtaW4td2lkdGg6IDI1MHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICA+IGltZyB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICB6LWluZGV4OiAxO1xcbiAgfVxcblxcbiAgLmltYWdlUGxhY2Vob2xkZXIge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogXCIsIFwiO1xcbiAgfVxcblwiXSwgW1wiXFxuICBoZWlnaHQ6IDIwMHB4O1xcbiAgbWF4LWhlaWdodDogMjAwcHg7XFxuICBtaW4td2lkdGg6IDI1MHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICA+IGltZyB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICB6LWluZGV4OiAxO1xcbiAgfVxcblxcbiAgLmltYWdlUGxhY2Vob2xkZXIge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogXCIsIFwiO1xcbiAgfVxcblwiXSkpLCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy53aGl0ZTsgfSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5leHBvcnQgdmFyIFRpdGxlID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgdGl0bGUgPSBfYS50aXRsZTtcclxuICAgIHJldHVybiBfanN4KFdyYXBwZXIsIHsgY2hpbGRyZW46IHRpdGxlIH0sIHZvaWQgMCk7XHJcbn07XHJcbnZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBmb250LWZhbWlseTogXFxcImJhcmxvd1xcXCI7XFxuICBmb250LXNpemU6IDJyZW07XFxuICBjb2xvcjogXCIsIFwiO1xcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xcblwiXSwgW1wiXFxuICBmb250LWZhbWlseTogXFxcImJhcmxvd1xcXCI7XFxuICBmb250LXNpemU6IDJyZW07XFxuICBjb2xvcjogXCIsIFwiO1xcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xcblwiXSkpLCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLnRoZW1lLmNvbG9ycy5yZWRMaWdodDsgfSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5leHBvcnQgdmFyIFByaWNlID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgdmFsdWUgPSBfYS52YWx1ZTtcclxuICAgIHJldHVybiBfanN4KFdyYXBwZXIsIHsgY2hpbGRyZW46IHZhbHVlIH0sIHZvaWQgMCk7XHJcbn07XHJcbnZhciBXcmFwcGVyID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBmb250LWZhbWlseTogXFxcImJhcmxvd1xcXCI7XFxuICBmb250LXNpemU6IDJyZW07XFxuICBtYXJnaW4tdG9wOiAwLjI1cmVtO1xcblwiXSwgW1wiXFxuICBmb250LWZhbWlseTogXFxcImJhcmxvd1xcXCI7XFxuICBmb250LXNpemU6IDJyZW07XFxuICBtYXJnaW4tdG9wOiAwLjI1cmVtO1xcblwiXSkpKTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgUGFyYWdyYXBoIH0gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9UZXh0Q29udGVudFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5pbXBvcnQgUHJvZHVjdEltYWdlIGZyb20gXCIuL1Byb2R1Y3RJbWFnZVwiO1xyXG5pbXBvcnQgeyBUaXRsZSB9IGZyb20gXCIuL1RpdGxlXCI7XHJcbmltcG9ydCB7IFByaWNlIH0gZnJvbSBcIi4vUHJpY2VcIjtcclxudmFyIFByb2R1Y3RJdGVtID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICB2YXIgc3JjID0gcHJvcHMuc3JjLCB0aXRsZSA9IHByb3BzLnRpdGxlLCBwcmljZXMgPSBwcm9wcy5wcmljZXMsIGRlc2NyaXB0aW9ucyA9IHByb3BzLmRlc2NyaXB0aW9ucztcclxuICAgIHJldHVybiAoX2pzeHMoV3JhcHBlciwgeyBjaGlsZHJlbjogW19qc3goUHJvZHVjdEltYWdlLCB7IHNyYzogc3JjLCB0aXRsZTogdGl0bGUgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgX2pzeChUaXRsZSwgeyB0aXRsZTogdGl0bGUgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgcHJpY2VzLm1hcChmdW5jdGlvbiAocHJpY2UpIHsgcmV0dXJuIChfanN4KFByaWNlLCB7IHZhbHVlOiBwcmljZSB9LCBwcmljZSkpOyB9KSxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb25zLm1hcChmdW5jdGlvbiAoZGVzY3JpcHRpb24sIGluZGV4KSB7IHJldHVybiAoX2pzeChQYXJhZ3JhcGgsIF9fYXNzaWduKHsgcGFkZGluZ1RvcDogaW5kZXggPT09IDAgPyBcIjAuNzVyZW1cIiA6IFwiMHJlbVwiIH0sIHsgY2hpbGRyZW46IGRlc2NyaXB0aW9uIH0pLCBkZXNjcmlwdGlvbikpOyB9KV0gfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IFByb2R1Y3RJdGVtO1xyXG52YXIgV3JhcHBlciA9IHN0eWxlZC5kaXYodGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgZmxleDogMTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIG1hcmdpbjogMXJlbSAwLjRyZW0gNHJlbSAwLjRyZW07XFxuXCJdLCBbXCJcXG4gIGZsZXg6IDE7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBtYXJnaW46IDFyZW0gMC40cmVtIDRyZW0gMC40cmVtO1xcblwiXSkpKTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzE7XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgUGFnZVdyYXBwZXIgfSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1BhZ2VzQ29udGVudC9MYXlvdXRcIjtcclxuaW1wb3J0IENvbnRlbnRXcmFwcGVyIGZyb20gXCIuL2NvbXBvbmVudHMvQ29udGVudFdyYXBwZXJcIjtcclxuaW1wb3J0IHsgZGF0YSB9IGZyb20gXCIuL2NvbXBvbmVudHMvbW9ja1wiO1xyXG5pbXBvcnQgUHJvZHVjdEl0ZW0gZnJvbSBcIi4vY29tcG9uZW50cy9Qcm9kdWN0SXRlbVwiO1xyXG52YXIgT3VyUHJvZHVjdHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3goUGFnZVdyYXBwZXIsIHsgY2hpbGRyZW46IF9qc3goQ29udGVudFdyYXBwZXIsIHsgY2hpbGRyZW46IGRhdGEubWFwKGZ1bmN0aW9uIChpKSB7IHJldHVybiAoX2pzeChQcm9kdWN0SXRlbSwgX19hc3NpZ24oe30sIGkpLCBpLnRpdGxlKSk7IH0pIH0sIHZvaWQgMCkgfSwgdm9pZCAwKSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IE91clByb2R1Y3RzO1xyXG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgUGFnZUxheW91dCBmcm9tIFwiQHNyYy9jb21wb25lbnRzL1BhZ2VzQ29udGVudC9MYXlvdXQvUGFnZVwiO1xyXG52YXIgV2hlcmVUb0J1eSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBfanN4KFBhZ2VMYXlvdXQsIHsgY2hpbGRyZW46IFwiS2RlIHpha291cGl0XCIgfSwgdm9pZCAwKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgV2hlcmVUb0J1eTtcclxuIiwiaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFN3aXRjaCwgUm91dGUgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcIi4vaW5kZXhcIjtcclxuaW1wb3J0IE5vdEZvdW5kIGZyb20gXCIuL05vdEZvdW5kL05vdGZvdW5kXCI7XHJcbmltcG9ydCBIb21lIGZyb20gXCJAc3JjL3BhZ2VzL0hvbWUvSG9tZVwiO1xyXG5pbXBvcnQgV29ya1BsYWNlIGZyb20gXCJAc3JjL3BhZ2VzL1dvcmtQbGFjZS9Xb3JrUGxhY2VcIjtcclxuaW1wb3J0IFByb2R1Y3RzIGZyb20gXCJAc3JjL3BhZ2VzL1Byb2R1Y3RzL1Byb2R1Y3RzXCI7XHJcbmltcG9ydCBQdWJsaWNBcHBsZUp1aWNpbmcgZnJvbSBcIkBzcmMvcGFnZXMvUHVibGljQXBwbGVKdWljaW5nL1B1YmxpY0FwcGxlSnVpY2luZ1wiO1xyXG5pbXBvcnQgRnJ1aXRPcmNoYXJkcyBmcm9tIFwiLi9GcnVpdE9yY2hhcmRzL0ZydWl0T3JjaGFyZHNcIjtcclxuaW1wb3J0IENvbnRhY3QgZnJvbSBcIi4vQ29udGFjdC9Db250YWN0XCI7XHJcbmltcG9ydCBXYW50VG9GcnVpdFByZXNzIGZyb20gXCIuL1dhbnRUb0ZydWl0UHJlc3MvV2FudFRvRnJ1aXRQcmVzc1wiO1xyXG5pbXBvcnQgT3VyUHJvZHVjdHMgZnJvbSBcIi4vT3VyUHJvZHVjdHMvT3VyUHJvZHVjdHNcIjtcclxuaW1wb3J0IEVTaG9wIGZyb20gXCIuL1doZXJlVG9CdXkvV2hlcmVUb0J1eVwiO1xyXG52YXIgUm91dGVzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChfanN4KFJvdXRlciwgeyBjaGlsZHJlbjogX2pzeHMoU3dpdGNoLCB7IGNoaWxkcmVuOiBbX2pzeChSb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogUGFnZS5Ib21lLCBjb21wb25lbnQ6IEhvbWUgfSwgdm9pZCAwKSxcclxuICAgICAgICAgICAgICAgIF9qc3goUm91dGUsIHsgcGF0aDogUGFnZS5Xb3JrUGxhY2UsIGNvbXBvbmVudDogV29ya1BsYWNlIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFJvdXRlLCB7IHBhdGg6IFBhZ2UuUHVibGljQXBwbGVKdWljaW5nLCBjb21wb25lbnQ6IFB1YmxpY0FwcGxlSnVpY2luZyB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgX2pzeChSb3V0ZSwgeyBwYXRoOiBQYWdlLlByb2R1Y3RzLCBjb21wb25lbnQ6IFByb2R1Y3RzIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFJvdXRlLCB7IHBhdGg6IFBhZ2UuRnJ1aXRPcmNoYXJkcywgY29tcG9uZW50OiBGcnVpdE9yY2hhcmRzIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFJvdXRlLCB7IHBhdGg6IFBhZ2UuV2hlcmVUb0J1eSwgY29tcG9uZW50OiBFU2hvcCB9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgX2pzeChSb3V0ZSwgeyBwYXRoOiBQYWdlLk91clByb2R1Y3RzLCBjb21wb25lbnQ6IE91clByb2R1Y3RzIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFJvdXRlLCB7IHBhdGg6IFBhZ2UuQ29udGFjdCwgY29tcG9uZW50OiBDb250YWN0IH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFJvdXRlLCB7IHBhdGg6IFBhZ2UuV2FudFRvRnJ1aXRQcmVzcywgY29tcG9uZW50OiBXYW50VG9GcnVpdFByZXNzIH0sIHZvaWQgMCksXHJcbiAgICAgICAgICAgICAgICBfanN4KFJvdXRlLCB7IGNvbXBvbmVudDogTm90Rm91bmQgfSwgdm9pZCAwKV0gfSwgdm9pZCAwKSB9LCB2b2lkIDApKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgUm91dGVzO1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IENvbnRleHQgfSBmcm9tIFwiLi9jb250ZXh0XCI7XHJcbnZhciBDb250ZXh0UHJvdmlkZXIgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuO1xyXG4gICAgdmFyIF9iID0gdXNlU3RhdGUodHJ1ZSksIHNob3dMYW5kaW5nUGFnZSA9IF9iWzBdLCBzZXRTaG93TGFuZGluZ1BhZ2UgPSBfYlsxXTtcclxuICAgIHZhciBjb250ZXh0ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7IHJldHVybiAoe1xyXG4gICAgICAgIHNob3dMYW5kaW5nUGFnZTogc2hvd0xhbmRpbmdQYWdlLFxyXG4gICAgICAgIHNldFNob3dMYW5kaW5nUGFnZTogc2V0U2hvd0xhbmRpbmdQYWdlLFxyXG4gICAgfSk7IH0sIFtzaG93TGFuZGluZ1BhZ2UsIHNldFNob3dMYW5kaW5nUGFnZV0pO1xyXG4gICAgcmV0dXJuIF9qc3goQ29udGV4dC5Qcm92aWRlciwgX19hc3NpZ24oeyB2YWx1ZTogY29udGV4dCB9LCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KSwgdm9pZCAwKTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgQ29udGV4dFByb3ZpZGVyO1xyXG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXHJcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XHJcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IEhlYWQgZnJvbSBcIi4vY29tcG9uZW50cy9Eb2N1bWVudEhlYWQvRG9jdW1lbnRIZWFkXCI7XHJcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgdGhlbWUgfSBmcm9tIFwiLi9zdHlsZXMvdGhlbWVcIjtcclxuaW1wb3J0IEdsb2JhbFN0eWxlcyBmcm9tIFwiLi9zdHlsZXMvZ2xvYmFsc1wiO1xyXG5pbXBvcnQgUm91dGVzIGZyb20gXCIuL3BhZ2VzL1JvdXRlc1wiO1xyXG5pbXBvcnQgQ29udGV4dFByb3ZpZGVyIGZyb20gXCIuL2NvbnRleHQvQ29udGV4dFByb3ZpZGVyXCI7XHJcbnZhciBBcHAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKF9qc3hzKFJlYWN0LlN0cmljdE1vZGUsIHsgY2hpbGRyZW46IFtfanN4KEhlYWQsIHt9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICBfanN4cyhUaGVtZVByb3ZpZGVyLCBfX2Fzc2lnbih7IHRoZW1lOiB0aGVtZSB9LCB7IGNoaWxkcmVuOiBbX2pzeChHbG9iYWxTdHlsZXMsIHt9LCB2b2lkIDApLFxyXG4gICAgICAgICAgICAgICAgICAgIF9qc3goQ29udGV4dFByb3ZpZGVyLCB7IGNoaWxkcmVuOiBfanN4KFJvdXRlcywge30sIHZvaWQgMCkgfSwgdm9pZCAwKV0gfSksIHZvaWQgMCldIH0sIHZvaWQgMCkpO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBBcHA7XHJcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XHJcbmltcG9ydCBBcHAgZnJvbSBcIi4vc3JjL0FwcFwiO1xyXG5SZWFjdERPTS5yZW5kZXIoX2pzeChBcHAsIHt9LCB2b2lkIDApLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Jvb3RcIikpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9